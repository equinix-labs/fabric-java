/*
 * Equinix Fabric API v4
 *
 * Contact: api-support@equinix.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.equinix.openapi.fabric.v4.model;

import java.util.Objects;
import java.util.Arrays;
import com.equinix.openapi.fabric.v4.model.Changelog;
import com.equinix.openapi.fabric.v4.model.RouteTableEntryConnection;
import com.equinix.openapi.fabric.v4.model.RouteTableEntryProtocolType;
import com.equinix.openapi.fabric.v4.model.RouteTableEntryState;
import com.equinix.openapi.fabric.v4.model.RouteTableEntryType;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Route table entry object
 */
@JsonPropertyOrder({
  RouteTableEntry.JSON_PROPERTY_TYPE,
  RouteTableEntry.JSON_PROPERTY_PROTOCOL_TYPE,
  RouteTableEntry.JSON_PROPERTY_STATE,
  RouteTableEntry.JSON_PROPERTY_AGE,
  RouteTableEntry.JSON_PROPERTY_PREFIX,
  RouteTableEntry.JSON_PROPERTY_NEXT_HOP,
  RouteTableEntry.JSON_PROPERTY_METRIC,
  RouteTableEntry.JSON_PROPERTY_LOCAL_PREFERENCE,
  RouteTableEntry.JSON_PROPERTY_AS_PATH,
  RouteTableEntry.JSON_PROPERTY_CONNECTION,
  RouteTableEntry.JSON_PROPERTY_CHANGE_LOG
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class RouteTableEntry {
  public static final String JSON_PROPERTY_TYPE = "type";
  private RouteTableEntryType type;

  public static final String JSON_PROPERTY_PROTOCOL_TYPE = "protocolType";
  private RouteTableEntryProtocolType protocolType;

  public static final String JSON_PROPERTY_STATE = "state";
  private RouteTableEntryState state;

  public static final String JSON_PROPERTY_AGE = "age";
  private String age;

  public static final String JSON_PROPERTY_PREFIX = "prefix";
  private String prefix;

  public static final String JSON_PROPERTY_NEXT_HOP = "nextHop";
  private String nextHop;

  public static final String JSON_PROPERTY_METRIC = "metric";
  private Integer metric;

  public static final String JSON_PROPERTY_LOCAL_PREFERENCE = "localPreference";
  private Integer localPreference;

  public static final String JSON_PROPERTY_AS_PATH = "asPath";
  private List<Integer> asPath = new ArrayList<>();

  public static final String JSON_PROPERTY_CONNECTION = "connection";
  private RouteTableEntryConnection connection;

  public static final String JSON_PROPERTY_CHANGE_LOG = "changeLog";
  private Changelog changeLog;

  public RouteTableEntry() {
  }

  public RouteTableEntry type(RouteTableEntryType type) {
    
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public RouteTableEntryType getType() {
    return type;
  }


  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setType(RouteTableEntryType type) {
    this.type = type;
  }


  public RouteTableEntry protocolType(RouteTableEntryProtocolType protocolType) {
    
    this.protocolType = protocolType;
    return this;
  }

   /**
   * Get protocolType
   * @return protocolType
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PROTOCOL_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public RouteTableEntryProtocolType getProtocolType() {
    return protocolType;
  }


  @JsonProperty(JSON_PROPERTY_PROTOCOL_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setProtocolType(RouteTableEntryProtocolType protocolType) {
    this.protocolType = protocolType;
  }


  public RouteTableEntry state(RouteTableEntryState state) {
    
    this.state = state;
    return this;
  }

   /**
   * Get state
   * @return state
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_STATE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public RouteTableEntryState getState() {
    return state;
  }


  @JsonProperty(JSON_PROPERTY_STATE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setState(RouteTableEntryState state) {
    this.state = state;
  }


  public RouteTableEntry age(String age) {
    
    this.age = age;
    return this;
  }

   /**
   * Get age
   * @return age
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_AGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAge() {
    return age;
  }


  @JsonProperty(JSON_PROPERTY_AGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAge(String age) {
    this.age = age;
  }


  public RouteTableEntry prefix(String prefix) {
    
    this.prefix = prefix;
    return this;
  }

   /**
   * Get prefix
   * @return prefix
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PREFIX)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPrefix() {
    return prefix;
  }


  @JsonProperty(JSON_PROPERTY_PREFIX)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPrefix(String prefix) {
    this.prefix = prefix;
  }


  public RouteTableEntry nextHop(String nextHop) {
    
    this.nextHop = nextHop;
    return this;
  }

   /**
   * Get nextHop
   * @return nextHop
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NEXT_HOP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getNextHop() {
    return nextHop;
  }


  @JsonProperty(JSON_PROPERTY_NEXT_HOP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNextHop(String nextHop) {
    this.nextHop = nextHop;
  }


  public RouteTableEntry metric(Integer metric) {
    
    this.metric = metric;
    return this;
  }

   /**
   * Get metric
   * @return metric
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_METRIC)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getMetric() {
    return metric;
  }


  @JsonProperty(JSON_PROPERTY_METRIC)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMetric(Integer metric) {
    this.metric = metric;
  }


  public RouteTableEntry localPreference(Integer localPreference) {
    
    this.localPreference = localPreference;
    return this;
  }

   /**
   * Get localPreference
   * @return localPreference
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LOCAL_PREFERENCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getLocalPreference() {
    return localPreference;
  }


  @JsonProperty(JSON_PROPERTY_LOCAL_PREFERENCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLocalPreference(Integer localPreference) {
    this.localPreference = localPreference;
  }


  public RouteTableEntry asPath(List<Integer> asPath) {
    
    this.asPath = asPath;
    return this;
  }

  public RouteTableEntry addAsPathItem(Integer asPathItem) {
    if (this.asPath == null) {
      this.asPath = new ArrayList<>();
    }
    this.asPath.add(asPathItem);
    return this;
  }

   /**
   * Get asPath
   * @return asPath
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_AS_PATH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<Integer> getAsPath() {
    return asPath;
  }


  @JsonProperty(JSON_PROPERTY_AS_PATH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAsPath(List<Integer> asPath) {
    this.asPath = asPath;
  }


  public RouteTableEntry connection(RouteTableEntryConnection connection) {
    
    this.connection = connection;
    return this;
  }

   /**
   * Get connection
   * @return connection
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CONNECTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public RouteTableEntryConnection getConnection() {
    return connection;
  }


  @JsonProperty(JSON_PROPERTY_CONNECTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setConnection(RouteTableEntryConnection connection) {
    this.connection = connection;
  }


  public RouteTableEntry changeLog(Changelog changeLog) {
    
    this.changeLog = changeLog;
    return this;
  }

   /**
   * Get changeLog
   * @return changeLog
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CHANGE_LOG)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Changelog getChangeLog() {
    return changeLog;
  }


  @JsonProperty(JSON_PROPERTY_CHANGE_LOG)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setChangeLog(Changelog changeLog) {
    this.changeLog = changeLog;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RouteTableEntry routeTableEntry = (RouteTableEntry) o;
    return Objects.equals(this.type, routeTableEntry.type) &&
        Objects.equals(this.protocolType, routeTableEntry.protocolType) &&
        Objects.equals(this.state, routeTableEntry.state) &&
        Objects.equals(this.age, routeTableEntry.age) &&
        Objects.equals(this.prefix, routeTableEntry.prefix) &&
        Objects.equals(this.nextHop, routeTableEntry.nextHop) &&
        Objects.equals(this.metric, routeTableEntry.metric) &&
        Objects.equals(this.localPreference, routeTableEntry.localPreference) &&
        Objects.equals(this.asPath, routeTableEntry.asPath) &&
        Objects.equals(this.connection, routeTableEntry.connection) &&
        Objects.equals(this.changeLog, routeTableEntry.changeLog);
  }

  @Override
  public int hashCode() {
    return Objects.hash(type, protocolType, state, age, prefix, nextHop, metric, localPreference, asPath, connection, changeLog);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RouteTableEntry {\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    protocolType: ").append(toIndentedString(protocolType)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    age: ").append(toIndentedString(age)).append("\n");
    sb.append("    prefix: ").append(toIndentedString(prefix)).append("\n");
    sb.append("    nextHop: ").append(toIndentedString(nextHop)).append("\n");
    sb.append("    metric: ").append(toIndentedString(metric)).append("\n");
    sb.append("    localPreference: ").append(toIndentedString(localPreference)).append("\n");
    sb.append("    asPath: ").append(toIndentedString(asPath)).append("\n");
    sb.append("    connection: ").append(toIndentedString(connection)).append("\n");
    sb.append("    changeLog: ").append(toIndentedString(changeLog)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}


/*
 * Equinix Fabric API v4
 *
 * Contact: api-support@equinix.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.equinix.openapi.fabric.v4.model;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

import java.util.Objects;

/**
 * Connection link protocol configuration - QINQ
 */
@JsonPropertyOrder({
  LinkProtocolQinq.JSON_PROPERTY_TYPE,
  LinkProtocolQinq.JSON_PROPERTY_INNER_TAG_PROTOCOL_ID,
  LinkProtocolQinq.JSON_PROPERTY_OUTER_TAG_PROTOCOL_ID,
  LinkProtocolQinq.JSON_PROPERTY_VLAN_C_TAG,
  LinkProtocolQinq.JSON_PROPERTY_VLAN_S_TAG,
  LinkProtocolQinq.JSON_PROPERTY_VLAN_C_TAG_MIN,
  LinkProtocolQinq.JSON_PROPERTY_VLAN_C_TAG_MAX,
  LinkProtocolQinq.JSON_PROPERTY_SUB_INTERFACE
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class LinkProtocolQinq {
  public static final String JSON_PROPERTY_TYPE = "type";
  private LinkProtocolType type;

  public static final String JSON_PROPERTY_INNER_TAG_PROTOCOL_ID = "innerTagProtocolId";
  private Integer innerTagProtocolId;

  public static final String JSON_PROPERTY_OUTER_TAG_PROTOCOL_ID = "outerTagProtocolId";
  private Integer outerTagProtocolId;

  public static final String JSON_PROPERTY_VLAN_C_TAG = "vlanCTag";
  private Integer vlanCTag;

  public static final String JSON_PROPERTY_VLAN_S_TAG = "vlanSTag";
  private Integer vlanSTag;

  public static final String JSON_PROPERTY_VLAN_C_TAG_MIN = "vlanCTagMin";
  private Integer vlanCTagMin;

  public static final String JSON_PROPERTY_VLAN_C_TAG_MAX = "vlanCTagMax";
  private Integer vlanCTagMax;

  public static final String JSON_PROPERTY_SUB_INTERFACE = "subInterface";
  private Integer subInterface;

  public LinkProtocolQinq() {
  }

  public LinkProtocolQinq type(LinkProtocolType type) {
    
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public LinkProtocolType getType() {
    return type;
  }


  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setType(LinkProtocolType type) {
    this.type = type;
  }


  public LinkProtocolQinq innerTagProtocolId(Integer innerTagProtocolId) {
    
    this.innerTagProtocolId = innerTagProtocolId;
    return this;
  }

   /**
   * Inner tag protocol identifier
   * @return innerTagProtocolId
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_INNER_TAG_PROTOCOL_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getInnerTagProtocolId() {
    return innerTagProtocolId;
  }


  @JsonProperty(JSON_PROPERTY_INNER_TAG_PROTOCOL_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setInnerTagProtocolId(Integer innerTagProtocolId) {
    this.innerTagProtocolId = innerTagProtocolId;
  }


  public LinkProtocolQinq outerTagProtocolId(Integer outerTagProtocolId) {
    
    this.outerTagProtocolId = outerTagProtocolId;
    return this;
  }

   /**
   * Outer tag protocol identifier
   * @return outerTagProtocolId
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_OUTER_TAG_PROTOCOL_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getOuterTagProtocolId() {
    return outerTagProtocolId;
  }


  @JsonProperty(JSON_PROPERTY_OUTER_TAG_PROTOCOL_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setOuterTagProtocolId(Integer outerTagProtocolId) {
    this.outerTagProtocolId = outerTagProtocolId;
  }


  public LinkProtocolQinq vlanCTag(Integer vlanCTag) {
    
    this.vlanCTag = vlanCTag;
    return this;
  }

   /**
   * Inner tag, i.e., C-VLAN tag
   * @return vlanCTag
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_VLAN_C_TAG)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getVlanCTag() {
    return vlanCTag;
  }


  @JsonProperty(JSON_PROPERTY_VLAN_C_TAG)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setVlanCTag(Integer vlanCTag) {
    this.vlanCTag = vlanCTag;
  }


  public LinkProtocolQinq vlanSTag(Integer vlanSTag) {
    
    this.vlanSTag = vlanSTag;
    return this;
  }

   /**
   * Outer tag, i.e., S-VLAN tag
   * @return vlanSTag
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_VLAN_S_TAG)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getVlanSTag() {
    return vlanSTag;
  }


  @JsonProperty(JSON_PROPERTY_VLAN_S_TAG)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setVlanSTag(Integer vlanSTag) {
    this.vlanSTag = vlanSTag;
  }


  public LinkProtocolQinq vlanCTagMin(Integer vlanCTagMin) {
    
    this.vlanCTagMin = vlanCTagMin;
    return this;
  }

   /**
   * Outer tag Min value specified for QINQ connections
   * @return vlanCTagMin
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_VLAN_C_TAG_MIN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getVlanCTagMin() {
    return vlanCTagMin;
  }


  @JsonProperty(JSON_PROPERTY_VLAN_C_TAG_MIN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setVlanCTagMin(Integer vlanCTagMin) {
    this.vlanCTagMin = vlanCTagMin;
  }


  public LinkProtocolQinq vlanCTagMax(Integer vlanCTagMax) {
    
    this.vlanCTagMax = vlanCTagMax;
    return this;
  }

   /**
   * Outer tag Max value specified for QINQ connections
   * @return vlanCTagMax
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_VLAN_C_TAG_MAX)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getVlanCTagMax() {
    return vlanCTagMax;
  }


  @JsonProperty(JSON_PROPERTY_VLAN_C_TAG_MAX)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setVlanCTagMax(Integer vlanCTagMax) {
    this.vlanCTagMax = vlanCTagMax;
  }


  public LinkProtocolQinq subInterface(Integer subInterface) {
    
    this.subInterface = subInterface;
    return this;
  }

   /**
   * Subinterface identifier
   * @return subInterface
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SUB_INTERFACE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getSubInterface() {
    return subInterface;
  }


  @JsonProperty(JSON_PROPERTY_SUB_INTERFACE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSubInterface(Integer subInterface) {
    this.subInterface = subInterface;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LinkProtocolQinq linkProtocolQinq = (LinkProtocolQinq) o;
    return Objects.equals(this.type, linkProtocolQinq.type) &&
        Objects.equals(this.innerTagProtocolId, linkProtocolQinq.innerTagProtocolId) &&
        Objects.equals(this.outerTagProtocolId, linkProtocolQinq.outerTagProtocolId) &&
        Objects.equals(this.vlanCTag, linkProtocolQinq.vlanCTag) &&
        Objects.equals(this.vlanSTag, linkProtocolQinq.vlanSTag) &&
        Objects.equals(this.vlanCTagMin, linkProtocolQinq.vlanCTagMin) &&
        Objects.equals(this.vlanCTagMax, linkProtocolQinq.vlanCTagMax) &&
        Objects.equals(this.subInterface, linkProtocolQinq.subInterface);
  }

  @Override
  public int hashCode() {
    return Objects.hash(type, innerTagProtocolId, outerTagProtocolId, vlanCTag, vlanSTag, vlanCTagMin, vlanCTagMax, subInterface);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class LinkProtocolQinq {\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    innerTagProtocolId: ").append(toIndentedString(innerTagProtocolId)).append("\n");
    sb.append("    outerTagProtocolId: ").append(toIndentedString(outerTagProtocolId)).append("\n");
    sb.append("    vlanCTag: ").append(toIndentedString(vlanCTag)).append("\n");
    sb.append("    vlanSTag: ").append(toIndentedString(vlanSTag)).append("\n");
    sb.append("    vlanCTagMin: ").append(toIndentedString(vlanCTagMin)).append("\n");
    sb.append("    vlanCTagMax: ").append(toIndentedString(vlanCTagMax)).append("\n");
    sb.append("    subInterface: ").append(toIndentedString(subInterface)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}


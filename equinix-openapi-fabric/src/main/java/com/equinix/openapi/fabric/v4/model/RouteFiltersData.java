/*
 * Equinix Fabric API v4
 *
 * Contact: api-support@equinix.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.equinix.openapi.fabric.v4.model;

import java.util.Objects;
import java.util.Arrays;
import com.equinix.openapi.fabric.v4.model.Changelog;
import com.equinix.openapi.fabric.v4.model.RouteFilterState;
import com.equinix.openapi.fabric.v4.model.RouteFiltersChange;
import com.equinix.openapi.fabric.v4.model.RouteFiltersDataProject;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.net.URI;
import java.util.UUID;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * RouteFiltersData
 */
@JsonPropertyOrder({
  RouteFiltersData.JSON_PROPERTY_HREF,
  RouteFiltersData.JSON_PROPERTY_TYPE,
  RouteFiltersData.JSON_PROPERTY_UUID,
  RouteFiltersData.JSON_PROPERTY_NAME,
  RouteFiltersData.JSON_PROPERTY_DESCRIPTION,
  RouteFiltersData.JSON_PROPERTY_STATE,
  RouteFiltersData.JSON_PROPERTY_CHANGE,
  RouteFiltersData.JSON_PROPERTY_NOT_MATCHED_RULE_ACTION,
  RouteFiltersData.JSON_PROPERTY_CONNECTIONS_COUNT,
  RouteFiltersData.JSON_PROPERTY_RULES_COUNT,
  RouteFiltersData.JSON_PROPERTY_PROJECT,
  RouteFiltersData.JSON_PROPERTY_CHANGELOG
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class RouteFiltersData {
  public static final String JSON_PROPERTY_HREF = "href";
  private URI href;

  /**
   * Route Filter type
   */
  public enum TypeEnum {
    IPV4_PREFIX_FILTER("BGP_IPv4_PREFIX_FILTER"),
    
    IPV6_PREFIX_FILTER("BGP_IPv6_PREFIX_FILTER");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static TypeEnum fromValue(String value) {
      for (TypeEnum b : TypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_TYPE = "type";
  private TypeEnum type;

  public static final String JSON_PROPERTY_UUID = "uuid";
  private UUID uuid;

  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_DESCRIPTION = "description";
  private String description;

  public static final String JSON_PROPERTY_STATE = "state";
  private RouteFilterState state;

  public static final String JSON_PROPERTY_CHANGE = "change";
  private RouteFiltersChange change;

  /**
   * Gets or Sets notMatchedRuleAction
   */
  public enum NotMatchedRuleActionEnum {
    ALLOW("ALLOW"),
    
    DENY("DENY");

    private String value;

    NotMatchedRuleActionEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static NotMatchedRuleActionEnum fromValue(String value) {
      for (NotMatchedRuleActionEnum b : NotMatchedRuleActionEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_NOT_MATCHED_RULE_ACTION = "notMatchedRuleAction";
  private NotMatchedRuleActionEnum notMatchedRuleAction;

  public static final String JSON_PROPERTY_CONNECTIONS_COUNT = "connectionsCount";
  private Integer connectionsCount;

  public static final String JSON_PROPERTY_RULES_COUNT = "rulesCount";
  private Integer rulesCount;

  public static final String JSON_PROPERTY_PROJECT = "project";
  private RouteFiltersDataProject project;

  public static final String JSON_PROPERTY_CHANGELOG = "changelog";
  private Changelog changelog;

  public RouteFiltersData() {
  }

  public RouteFiltersData href(URI href) {
    
    this.href = href;
    return this;
  }

   /**
   * Route Filter URI
   * @return href
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_HREF)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public URI getHref() {
    return href;
  }


  @JsonProperty(JSON_PROPERTY_HREF)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setHref(URI href) {
    this.href = href;
  }


  public RouteFiltersData type(TypeEnum type) {
    
    this.type = type;
    return this;
  }

   /**
   * Route Filter type
   * @return type
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public TypeEnum getType() {
    return type;
  }


  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setType(TypeEnum type) {
    this.type = type;
  }


  public RouteFiltersData uuid(UUID uuid) {
    
    this.uuid = uuid;
    return this;
  }

   /**
   * Route Filter identifier
   * @return uuid
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_UUID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public UUID getUuid() {
    return uuid;
  }


  @JsonProperty(JSON_PROPERTY_UUID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUuid(UUID uuid) {
    this.uuid = uuid;
  }


  public RouteFiltersData name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setName(String name) {
    this.name = name;
  }


  public RouteFiltersData description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * Customer-provided connection description
   * @return description
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDescription() {
    return description;
  }


  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDescription(String description) {
    this.description = description;
  }


  public RouteFiltersData state(RouteFilterState state) {
    
    this.state = state;
    return this;
  }

   /**
   * Get state
   * @return state
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_STATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public RouteFilterState getState() {
    return state;
  }


  @JsonProperty(JSON_PROPERTY_STATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setState(RouteFilterState state) {
    this.state = state;
  }


  public RouteFiltersData change(RouteFiltersChange change) {
    
    this.change = change;
    return this;
  }

   /**
   * Get change
   * @return change
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CHANGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public RouteFiltersChange getChange() {
    return change;
  }


  @JsonProperty(JSON_PROPERTY_CHANGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setChange(RouteFiltersChange change) {
    this.change = change;
  }


  public RouteFiltersData notMatchedRuleAction(NotMatchedRuleActionEnum notMatchedRuleAction) {
    
    this.notMatchedRuleAction = notMatchedRuleAction;
    return this;
  }

   /**
   * Get notMatchedRuleAction
   * @return notMatchedRuleAction
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NOT_MATCHED_RULE_ACTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public NotMatchedRuleActionEnum getNotMatchedRuleAction() {
    return notMatchedRuleAction;
  }


  @JsonProperty(JSON_PROPERTY_NOT_MATCHED_RULE_ACTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNotMatchedRuleAction(NotMatchedRuleActionEnum notMatchedRuleAction) {
    this.notMatchedRuleAction = notMatchedRuleAction;
  }


  public RouteFiltersData connectionsCount(Integer connectionsCount) {
    
    this.connectionsCount = connectionsCount;
    return this;
  }

   /**
   * Get connectionsCount
   * @return connectionsCount
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CONNECTIONS_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getConnectionsCount() {
    return connectionsCount;
  }


  @JsonProperty(JSON_PROPERTY_CONNECTIONS_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setConnectionsCount(Integer connectionsCount) {
    this.connectionsCount = connectionsCount;
  }


  public RouteFiltersData rulesCount(Integer rulesCount) {
    
    this.rulesCount = rulesCount;
    return this;
  }

   /**
   * Get rulesCount
   * @return rulesCount
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_RULES_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getRulesCount() {
    return rulesCount;
  }


  @JsonProperty(JSON_PROPERTY_RULES_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRulesCount(Integer rulesCount) {
    this.rulesCount = rulesCount;
  }


  public RouteFiltersData project(RouteFiltersDataProject project) {
    
    this.project = project;
    return this;
  }

   /**
   * Get project
   * @return project
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PROJECT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public RouteFiltersDataProject getProject() {
    return project;
  }


  @JsonProperty(JSON_PROPERTY_PROJECT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setProject(RouteFiltersDataProject project) {
    this.project = project;
  }


  public RouteFiltersData changelog(Changelog changelog) {
    
    this.changelog = changelog;
    return this;
  }

   /**
   * Get changelog
   * @return changelog
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CHANGELOG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Changelog getChangelog() {
    return changelog;
  }


  @JsonProperty(JSON_PROPERTY_CHANGELOG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setChangelog(Changelog changelog) {
    this.changelog = changelog;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RouteFiltersData routeFiltersData = (RouteFiltersData) o;
    return Objects.equals(this.href, routeFiltersData.href) &&
        Objects.equals(this.type, routeFiltersData.type) &&
        Objects.equals(this.uuid, routeFiltersData.uuid) &&
        Objects.equals(this.name, routeFiltersData.name) &&
        Objects.equals(this.description, routeFiltersData.description) &&
        Objects.equals(this.state, routeFiltersData.state) &&
        Objects.equals(this.change, routeFiltersData.change) &&
        Objects.equals(this.notMatchedRuleAction, routeFiltersData.notMatchedRuleAction) &&
        Objects.equals(this.connectionsCount, routeFiltersData.connectionsCount) &&
        Objects.equals(this.rulesCount, routeFiltersData.rulesCount) &&
        Objects.equals(this.project, routeFiltersData.project) &&
        Objects.equals(this.changelog, routeFiltersData.changelog);
  }

  @Override
  public int hashCode() {
    return Objects.hash(href, type, uuid, name, description, state, change, notMatchedRuleAction, connectionsCount, rulesCount, project, changelog);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RouteFiltersData {\n");
    sb.append("    href: ").append(toIndentedString(href)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    uuid: ").append(toIndentedString(uuid)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    change: ").append(toIndentedString(change)).append("\n");
    sb.append("    notMatchedRuleAction: ").append(toIndentedString(notMatchedRuleAction)).append("\n");
    sb.append("    connectionsCount: ").append(toIndentedString(connectionsCount)).append("\n");
    sb.append("    rulesCount: ").append(toIndentedString(rulesCount)).append("\n");
    sb.append("    project: ").append(toIndentedString(project)).append("\n");
    sb.append("    changelog: ").append(toIndentedString(changelog)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}


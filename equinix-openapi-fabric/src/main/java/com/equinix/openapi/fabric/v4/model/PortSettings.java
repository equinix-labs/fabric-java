/*
 * Equinix Fabric API v4
 *
 * Contact: api-support@equinix.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.equinix.openapi.fabric.v4.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Port configuration settings
 */
@JsonPropertyOrder({
  PortSettings.JSON_PROPERTY_PRODUCT,
  PortSettings.JSON_PROPERTY_BUYOUT,
  PortSettings.JSON_PROPERTY_VIEW_PORT_PERMISSION,
  PortSettings.JSON_PROPERTY_PLACE_VC_ORDER_PERMISSION,
  PortSettings.JSON_PROPERTY_LAYER3_ENABLED,
  PortSettings.JSON_PROPERTY_PRODUCT_CODE,
  PortSettings.JSON_PROPERTY_SHARED_PORT_TYPE,
  PortSettings.JSON_PROPERTY_SHARED_PORT_PRODUCT,
  PortSettings.JSON_PROPERTY_PACKAGE_TYPE
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class PortSettings {
  public static final String JSON_PROPERTY_PRODUCT = "product";
  private String product;

  public static final String JSON_PROPERTY_BUYOUT = "buyout";
  private Boolean buyout;

  public static final String JSON_PROPERTY_VIEW_PORT_PERMISSION = "viewPortPermission";
  private Boolean viewPortPermission;

  public static final String JSON_PROPERTY_PLACE_VC_ORDER_PERMISSION = "placeVcOrderPermission";
  private Boolean placeVcOrderPermission;

  public static final String JSON_PROPERTY_LAYER3_ENABLED = "layer3Enabled";
  private Boolean layer3Enabled;

  public static final String JSON_PROPERTY_PRODUCT_CODE = "productCode";
  private String productCode;

  public static final String JSON_PROPERTY_SHARED_PORT_TYPE = "sharedPortType";
  private Boolean sharedPortType;

  /**
   * Gets or Sets sharedPortProduct
   */
  public enum SharedPortProductEnum {
    NETWORK_EDGE("NETWORK_EDGE"),
    
    VIRTUAL_GATEWAY("VIRTUAL_GATEWAY"),
    
    SMARTKEY("SMARTKEY"),
    
    EDGE_METAL("EDGE_METAL");

    private String value;

    SharedPortProductEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static SharedPortProductEnum fromValue(String value) {
      for (SharedPortProductEnum b : SharedPortProductEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_SHARED_PORT_PRODUCT = "sharedPortProduct";
  private SharedPortProductEnum sharedPortProduct;

  /**
   * Type of Port Package
   */
  public enum PackageTypeEnum {
    STANDARD("STANDARD"),
    
    UNTAGGED("UNTAGGED"),
    
    UNLIMITED("UNLIMITED"),
    
    UNLIMITED_PLUS("UNLIMITED PLUS");

    private String value;

    PackageTypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static PackageTypeEnum fromValue(String value) {
      for (PackageTypeEnum b : PackageTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_PACKAGE_TYPE = "packageType";
  private PackageTypeEnum packageType;

  public PortSettings() {
  }

  public PortSettings product(String product) {
    
    this.product = product;
    return this;
  }

   /**
   * Product name
   * @return product
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PRODUCT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getProduct() {
    return product;
  }


  @JsonProperty(JSON_PROPERTY_PRODUCT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setProduct(String product) {
    this.product = product;
  }


  public PortSettings buyout(Boolean buyout) {
    
    this.buyout = buyout;
    return this;
  }

   /**
   * Get buyout
   * @return buyout
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_BUYOUT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getBuyout() {
    return buyout;
  }


  @JsonProperty(JSON_PROPERTY_BUYOUT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBuyout(Boolean buyout) {
    this.buyout = buyout;
  }


  public PortSettings viewPortPermission(Boolean viewPortPermission) {
    
    this.viewPortPermission = viewPortPermission;
    return this;
  }

   /**
   * Get viewPortPermission
   * @return viewPortPermission
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_VIEW_PORT_PERMISSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getViewPortPermission() {
    return viewPortPermission;
  }


  @JsonProperty(JSON_PROPERTY_VIEW_PORT_PERMISSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setViewPortPermission(Boolean viewPortPermission) {
    this.viewPortPermission = viewPortPermission;
  }


  public PortSettings placeVcOrderPermission(Boolean placeVcOrderPermission) {
    
    this.placeVcOrderPermission = placeVcOrderPermission;
    return this;
  }

   /**
   * Get placeVcOrderPermission
   * @return placeVcOrderPermission
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PLACE_VC_ORDER_PERMISSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getPlaceVcOrderPermission() {
    return placeVcOrderPermission;
  }


  @JsonProperty(JSON_PROPERTY_PLACE_VC_ORDER_PERMISSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPlaceVcOrderPermission(Boolean placeVcOrderPermission) {
    this.placeVcOrderPermission = placeVcOrderPermission;
  }


  public PortSettings layer3Enabled(Boolean layer3Enabled) {
    
    this.layer3Enabled = layer3Enabled;
    return this;
  }

   /**
   * Get layer3Enabled
   * @return layer3Enabled
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LAYER3_ENABLED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getLayer3Enabled() {
    return layer3Enabled;
  }


  @JsonProperty(JSON_PROPERTY_LAYER3_ENABLED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLayer3Enabled(Boolean layer3Enabled) {
    this.layer3Enabled = layer3Enabled;
  }


  public PortSettings productCode(String productCode) {
    
    this.productCode = productCode;
    return this;
  }

   /**
   * Get productCode
   * @return productCode
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PRODUCT_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getProductCode() {
    return productCode;
  }


  @JsonProperty(JSON_PROPERTY_PRODUCT_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setProductCode(String productCode) {
    this.productCode = productCode;
  }


  public PortSettings sharedPortType(Boolean sharedPortType) {
    
    this.sharedPortType = sharedPortType;
    return this;
  }

   /**
   * Get sharedPortType
   * @return sharedPortType
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SHARED_PORT_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getSharedPortType() {
    return sharedPortType;
  }


  @JsonProperty(JSON_PROPERTY_SHARED_PORT_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSharedPortType(Boolean sharedPortType) {
    this.sharedPortType = sharedPortType;
  }


  public PortSettings sharedPortProduct(SharedPortProductEnum sharedPortProduct) {
    
    this.sharedPortProduct = sharedPortProduct;
    return this;
  }

   /**
   * Get sharedPortProduct
   * @return sharedPortProduct
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SHARED_PORT_PRODUCT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public SharedPortProductEnum getSharedPortProduct() {
    return sharedPortProduct;
  }


  @JsonProperty(JSON_PROPERTY_SHARED_PORT_PRODUCT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSharedPortProduct(SharedPortProductEnum sharedPortProduct) {
    this.sharedPortProduct = sharedPortProduct;
  }


  public PortSettings packageType(PackageTypeEnum packageType) {
    
    this.packageType = packageType;
    return this;
  }

   /**
   * Type of Port Package
   * @return packageType
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PACKAGE_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public PackageTypeEnum getPackageType() {
    return packageType;
  }


  @JsonProperty(JSON_PROPERTY_PACKAGE_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPackageType(PackageTypeEnum packageType) {
    this.packageType = packageType;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PortSettings portSettings = (PortSettings) o;
    return Objects.equals(this.product, portSettings.product) &&
        Objects.equals(this.buyout, portSettings.buyout) &&
        Objects.equals(this.viewPortPermission, portSettings.viewPortPermission) &&
        Objects.equals(this.placeVcOrderPermission, portSettings.placeVcOrderPermission) &&
        Objects.equals(this.layer3Enabled, portSettings.layer3Enabled) &&
        Objects.equals(this.productCode, portSettings.productCode) &&
        Objects.equals(this.sharedPortType, portSettings.sharedPortType) &&
        Objects.equals(this.sharedPortProduct, portSettings.sharedPortProduct) &&
        Objects.equals(this.packageType, portSettings.packageType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(product, buyout, viewPortPermission, placeVcOrderPermission, layer3Enabled, productCode, sharedPortType, sharedPortProduct, packageType);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PortSettings {\n");
    sb.append("    product: ").append(toIndentedString(product)).append("\n");
    sb.append("    buyout: ").append(toIndentedString(buyout)).append("\n");
    sb.append("    viewPortPermission: ").append(toIndentedString(viewPortPermission)).append("\n");
    sb.append("    placeVcOrderPermission: ").append(toIndentedString(placeVcOrderPermission)).append("\n");
    sb.append("    layer3Enabled: ").append(toIndentedString(layer3Enabled)).append("\n");
    sb.append("    productCode: ").append(toIndentedString(productCode)).append("\n");
    sb.append("    sharedPortType: ").append(toIndentedString(sharedPortType)).append("\n");
    sb.append("    sharedPortProduct: ").append(toIndentedString(sharedPortProduct)).append("\n");
    sb.append("    packageType: ").append(toIndentedString(packageType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}


/*
 * Equinix Fabric API v4
 *
 * Contact: api-support@equinix.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.equinix.openapi.fabric.v4.model;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

import java.util.Objects;

/**
 * Access point object
 */
@JsonPropertyOrder({
  AccessPoint.JSON_PROPERTY_TYPE,
  AccessPoint.JSON_PROPERTY_ACCOUNT,
  AccessPoint.JSON_PROPERTY_LOCATION,
  AccessPoint.JSON_PROPERTY_PORT,
  AccessPoint.JSON_PROPERTY_PROFILE,
  AccessPoint.JSON_PROPERTY_ROUTER,
  AccessPoint.JSON_PROPERTY_LINK_PROTOCOL,
  AccessPoint.JSON_PROPERTY_VIRTUAL_DEVICE,
  AccessPoint.JSON_PROPERTY_INTERFACE,
  AccessPoint.JSON_PROPERTY_NETWORK,
  AccessPoint.JSON_PROPERTY_SELLER_REGION,
  AccessPoint.JSON_PROPERTY_PEERING_TYPE,
  AccessPoint.JSON_PROPERTY_AUTHENTICATION_KEY,
  AccessPoint.JSON_PROPERTY_PROVIDER_CONNECTION_ID,
  AccessPoint.JSON_PROPERTY_VIRTUAL_NETWORK,
  AccessPoint.JSON_PROPERTY_INTERCONNECTION,
  AccessPoint.JSON_PROPERTY_VPIC_INTERFACE
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class AccessPoint {
  public static final String JSON_PROPERTY_TYPE = "type";
  private AccessPointType type;

  public static final String JSON_PROPERTY_ACCOUNT = "account";
  private SimplifiedAccount account;

  public static final String JSON_PROPERTY_LOCATION = "location";
  private SimplifiedLocation location;

  public static final String JSON_PROPERTY_PORT = "port";
  private SimplifiedPort port;

  public static final String JSON_PROPERTY_PROFILE = "profile";
  private SimplifiedServiceProfile profile;

  public static final String JSON_PROPERTY_ROUTER = "router";
  private CloudRouter router;

  public static final String JSON_PROPERTY_LINK_PROTOCOL = "linkProtocol";
  private SimplifiedLinkProtocol linkProtocol;

  public static final String JSON_PROPERTY_VIRTUAL_DEVICE = "virtualDevice";
  private VirtualDevice virtualDevice;

  public static final String JSON_PROPERTY_INTERFACE = "interface";
  private ModelInterface _interface;

  public static final String JSON_PROPERTY_NETWORK = "network";
  private SimplifiedNetwork network;

  public static final String JSON_PROPERTY_SELLER_REGION = "sellerRegion";
  private String sellerRegion;

  public static final String JSON_PROPERTY_PEERING_TYPE = "peeringType";
  private PeeringType peeringType;

  public static final String JSON_PROPERTY_AUTHENTICATION_KEY = "authenticationKey";
  private String authenticationKey;

  public static final String JSON_PROPERTY_PROVIDER_CONNECTION_ID = "providerConnectionId";
  private String providerConnectionId;

  public static final String JSON_PROPERTY_VIRTUAL_NETWORK = "virtualNetwork";
  private VirtualNetwork virtualNetwork;

  public static final String JSON_PROPERTY_INTERCONNECTION = "interconnection";
  private MetalInterconnection interconnection;

  public static final String JSON_PROPERTY_VPIC_INTERFACE = "vpic_interface";
  private VpicInterface vpicInterface;

  public AccessPoint() {
  }

  public AccessPoint type(AccessPointType type) {
    
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public AccessPointType getType() {
    return type;
  }


  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setType(AccessPointType type) {
    this.type = type;
  }


  public AccessPoint account(SimplifiedAccount account) {
    
    this.account = account;
    return this;
  }

   /**
   * Get account
   * @return account
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ACCOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public SimplifiedAccount getAccount() {
    return account;
  }


  @JsonProperty(JSON_PROPERTY_ACCOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAccount(SimplifiedAccount account) {
    this.account = account;
  }


  public AccessPoint location(SimplifiedLocation location) {
    
    this.location = location;
    return this;
  }

   /**
   * Get location
   * @return location
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LOCATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public SimplifiedLocation getLocation() {
    return location;
  }


  @JsonProperty(JSON_PROPERTY_LOCATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLocation(SimplifiedLocation location) {
    this.location = location;
  }


  public AccessPoint port(SimplifiedPort port) {
    
    this.port = port;
    return this;
  }

   /**
   * Get port
   * @return port
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PORT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public SimplifiedPort getPort() {
    return port;
  }


  @JsonProperty(JSON_PROPERTY_PORT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPort(SimplifiedPort port) {
    this.port = port;
  }


  public AccessPoint profile(SimplifiedServiceProfile profile) {
    
    this.profile = profile;
    return this;
  }

   /**
   * Get profile
   * @return profile
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PROFILE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public SimplifiedServiceProfile getProfile() {
    return profile;
  }


  @JsonProperty(JSON_PROPERTY_PROFILE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setProfile(SimplifiedServiceProfile profile) {
    this.profile = profile;
  }


  public AccessPoint router(CloudRouter router) {
    
    this.router = router;
    return this;
  }

   /**
   * Get router
   * @return router
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ROUTER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public CloudRouter getRouter() {
    return router;
  }


  @JsonProperty(JSON_PROPERTY_ROUTER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRouter(CloudRouter router) {
    this.router = router;
  }


  public AccessPoint linkProtocol(SimplifiedLinkProtocol linkProtocol) {
    
    this.linkProtocol = linkProtocol;
    return this;
  }

   /**
   * Get linkProtocol
   * @return linkProtocol
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LINK_PROTOCOL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public SimplifiedLinkProtocol getLinkProtocol() {
    return linkProtocol;
  }


  @JsonProperty(JSON_PROPERTY_LINK_PROTOCOL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLinkProtocol(SimplifiedLinkProtocol linkProtocol) {
    this.linkProtocol = linkProtocol;
  }


  public AccessPoint virtualDevice(VirtualDevice virtualDevice) {
    
    this.virtualDevice = virtualDevice;
    return this;
  }

   /**
   * Get virtualDevice
   * @return virtualDevice
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_VIRTUAL_DEVICE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public VirtualDevice getVirtualDevice() {
    return virtualDevice;
  }


  @JsonProperty(JSON_PROPERTY_VIRTUAL_DEVICE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setVirtualDevice(VirtualDevice virtualDevice) {
    this.virtualDevice = virtualDevice;
  }


  public AccessPoint _interface(ModelInterface _interface) {
    
    this._interface = _interface;
    return this;
  }

   /**
   * Get _interface
   * @return _interface
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_INTERFACE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ModelInterface getInterface() {
    return _interface;
  }


  @JsonProperty(JSON_PROPERTY_INTERFACE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setInterface(ModelInterface _interface) {
    this._interface = _interface;
  }


  public AccessPoint network(SimplifiedNetwork network) {
    
    this.network = network;
    return this;
  }

   /**
   * Get network
   * @return network
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NETWORK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public SimplifiedNetwork getNetwork() {
    return network;
  }


  @JsonProperty(JSON_PROPERTY_NETWORK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNetwork(SimplifiedNetwork network) {
    this.network = network;
  }


  public AccessPoint sellerRegion(String sellerRegion) {
    
    this.sellerRegion = sellerRegion;
    return this;
  }

   /**
   * Access point seller region
   * @return sellerRegion
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SELLER_REGION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSellerRegion() {
    return sellerRegion;
  }


  @JsonProperty(JSON_PROPERTY_SELLER_REGION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSellerRegion(String sellerRegion) {
    this.sellerRegion = sellerRegion;
  }


  public AccessPoint peeringType(PeeringType peeringType) {
    
    this.peeringType = peeringType;
    return this;
  }

   /**
   * Get peeringType
   * @return peeringType
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PEERING_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public PeeringType getPeeringType() {
    return peeringType;
  }


  @JsonProperty(JSON_PROPERTY_PEERING_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPeeringType(PeeringType peeringType) {
    this.peeringType = peeringType;
  }


  public AccessPoint authenticationKey(String authenticationKey) {
    
    this.authenticationKey = authenticationKey;
    return this;
  }

   /**
   * Access point authentication key
   * @return authenticationKey
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_AUTHENTICATION_KEY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAuthenticationKey() {
    return authenticationKey;
  }


  @JsonProperty(JSON_PROPERTY_AUTHENTICATION_KEY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAuthenticationKey(String authenticationKey) {
    this.authenticationKey = authenticationKey;
  }


  public AccessPoint providerConnectionId(String providerConnectionId) {
    
    this.providerConnectionId = providerConnectionId;
    return this;
  }

   /**
   * Provider assigned Connection Id
   * @return providerConnectionId
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PROVIDER_CONNECTION_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getProviderConnectionId() {
    return providerConnectionId;
  }


  @JsonProperty(JSON_PROPERTY_PROVIDER_CONNECTION_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setProviderConnectionId(String providerConnectionId) {
    this.providerConnectionId = providerConnectionId;
  }


  public AccessPoint virtualNetwork(VirtualNetwork virtualNetwork) {
    
    this.virtualNetwork = virtualNetwork;
    return this;
  }

   /**
   * Get virtualNetwork
   * @return virtualNetwork
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_VIRTUAL_NETWORK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public VirtualNetwork getVirtualNetwork() {
    return virtualNetwork;
  }


  @JsonProperty(JSON_PROPERTY_VIRTUAL_NETWORK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setVirtualNetwork(VirtualNetwork virtualNetwork) {
    this.virtualNetwork = virtualNetwork;
  }


  public AccessPoint interconnection(MetalInterconnection interconnection) {
    
    this.interconnection = interconnection;
    return this;
  }

   /**
   * Get interconnection
   * @return interconnection
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_INTERCONNECTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public MetalInterconnection getInterconnection() {
    return interconnection;
  }


  @JsonProperty(JSON_PROPERTY_INTERCONNECTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setInterconnection(MetalInterconnection interconnection) {
    this.interconnection = interconnection;
  }


  public AccessPoint vpicInterface(VpicInterface vpicInterface) {
    
    this.vpicInterface = vpicInterface;
    return this;
  }

   /**
   * Get vpicInterface
   * @return vpicInterface
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_VPIC_INTERFACE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public VpicInterface getVpicInterface() {
    return vpicInterface;
  }


  @JsonProperty(JSON_PROPERTY_VPIC_INTERFACE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setVpicInterface(VpicInterface vpicInterface) {
    this.vpicInterface = vpicInterface;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AccessPoint accessPoint = (AccessPoint) o;
    return Objects.equals(this.type, accessPoint.type) &&
        Objects.equals(this.account, accessPoint.account) &&
        Objects.equals(this.location, accessPoint.location) &&
        Objects.equals(this.port, accessPoint.port) &&
        Objects.equals(this.profile, accessPoint.profile) &&
        Objects.equals(this.router, accessPoint.router) &&
        Objects.equals(this.linkProtocol, accessPoint.linkProtocol) &&
        Objects.equals(this.virtualDevice, accessPoint.virtualDevice) &&
        Objects.equals(this._interface, accessPoint._interface) &&
        Objects.equals(this.network, accessPoint.network) &&
        Objects.equals(this.sellerRegion, accessPoint.sellerRegion) &&
        Objects.equals(this.peeringType, accessPoint.peeringType) &&
        Objects.equals(this.authenticationKey, accessPoint.authenticationKey) &&
        Objects.equals(this.providerConnectionId, accessPoint.providerConnectionId) &&
        Objects.equals(this.virtualNetwork, accessPoint.virtualNetwork) &&
        Objects.equals(this.interconnection, accessPoint.interconnection) &&
        Objects.equals(this.vpicInterface, accessPoint.vpicInterface);
  }

  @Override
  public int hashCode() {
    return Objects.hash(type, account, location, port, profile, router, linkProtocol, virtualDevice, _interface, network, sellerRegion, peeringType, authenticationKey, providerConnectionId, virtualNetwork, interconnection, vpicInterface);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AccessPoint {\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    account: ").append(toIndentedString(account)).append("\n");
    sb.append("    location: ").append(toIndentedString(location)).append("\n");
    sb.append("    port: ").append(toIndentedString(port)).append("\n");
    sb.append("    profile: ").append(toIndentedString(profile)).append("\n");
    sb.append("    router: ").append(toIndentedString(router)).append("\n");
    sb.append("    linkProtocol: ").append(toIndentedString(linkProtocol)).append("\n");
    sb.append("    virtualDevice: ").append(toIndentedString(virtualDevice)).append("\n");
    sb.append("    _interface: ").append(toIndentedString(_interface)).append("\n");
    sb.append("    network: ").append(toIndentedString(network)).append("\n");
    sb.append("    sellerRegion: ").append(toIndentedString(sellerRegion)).append("\n");
    sb.append("    peeringType: ").append(toIndentedString(peeringType)).append("\n");
    sb.append("    authenticationKey: ").append(toIndentedString(authenticationKey)).append("\n");
    sb.append("    providerConnectionId: ").append(toIndentedString(providerConnectionId)).append("\n");
    sb.append("    virtualNetwork: ").append(toIndentedString(virtualNetwork)).append("\n");
    sb.append("    interconnection: ").append(toIndentedString(interconnection)).append("\n");
    sb.append("    vpicInterface: ").append(toIndentedString(vpicInterface)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}


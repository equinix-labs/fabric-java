/*
 * Equinix Fabric API v4
 *
 * Contact: api-support@equinix.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.equinix.openapi.fabric.v4.model;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/**
 * Create connection post request
 */
@JsonPropertyOrder({
  ConnectionPostRequest.JSON_PROPERTY_TYPE,
  ConnectionPostRequest.JSON_PROPERTY_NAME,
  ConnectionPostRequest.JSON_PROPERTY_ORDER,
  ConnectionPostRequest.JSON_PROPERTY_NOTIFICATIONS,
  ConnectionPostRequest.JSON_PROPERTY_BANDWIDTH,
  ConnectionPostRequest.JSON_PROPERTY_GEO_SCOPE,
  ConnectionPostRequest.JSON_PROPERTY_REDUNDANCY,
  ConnectionPostRequest.JSON_PROPERTY_A_SIDE,
  ConnectionPostRequest.JSON_PROPERTY_Z_SIDE,
  ConnectionPostRequest.JSON_PROPERTY_PROJECT,
  ConnectionPostRequest.JSON_PROPERTY_ADDITIONAL_INFO
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class ConnectionPostRequest {
  public static final String JSON_PROPERTY_TYPE = "type";
  private ConnectionType type;

  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_ORDER = "order";
  private Order order;

  public static final String JSON_PROPERTY_NOTIFICATIONS = "notifications";
  private List<SimplifiedNotification> notifications = new ArrayList<>();

  public static final String JSON_PROPERTY_BANDWIDTH = "bandwidth";
  private Integer bandwidth;

  public static final String JSON_PROPERTY_GEO_SCOPE = "geoScope";
  private GeoScopeType geoScope;

  public static final String JSON_PROPERTY_REDUNDANCY = "redundancy";
  private ConnectionRedundancy redundancy;

  public static final String JSON_PROPERTY_A_SIDE = "aSide";
  private ConnectionSide aSide;

  public static final String JSON_PROPERTY_Z_SIDE = "zSide";
  private ConnectionSide zSide;

  public static final String JSON_PROPERTY_PROJECT = "project";
  private Project project;

  public static final String JSON_PROPERTY_ADDITIONAL_INFO = "additionalInfo";
  private List<ConnectionSideAdditionalInfo> additionalInfo = new ArrayList<>();

  public ConnectionPostRequest() {
  }

  public ConnectionPostRequest type(ConnectionType type) {
    
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public ConnectionType getType() {
    return type;
  }


  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setType(ConnectionType type) {
    this.type = type;
  }


  public ConnectionPostRequest name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Customer-provided connection name
   * @return name
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setName(String name) {
    this.name = name;
  }


  public ConnectionPostRequest order(Order order) {
    
    this.order = order;
    return this;
  }

   /**
   * Get order
   * @return order
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ORDER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Order getOrder() {
    return order;
  }


  @JsonProperty(JSON_PROPERTY_ORDER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOrder(Order order) {
    this.order = order;
  }


  public ConnectionPostRequest notifications(List<SimplifiedNotification> notifications) {
    
    this.notifications = notifications;
    return this;
  }

  public ConnectionPostRequest addNotificationsItem(SimplifiedNotification notificationsItem) {
    this.notifications.add(notificationsItem);
    return this;
  }

   /**
   * Preferences for notifications on connection configuration or status changes
   * @return notifications
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_NOTIFICATIONS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<SimplifiedNotification> getNotifications() {
    return notifications;
  }


  @JsonProperty(JSON_PROPERTY_NOTIFICATIONS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setNotifications(List<SimplifiedNotification> notifications) {
    this.notifications = notifications;
  }


  public ConnectionPostRequest bandwidth(Integer bandwidth) {
    
    this.bandwidth = bandwidth;
    return this;
  }

   /**
   * Connection bandwidth in Mbps
   * minimum: 0
   * maximum: 50000
   * @return bandwidth
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_BANDWIDTH)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getBandwidth() {
    return bandwidth;
  }


  @JsonProperty(JSON_PROPERTY_BANDWIDTH)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setBandwidth(Integer bandwidth) {
    this.bandwidth = bandwidth;
  }


  public ConnectionPostRequest geoScope(GeoScopeType geoScope) {
    
    this.geoScope = geoScope;
    return this;
  }

   /**
   * Get geoScope
   * @return geoScope
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_GEO_SCOPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public GeoScopeType getGeoScope() {
    return geoScope;
  }


  @JsonProperty(JSON_PROPERTY_GEO_SCOPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setGeoScope(GeoScopeType geoScope) {
    this.geoScope = geoScope;
  }


  public ConnectionPostRequest redundancy(ConnectionRedundancy redundancy) {
    
    this.redundancy = redundancy;
    return this;
  }

   /**
   * Get redundancy
   * @return redundancy
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_REDUNDANCY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ConnectionRedundancy getRedundancy() {
    return redundancy;
  }


  @JsonProperty(JSON_PROPERTY_REDUNDANCY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRedundancy(ConnectionRedundancy redundancy) {
    this.redundancy = redundancy;
  }


  public ConnectionPostRequest aSide(ConnectionSide aSide) {
    
    this.aSide = aSide;
    return this;
  }

   /**
   * Get aSide
   * @return aSide
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_A_SIDE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public ConnectionSide getaSide() {
    return aSide;
  }


  @JsonProperty(JSON_PROPERTY_A_SIDE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setaSide(ConnectionSide aSide) {
    this.aSide = aSide;
  }


  public ConnectionPostRequest zSide(ConnectionSide zSide) {
    
    this.zSide = zSide;
    return this;
  }

   /**
   * Get zSide
   * @return zSide
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_Z_SIDE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public ConnectionSide getzSide() {
    return zSide;
  }


  @JsonProperty(JSON_PROPERTY_Z_SIDE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setzSide(ConnectionSide zSide) {
    this.zSide = zSide;
  }


  public ConnectionPostRequest project(Project project) {
    
    this.project = project;
    return this;
  }

   /**
   * Get project
   * @return project
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PROJECT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Project getProject() {
    return project;
  }


  @JsonProperty(JSON_PROPERTY_PROJECT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setProject(Project project) {
    this.project = project;
  }


  public ConnectionPostRequest additionalInfo(List<ConnectionSideAdditionalInfo> additionalInfo) {
    
    this.additionalInfo = additionalInfo;
    return this;
  }

  public ConnectionPostRequest addAdditionalInfoItem(ConnectionSideAdditionalInfo additionalInfoItem) {
    if (this.additionalInfo == null) {
      this.additionalInfo = new ArrayList<>();
    }
    this.additionalInfo.add(additionalInfoItem);
    return this;
  }

   /**
   * Connection additional information
   * @return additionalInfo
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ADDITIONAL_INFO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<ConnectionSideAdditionalInfo> getAdditionalInfo() {
    return additionalInfo;
  }


  @JsonProperty(JSON_PROPERTY_ADDITIONAL_INFO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAdditionalInfo(List<ConnectionSideAdditionalInfo> additionalInfo) {
    this.additionalInfo = additionalInfo;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ConnectionPostRequest connectionPostRequest = (ConnectionPostRequest) o;
    return Objects.equals(this.type, connectionPostRequest.type) &&
        Objects.equals(this.name, connectionPostRequest.name) &&
        Objects.equals(this.order, connectionPostRequest.order) &&
        Objects.equals(this.notifications, connectionPostRequest.notifications) &&
        Objects.equals(this.bandwidth, connectionPostRequest.bandwidth) &&
        Objects.equals(this.geoScope, connectionPostRequest.geoScope) &&
        Objects.equals(this.redundancy, connectionPostRequest.redundancy) &&
        Objects.equals(this.aSide, connectionPostRequest.aSide) &&
        Objects.equals(this.zSide, connectionPostRequest.zSide) &&
        Objects.equals(this.project, connectionPostRequest.project) &&
        Objects.equals(this.additionalInfo, connectionPostRequest.additionalInfo);
  }

  @Override
  public int hashCode() {
    return Objects.hash(type, name, order, notifications, bandwidth, geoScope, redundancy, aSide, zSide, project, additionalInfo);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ConnectionPostRequest {\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    order: ").append(toIndentedString(order)).append("\n");
    sb.append("    notifications: ").append(toIndentedString(notifications)).append("\n");
    sb.append("    bandwidth: ").append(toIndentedString(bandwidth)).append("\n");
    sb.append("    geoScope: ").append(toIndentedString(geoScope)).append("\n");
    sb.append("    redundancy: ").append(toIndentedString(redundancy)).append("\n");
    sb.append("    aSide: ").append(toIndentedString(aSide)).append("\n");
    sb.append("    zSide: ").append(toIndentedString(zSide)).append("\n");
    sb.append("    project: ").append(toIndentedString(project)).append("\n");
    sb.append("    additionalInfo: ").append(toIndentedString(additionalInfo)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}


/*
 * Equinix Fabric API v4
 *
 * Contact: api-support@equinix.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.equinix.openapi.fabric.v4.model;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

import java.util.Objects;

/**
 * Connection acceptance data
 */
@JsonPropertyOrder({
  ConnectionAcceptanceData.JSON_PROPERTY_Z_SIDE
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class ConnectionAcceptanceData {
  public static final String JSON_PROPERTY_Z_SIDE = "zSide";
  private ConnectionSide zSide;

  public ConnectionAcceptanceData() {
  }

  public ConnectionAcceptanceData zSide(ConnectionSide zSide) {
    
    this.zSide = zSide;
    return this;
  }

   /**
   * Get zSide
   * @return zSide
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_Z_SIDE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ConnectionSide getzSide() {
    return zSide;
  }


  @JsonProperty(JSON_PROPERTY_Z_SIDE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setzSide(ConnectionSide zSide) {
    this.zSide = zSide;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ConnectionAcceptanceData connectionAcceptanceData = (ConnectionAcceptanceData) o;
    return Objects.equals(this.zSide, connectionAcceptanceData.zSide);
  }

  @Override
  public int hashCode() {
    return Objects.hash(zSide);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ConnectionAcceptanceData {\n");
    sb.append("    zSide: ").append(toIndentedString(zSide)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}


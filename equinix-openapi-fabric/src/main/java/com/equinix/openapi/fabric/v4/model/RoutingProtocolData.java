/*
 * Equinix Fabric API v4
 *
 * Contact: api-support@equinix.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.equinix.openapi.fabric.v4.model;

import com.fasterxml.jackson.annotation.*;

import java.net.URI;
import java.util.Objects;
import java.util.UUID;

/**
 * RoutingProtocolData
 */
@JsonPropertyOrder({
  RoutingProtocolData.JSON_PROPERTY_TYPE,
  RoutingProtocolData.JSON_PROPERTY_NAME,
  RoutingProtocolData.JSON_PROPERTY_BGP_IPV4,
  RoutingProtocolData.JSON_PROPERTY_BGP_IPV6,
  RoutingProtocolData.JSON_PROPERTY_CUSTOMER_ASN,
  RoutingProtocolData.JSON_PROPERTY_EQUINIX_ASN,
  RoutingProtocolData.JSON_PROPERTY_BGP_AUTH_KEY,
  RoutingProtocolData.JSON_PROPERTY_BFD,
  RoutingProtocolData.JSON_PROPERTY_HREF,
  RoutingProtocolData.JSON_PROPERTY_UUID,
  RoutingProtocolData.JSON_PROPERTY_STATE,
  RoutingProtocolData.JSON_PROPERTY_OPERATION,
  RoutingProtocolData.JSON_PROPERTY_CHANGE,
  RoutingProtocolData.JSON_PROPERTY_CHANGELOG,
  RoutingProtocolData.JSON_PROPERTY_DIRECT_IPV4,
  RoutingProtocolData.JSON_PROPERTY_DIRECT_IPV6
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class RoutingProtocolData {
  /**
   * Routing protocol type
   */
  public enum TypeEnum {
    BGP("BGP"),
    
    DIRECT("DIRECT");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static TypeEnum fromValue(String value) {
      for (TypeEnum b : TypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_TYPE = "type";
  private TypeEnum type;

  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_BGP_IPV4 = "bgpIpv4";
  private BGPConnectionIpv4 bgpIpv4;

  public static final String JSON_PROPERTY_BGP_IPV6 = "bgpIpv6";
  private BGPConnectionIpv6 bgpIpv6;

  public static final String JSON_PROPERTY_CUSTOMER_ASN = "customerAsn";
  private Long customerAsn;

  public static final String JSON_PROPERTY_EQUINIX_ASN = "equinixAsn";
  private Long equinixAsn;

  public static final String JSON_PROPERTY_BGP_AUTH_KEY = "bgpAuthKey";
  private String bgpAuthKey;

  public static final String JSON_PROPERTY_BFD = "bfd";
  private RoutingProtocolBFD bfd;

  public static final String JSON_PROPERTY_HREF = "href";
  private URI href;

  public static final String JSON_PROPERTY_UUID = "uuid";
  private UUID uuid;

  /**
   * Gets or Sets state
   */
  public enum StateEnum {
    PROVISIONED("PROVISIONED"),
    
    DEPROVISIONED("DEPROVISIONED"),
    
    PROVISIONING("PROVISIONING"),
    
    DEPROVISIONING("DEPROVISIONING"),
    
    REPROVISIONING("REPROVISIONING"),
    
    FAILED("FAILED");

    private String value;

    StateEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static StateEnum fromValue(String value) {
      for (StateEnum b : StateEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_STATE = "state";
  private StateEnum state;

  public static final String JSON_PROPERTY_OPERATION = "operation";
  private RoutingProtocolOperation operation;

  public static final String JSON_PROPERTY_CHANGE = "change";
  private RoutingProtocolChange change;

  public static final String JSON_PROPERTY_CHANGELOG = "changelog";
  private Changelog changelog;

  public static final String JSON_PROPERTY_DIRECT_IPV4 = "directIpv4";
  private DirectConnectionIpv4 directIpv4;

  public static final String JSON_PROPERTY_DIRECT_IPV6 = "directIpv6";
  private DirectConnectionIpv6 directIpv6;

  public RoutingProtocolData() {
  }

  public RoutingProtocolData type(TypeEnum type) {
    
    this.type = type;
    return this;
  }

   /**
   * Routing protocol type
   * @return type
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public TypeEnum getType() {
    return type;
  }


  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setType(TypeEnum type) {
    this.type = type;
  }


  public RoutingProtocolData name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setName(String name) {
    this.name = name;
  }


  public RoutingProtocolData bgpIpv4(BGPConnectionIpv4 bgpIpv4) {
    
    this.bgpIpv4 = bgpIpv4;
    return this;
  }

   /**
   * Get bgpIpv4
   * @return bgpIpv4
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_BGP_IPV4)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BGPConnectionIpv4 getBgpIpv4() {
    return bgpIpv4;
  }


  @JsonProperty(JSON_PROPERTY_BGP_IPV4)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBgpIpv4(BGPConnectionIpv4 bgpIpv4) {
    this.bgpIpv4 = bgpIpv4;
  }


  public RoutingProtocolData bgpIpv6(BGPConnectionIpv6 bgpIpv6) {
    
    this.bgpIpv6 = bgpIpv6;
    return this;
  }

   /**
   * Get bgpIpv6
   * @return bgpIpv6
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_BGP_IPV6)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BGPConnectionIpv6 getBgpIpv6() {
    return bgpIpv6;
  }


  @JsonProperty(JSON_PROPERTY_BGP_IPV6)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBgpIpv6(BGPConnectionIpv6 bgpIpv6) {
    this.bgpIpv6 = bgpIpv6;
  }


  public RoutingProtocolData customerAsn(Long customerAsn) {
    
    this.customerAsn = customerAsn;
    return this;
  }

   /**
   * Customer asn
   * @return customerAsn
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CUSTOMER_ASN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getCustomerAsn() {
    return customerAsn;
  }


  @JsonProperty(JSON_PROPERTY_CUSTOMER_ASN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCustomerAsn(Long customerAsn) {
    this.customerAsn = customerAsn;
  }


  public RoutingProtocolData equinixAsn(Long equinixAsn) {
    
    this.equinixAsn = equinixAsn;
    return this;
  }

   /**
   * Equinix asn
   * @return equinixAsn
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EQUINIX_ASN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getEquinixAsn() {
    return equinixAsn;
  }


  @JsonProperty(JSON_PROPERTY_EQUINIX_ASN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEquinixAsn(Long equinixAsn) {
    this.equinixAsn = equinixAsn;
  }


  public RoutingProtocolData bgpAuthKey(String bgpAuthKey) {
    
    this.bgpAuthKey = bgpAuthKey;
    return this;
  }

   /**
   * BGP authorization key
   * @return bgpAuthKey
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_BGP_AUTH_KEY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getBgpAuthKey() {
    return bgpAuthKey;
  }


  @JsonProperty(JSON_PROPERTY_BGP_AUTH_KEY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBgpAuthKey(String bgpAuthKey) {
    this.bgpAuthKey = bgpAuthKey;
  }


  public RoutingProtocolData bfd(RoutingProtocolBFD bfd) {
    
    this.bfd = bfd;
    return this;
  }

   /**
   * Get bfd
   * @return bfd
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_BFD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public RoutingProtocolBFD getBfd() {
    return bfd;
  }


  @JsonProperty(JSON_PROPERTY_BFD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBfd(RoutingProtocolBFD bfd) {
    this.bfd = bfd;
  }


  public RoutingProtocolData href(URI href) {
    
    this.href = href;
    return this;
  }

   /**
   * Routing Protocol URI
   * @return href
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_HREF)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public URI getHref() {
    return href;
  }


  @JsonProperty(JSON_PROPERTY_HREF)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setHref(URI href) {
    this.href = href;
  }


  public RoutingProtocolData uuid(UUID uuid) {
    
    this.uuid = uuid;
    return this;
  }

   /**
   * Routing protocol identifier
   * @return uuid
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_UUID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public UUID getUuid() {
    return uuid;
  }


  @JsonProperty(JSON_PROPERTY_UUID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUuid(UUID uuid) {
    this.uuid = uuid;
  }


  public RoutingProtocolData state(StateEnum state) {
    
    this.state = state;
    return this;
  }

   /**
   * Get state
   * @return state
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_STATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public StateEnum getState() {
    return state;
  }


  @JsonProperty(JSON_PROPERTY_STATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setState(StateEnum state) {
    this.state = state;
  }


  public RoutingProtocolData operation(RoutingProtocolOperation operation) {
    
    this.operation = operation;
    return this;
  }

   /**
   * Get operation
   * @return operation
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_OPERATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public RoutingProtocolOperation getOperation() {
    return operation;
  }


  @JsonProperty(JSON_PROPERTY_OPERATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOperation(RoutingProtocolOperation operation) {
    this.operation = operation;
  }


  public RoutingProtocolData change(RoutingProtocolChange change) {
    
    this.change = change;
    return this;
  }

   /**
   * Get change
   * @return change
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CHANGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public RoutingProtocolChange getChange() {
    return change;
  }


  @JsonProperty(JSON_PROPERTY_CHANGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setChange(RoutingProtocolChange change) {
    this.change = change;
  }


  public RoutingProtocolData changelog(Changelog changelog) {
    
    this.changelog = changelog;
    return this;
  }

   /**
   * Get changelog
   * @return changelog
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CHANGELOG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Changelog getChangelog() {
    return changelog;
  }


  @JsonProperty(JSON_PROPERTY_CHANGELOG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setChangelog(Changelog changelog) {
    this.changelog = changelog;
  }


  public RoutingProtocolData directIpv4(DirectConnectionIpv4 directIpv4) {
    
    this.directIpv4 = directIpv4;
    return this;
  }

   /**
   * Get directIpv4
   * @return directIpv4
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DIRECT_IPV4)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public DirectConnectionIpv4 getDirectIpv4() {
    return directIpv4;
  }


  @JsonProperty(JSON_PROPERTY_DIRECT_IPV4)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDirectIpv4(DirectConnectionIpv4 directIpv4) {
    this.directIpv4 = directIpv4;
  }


  public RoutingProtocolData directIpv6(DirectConnectionIpv6 directIpv6) {
    
    this.directIpv6 = directIpv6;
    return this;
  }

   /**
   * Get directIpv6
   * @return directIpv6
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DIRECT_IPV6)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public DirectConnectionIpv6 getDirectIpv6() {
    return directIpv6;
  }


  @JsonProperty(JSON_PROPERTY_DIRECT_IPV6)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDirectIpv6(DirectConnectionIpv6 directIpv6) {
    this.directIpv6 = directIpv6;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RoutingProtocolData routingProtocolData = (RoutingProtocolData) o;
    return Objects.equals(this.type, routingProtocolData.type) &&
        Objects.equals(this.name, routingProtocolData.name) &&
        Objects.equals(this.bgpIpv4, routingProtocolData.bgpIpv4) &&
        Objects.equals(this.bgpIpv6, routingProtocolData.bgpIpv6) &&
        Objects.equals(this.customerAsn, routingProtocolData.customerAsn) &&
        Objects.equals(this.equinixAsn, routingProtocolData.equinixAsn) &&
        Objects.equals(this.bgpAuthKey, routingProtocolData.bgpAuthKey) &&
        Objects.equals(this.bfd, routingProtocolData.bfd) &&
        Objects.equals(this.href, routingProtocolData.href) &&
        Objects.equals(this.uuid, routingProtocolData.uuid) &&
        Objects.equals(this.state, routingProtocolData.state) &&
        Objects.equals(this.operation, routingProtocolData.operation) &&
        Objects.equals(this.change, routingProtocolData.change) &&
        Objects.equals(this.changelog, routingProtocolData.changelog) &&
        Objects.equals(this.directIpv4, routingProtocolData.directIpv4) &&
        Objects.equals(this.directIpv6, routingProtocolData.directIpv6);
  }

  @Override
  public int hashCode() {
    return Objects.hash(type, name, bgpIpv4, bgpIpv6, customerAsn, equinixAsn, bgpAuthKey, bfd, href, uuid, state, operation, change, changelog, directIpv4, directIpv6);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RoutingProtocolData {\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    bgpIpv4: ").append(toIndentedString(bgpIpv4)).append("\n");
    sb.append("    bgpIpv6: ").append(toIndentedString(bgpIpv6)).append("\n");
    sb.append("    customerAsn: ").append(toIndentedString(customerAsn)).append("\n");
    sb.append("    equinixAsn: ").append(toIndentedString(equinixAsn)).append("\n");
    sb.append("    bgpAuthKey: ").append(toIndentedString(bgpAuthKey)).append("\n");
    sb.append("    bfd: ").append(toIndentedString(bfd)).append("\n");
    sb.append("    href: ").append(toIndentedString(href)).append("\n");
    sb.append("    uuid: ").append(toIndentedString(uuid)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    operation: ").append(toIndentedString(operation)).append("\n");
    sb.append("    change: ").append(toIndentedString(change)).append("\n");
    sb.append("    changelog: ").append(toIndentedString(changelog)).append("\n");
    sb.append("    directIpv4: ").append(toIndentedString(directIpv4)).append("\n");
    sb.append("    directIpv6: ").append(toIndentedString(directIpv6)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}


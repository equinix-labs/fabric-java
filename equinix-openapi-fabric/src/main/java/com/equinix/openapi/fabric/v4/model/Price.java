/*
 * Equinix Fabric API v4
 *
 * Contact: api-support@equinix.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.equinix.openapi.fabric.v4.model;

import java.util.Objects;
import java.util.Arrays;
import com.equinix.openapi.fabric.v4.model.FabricCloudRouterPrice;
import com.equinix.openapi.fabric.v4.model.IpBlockPrice;
import com.equinix.openapi.fabric.v4.model.PriceCategory;
import com.equinix.openapi.fabric.v4.model.PriceCharge;
import com.equinix.openapi.fabric.v4.model.ProductType;
import com.equinix.openapi.fabric.v4.model.SimplifiedAccount;
import com.equinix.openapi.fabric.v4.model.VirtualConnectionPrice;
import com.equinix.openapi.fabric.v4.model.VirtualPortPrice;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Price
 */
@JsonPropertyOrder({
  Price.JSON_PROPERTY_HREF,
  Price.JSON_PROPERTY_TYPE,
  Price.JSON_PROPERTY_CODE,
  Price.JSON_PROPERTY_NAME,
  Price.JSON_PROPERTY_DESCRIPTION,
  Price.JSON_PROPERTY_ACCOUNT,
  Price.JSON_PROPERTY_CHARGES,
  Price.JSON_PROPERTY_CURRENCY,
  Price.JSON_PROPERTY_TERM_LENGTH,
  Price.JSON_PROPERTY_CATGORY,
  Price.JSON_PROPERTY_CONNECTION,
  Price.JSON_PROPERTY_IP_BLOCK,
  Price.JSON_PROPERTY_ROUTER,
  Price.JSON_PROPERTY_PORT
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class Price {
  public static final String JSON_PROPERTY_HREF = "href";
  private String href;

  public static final String JSON_PROPERTY_TYPE = "type";
  private ProductType type;

  public static final String JSON_PROPERTY_CODE = "code";
  private String code;

  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_DESCRIPTION = "description";
  private String description;

  public static final String JSON_PROPERTY_ACCOUNT = "account";
  private SimplifiedAccount account;

  public static final String JSON_PROPERTY_CHARGES = "charges";
  private List<PriceCharge> charges = new ArrayList<>();

  public static final String JSON_PROPERTY_CURRENCY = "currency";
  private String currency;

  /**
   * In months. No value means unlimited
   */
  public enum TermLengthEnum {
    NUMBER_12(12),
    
    NUMBER_24(24),
    
    NUMBER_36(36);

    private Integer value;

    TermLengthEnum(Integer value) {
      this.value = value;
    }

    @JsonValue
    public Integer getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static TermLengthEnum fromValue(Integer value) {
      for (TermLengthEnum b : TermLengthEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_TERM_LENGTH = "termLength";
  private TermLengthEnum termLength;

  public static final String JSON_PROPERTY_CATGORY = "catgory";
  private PriceCategory catgory;

  public static final String JSON_PROPERTY_CONNECTION = "connection";
  private VirtualConnectionPrice connection;

  public static final String JSON_PROPERTY_IP_BLOCK = "ipBlock";
  private IpBlockPrice ipBlock;

  public static final String JSON_PROPERTY_ROUTER = "router";
  private FabricCloudRouterPrice router;

  public static final String JSON_PROPERTY_PORT = "port";
  private VirtualPortPrice port;

  public Price() {
  }

  public Price href(String href) {
    
    this.href = href;
    return this;
  }

   /**
   * An absolute URL that returns specified pricing data
   * @return href
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_HREF)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getHref() {
    return href;
  }


  @JsonProperty(JSON_PROPERTY_HREF)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setHref(String href) {
    this.href = href;
  }


  public Price type(ProductType type) {
    
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ProductType getType() {
    return type;
  }


  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setType(ProductType type) {
    this.type = type;
  }


  public Price code(String code) {
    
    this.code = code;
    return this;
  }

   /**
   * Equinix-assigned product code
   * @return code
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCode() {
    return code;
  }


  @JsonProperty(JSON_PROPERTY_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCode(String code) {
    this.code = code;
  }


  public Price name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Full product name
   * @return name
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setName(String name) {
    this.name = name;
  }


  public Price description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * Product description
   * @return description
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDescription() {
    return description;
  }


  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDescription(String description) {
    this.description = description;
  }


  public Price account(SimplifiedAccount account) {
    
    this.account = account;
    return this;
  }

   /**
   * Get account
   * @return account
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ACCOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public SimplifiedAccount getAccount() {
    return account;
  }


  @JsonProperty(JSON_PROPERTY_ACCOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAccount(SimplifiedAccount account) {
    this.account = account;
  }


  public Price charges(List<PriceCharge> charges) {
    
    this.charges = charges;
    return this;
  }

  public Price addChargesItem(PriceCharge chargesItem) {
    if (this.charges == null) {
      this.charges = new ArrayList<>();
    }
    this.charges.add(chargesItem);
    return this;
  }

   /**
   * Get charges
   * @return charges
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CHARGES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<PriceCharge> getCharges() {
    return charges;
  }


  @JsonProperty(JSON_PROPERTY_CHARGES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCharges(List<PriceCharge> charges) {
    this.charges = charges;
  }


  public Price currency(String currency) {
    
    this.currency = currency;
    return this;
  }

   /**
   * Product offering price currency
   * @return currency
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CURRENCY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCurrency() {
    return currency;
  }


  @JsonProperty(JSON_PROPERTY_CURRENCY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCurrency(String currency) {
    this.currency = currency;
  }


  public Price termLength(TermLengthEnum termLength) {
    
    this.termLength = termLength;
    return this;
  }

   /**
   * In months. No value means unlimited
   * @return termLength
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TERM_LENGTH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public TermLengthEnum getTermLength() {
    return termLength;
  }


  @JsonProperty(JSON_PROPERTY_TERM_LENGTH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTermLength(TermLengthEnum termLength) {
    this.termLength = termLength;
  }


  public Price catgory(PriceCategory catgory) {
    
    this.catgory = catgory;
    return this;
  }

   /**
   * Get catgory
   * @return catgory
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CATGORY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public PriceCategory getCatgory() {
    return catgory;
  }


  @JsonProperty(JSON_PROPERTY_CATGORY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCatgory(PriceCategory catgory) {
    this.catgory = catgory;
  }


  public Price connection(VirtualConnectionPrice connection) {
    
    this.connection = connection;
    return this;
  }

   /**
   * Get connection
   * @return connection
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CONNECTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public VirtualConnectionPrice getConnection() {
    return connection;
  }


  @JsonProperty(JSON_PROPERTY_CONNECTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setConnection(VirtualConnectionPrice connection) {
    this.connection = connection;
  }


  public Price ipBlock(IpBlockPrice ipBlock) {
    
    this.ipBlock = ipBlock;
    return this;
  }

   /**
   * Get ipBlock
   * @return ipBlock
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_IP_BLOCK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public IpBlockPrice getIpBlock() {
    return ipBlock;
  }


  @JsonProperty(JSON_PROPERTY_IP_BLOCK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIpBlock(IpBlockPrice ipBlock) {
    this.ipBlock = ipBlock;
  }


  public Price router(FabricCloudRouterPrice router) {
    
    this.router = router;
    return this;
  }

   /**
   * Get router
   * @return router
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ROUTER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public FabricCloudRouterPrice getRouter() {
    return router;
  }


  @JsonProperty(JSON_PROPERTY_ROUTER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRouter(FabricCloudRouterPrice router) {
    this.router = router;
  }


  public Price port(VirtualPortPrice port) {
    
    this.port = port;
    return this;
  }

   /**
   * Get port
   * @return port
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PORT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public VirtualPortPrice getPort() {
    return port;
  }


  @JsonProperty(JSON_PROPERTY_PORT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPort(VirtualPortPrice port) {
    this.port = port;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Price price = (Price) o;
    return Objects.equals(this.href, price.href) &&
        Objects.equals(this.type, price.type) &&
        Objects.equals(this.code, price.code) &&
        Objects.equals(this.name, price.name) &&
        Objects.equals(this.description, price.description) &&
        Objects.equals(this.account, price.account) &&
        Objects.equals(this.charges, price.charges) &&
        Objects.equals(this.currency, price.currency) &&
        Objects.equals(this.termLength, price.termLength) &&
        Objects.equals(this.catgory, price.catgory) &&
        Objects.equals(this.connection, price.connection) &&
        Objects.equals(this.ipBlock, price.ipBlock) &&
        Objects.equals(this.router, price.router) &&
        Objects.equals(this.port, price.port);
  }

  @Override
  public int hashCode() {
    return Objects.hash(href, type, code, name, description, account, charges, currency, termLength, catgory, connection, ipBlock, router, port);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Price {\n");
    sb.append("    href: ").append(toIndentedString(href)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    code: ").append(toIndentedString(code)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    account: ").append(toIndentedString(account)).append("\n");
    sb.append("    charges: ").append(toIndentedString(charges)).append("\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    termLength: ").append(toIndentedString(termLength)).append("\n");
    sb.append("    catgory: ").append(toIndentedString(catgory)).append("\n");
    sb.append("    connection: ").append(toIndentedString(connection)).append("\n");
    sb.append("    ipBlock: ").append(toIndentedString(ipBlock)).append("\n");
    sb.append("    router: ").append(toIndentedString(router)).append("\n");
    sb.append("    port: ").append(toIndentedString(port)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}


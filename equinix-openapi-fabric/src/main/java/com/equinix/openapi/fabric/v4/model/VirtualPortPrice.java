/*
 * Equinix Fabric API v4
 *
 * Contact: api-support@equinix.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.equinix.openapi.fabric.v4.model;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

import java.util.Objects;
import java.util.UUID;

/**
 * Preferences and settings for a virtual port connected to an internet service provider (ISP) or other Equinix platform entity.
 */
@JsonPropertyOrder({
  VirtualPortPrice.JSON_PROPERTY_UUID,
  VirtualPortPrice.JSON_PROPERTY_TYPE,
  VirtualPortPrice.JSON_PROPERTY_LOCATION,
  VirtualPortPrice.JSON_PROPERTY_LAG,
  VirtualPortPrice.JSON_PROPERTY_PHYSICAL_PORTS_QUANTITY,
  VirtualPortPrice.JSON_PROPERTY_BANDWIDTH,
  VirtualPortPrice.JSON_PROPERTY_REDUNDANCY,
  VirtualPortPrice.JSON_PROPERTY_CONNECTIVITY_SOURCE,
  VirtualPortPrice.JSON_PROPERTY_SERVICE_TYPE,
  VirtualPortPrice.JSON_PROPERTY_SETTINGS
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class VirtualPortPrice {
  public static final String JSON_PROPERTY_UUID = "uuid";
  private UUID uuid;

  public static final String JSON_PROPERTY_TYPE = "type";
  private VirtualPortType type;

  public static final String JSON_PROPERTY_LOCATION = "location";
  private VirtualPortLocation location;

  public static final String JSON_PROPERTY_LAG = "lag";
  private LinkAggregationGroup lag;

  public static final String JSON_PROPERTY_PHYSICAL_PORTS_QUANTITY = "physicalPortsQuantity";
  private Integer physicalPortsQuantity = 1;

  public static final String JSON_PROPERTY_BANDWIDTH = "bandwidth";
  private Integer bandwidth;

  public static final String JSON_PROPERTY_REDUNDANCY = "redundancy";
  private VirtualPortRedundancy redundancy;

  public static final String JSON_PROPERTY_CONNECTIVITY_SOURCE = "connectivitySource";
  private ConnectivitySource connectivitySource;

  public static final String JSON_PROPERTY_SERVICE_TYPE = "serviceType";
  private VirtualPortServiceType serviceType = VirtualPortServiceType.MSP;

  public static final String JSON_PROPERTY_SETTINGS = "settings";
  private VirtualPortConfiguration settings;

  public VirtualPortPrice() {
  }

  public VirtualPortPrice uuid(UUID uuid) {
    
    this.uuid = uuid;
    return this;
  }

   /**
   * Unique identifier assigned to the virtual port. Either the uuid or the remaining attributes must be supplied.
   * @return uuid
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_UUID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public UUID getUuid() {
    return uuid;
  }


  @JsonProperty(JSON_PROPERTY_UUID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUuid(UUID uuid) {
    this.uuid = uuid;
  }


  public VirtualPortPrice type(VirtualPortType type) {
    
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public VirtualPortType getType() {
    return type;
  }


  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setType(VirtualPortType type) {
    this.type = type;
  }


  public VirtualPortPrice location(VirtualPortLocation location) {
    
    this.location = location;
    return this;
  }

   /**
   * Get location
   * @return location
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LOCATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public VirtualPortLocation getLocation() {
    return location;
  }


  @JsonProperty(JSON_PROPERTY_LOCATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLocation(VirtualPortLocation location) {
    this.location = location;
  }


  public VirtualPortPrice lag(LinkAggregationGroup lag) {
    
    this.lag = lag;
    return this;
  }

   /**
   * Get lag
   * @return lag
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LAG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public LinkAggregationGroup getLag() {
    return lag;
  }


  @JsonProperty(JSON_PROPERTY_LAG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLag(LinkAggregationGroup lag) {
    this.lag = lag;
  }


  public VirtualPortPrice physicalPortsQuantity(Integer physicalPortsQuantity) {
    
    this.physicalPortsQuantity = physicalPortsQuantity;
    return this;
  }

   /**
   * Number of physical ports requested. The defaults is 1.
   * @return physicalPortsQuantity
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PHYSICAL_PORTS_QUANTITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getPhysicalPortsQuantity() {
    return physicalPortsQuantity;
  }


  @JsonProperty(JSON_PROPERTY_PHYSICAL_PORTS_QUANTITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPhysicalPortsQuantity(Integer physicalPortsQuantity) {
    this.physicalPortsQuantity = physicalPortsQuantity;
  }


  public VirtualPortPrice bandwidth(Integer bandwidth) {
    
    this.bandwidth = bandwidth;
    return this;
  }

   /**
   * Aggregated data transfer capacity,  expressed as follows &lt;br&gt; -&gt; Mbps, megabits (1 million bits) per second &lt;br&gt; -&gt; Gbps, gigabits (1 billion bits) per second &lt;br&gt; Bandwidth must be divisible by physicalPortsQuantity.
   * @return bandwidth
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_BANDWIDTH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getBandwidth() {
    return bandwidth;
  }


  @JsonProperty(JSON_PROPERTY_BANDWIDTH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBandwidth(Integer bandwidth) {
    this.bandwidth = bandwidth;
  }


  public VirtualPortPrice redundancy(VirtualPortRedundancy redundancy) {
    
    this.redundancy = redundancy;
    return this;
  }

   /**
   * Get redundancy
   * @return redundancy
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_REDUNDANCY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public VirtualPortRedundancy getRedundancy() {
    return redundancy;
  }


  @JsonProperty(JSON_PROPERTY_REDUNDANCY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRedundancy(VirtualPortRedundancy redundancy) {
    this.redundancy = redundancy;
  }


  public VirtualPortPrice connectivitySource(ConnectivitySource connectivitySource) {
    
    this.connectivitySource = connectivitySource;
    return this;
  }

   /**
   * Get connectivitySource
   * @return connectivitySource
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CONNECTIVITY_SOURCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ConnectivitySource getConnectivitySource() {
    return connectivitySource;
  }


  @JsonProperty(JSON_PROPERTY_CONNECTIVITY_SOURCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setConnectivitySource(ConnectivitySource connectivitySource) {
    this.connectivitySource = connectivitySource;
  }


  public VirtualPortPrice serviceType(VirtualPortServiceType serviceType) {
    
    this.serviceType = serviceType;
    return this;
  }

   /**
   * Get serviceType
   * @return serviceType
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SERVICE_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public VirtualPortServiceType getServiceType() {
    return serviceType;
  }


  @JsonProperty(JSON_PROPERTY_SERVICE_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setServiceType(VirtualPortServiceType serviceType) {
    this.serviceType = serviceType;
  }


  public VirtualPortPrice settings(VirtualPortConfiguration settings) {
    
    this.settings = settings;
    return this;
  }

   /**
   * Get settings
   * @return settings
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SETTINGS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public VirtualPortConfiguration getSettings() {
    return settings;
  }


  @JsonProperty(JSON_PROPERTY_SETTINGS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSettings(VirtualPortConfiguration settings) {
    this.settings = settings;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    VirtualPortPrice virtualPortPrice = (VirtualPortPrice) o;
    return Objects.equals(this.uuid, virtualPortPrice.uuid) &&
        Objects.equals(this.type, virtualPortPrice.type) &&
        Objects.equals(this.location, virtualPortPrice.location) &&
        Objects.equals(this.lag, virtualPortPrice.lag) &&
        Objects.equals(this.physicalPortsQuantity, virtualPortPrice.physicalPortsQuantity) &&
        Objects.equals(this.bandwidth, virtualPortPrice.bandwidth) &&
        Objects.equals(this.redundancy, virtualPortPrice.redundancy) &&
        Objects.equals(this.connectivitySource, virtualPortPrice.connectivitySource) &&
        Objects.equals(this.serviceType, virtualPortPrice.serviceType) &&
        Objects.equals(this.settings, virtualPortPrice.settings);
  }

  @Override
  public int hashCode() {
    return Objects.hash(uuid, type, location, lag, physicalPortsQuantity, bandwidth, redundancy, connectivitySource, serviceType, settings);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class VirtualPortPrice {\n");
    sb.append("    uuid: ").append(toIndentedString(uuid)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    location: ").append(toIndentedString(location)).append("\n");
    sb.append("    lag: ").append(toIndentedString(lag)).append("\n");
    sb.append("    physicalPortsQuantity: ").append(toIndentedString(physicalPortsQuantity)).append("\n");
    sb.append("    bandwidth: ").append(toIndentedString(bandwidth)).append("\n");
    sb.append("    redundancy: ").append(toIndentedString(redundancy)).append("\n");
    sb.append("    connectivitySource: ").append(toIndentedString(connectivitySource)).append("\n");
    sb.append("    serviceType: ").append(toIndentedString(serviceType)).append("\n");
    sb.append("    settings: ").append(toIndentedString(settings)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}


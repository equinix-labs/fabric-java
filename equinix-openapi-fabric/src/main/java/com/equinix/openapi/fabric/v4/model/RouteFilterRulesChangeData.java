/*
 * Equinix Fabric API v4
 *
 * Contact: api-support@equinix.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.equinix.openapi.fabric.v4.model;

import com.fasterxml.jackson.annotation.*;

import java.net.URI;
import java.time.OffsetDateTime;
import java.util.Objects;

/**
 * Current state of latest Route Filter Rules change
 */
@JsonPropertyOrder({
  RouteFilterRulesChangeData.JSON_PROPERTY_STATUS,
  RouteFilterRulesChangeData.JSON_PROPERTY_CREATED_BY,
  RouteFilterRulesChangeData.JSON_PROPERTY_CREATED_DATE_TIME,
  RouteFilterRulesChangeData.JSON_PROPERTY_UPDATED_BY,
  RouteFilterRulesChangeData.JSON_PROPERTY_UPDATED_DATE_TIME,
  RouteFilterRulesChangeData.JSON_PROPERTY_DATA,
  RouteFilterRulesChangeData.JSON_PROPERTY_UUID,
  RouteFilterRulesChangeData.JSON_PROPERTY_TYPE,
  RouteFilterRulesChangeData.JSON_PROPERTY_HREF
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class RouteFilterRulesChangeData {
  /**
   * Current outcome of the change flow
   */
  public enum StatusEnum {
    COMPLETED("COMPLETED"),
    
    FAILED("FAILED"),
    
    REQUESTED("REQUESTED");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static StatusEnum fromValue(String value) {
      for (StatusEnum b : StatusEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_STATUS = "status";
  private StatusEnum status;

  public static final String JSON_PROPERTY_CREATED_BY = "createdBy";
  private String createdBy;

  public static final String JSON_PROPERTY_CREATED_DATE_TIME = "createdDateTime";
  private OffsetDateTime createdDateTime;

  public static final String JSON_PROPERTY_UPDATED_BY = "updatedBy";
  private String updatedBy;

  public static final String JSON_PROPERTY_UPDATED_DATE_TIME = "updatedDateTime";
  private OffsetDateTime updatedDateTime;

  public static final String JSON_PROPERTY_DATA = "data";
  private RouteFilterRulesChangeOperation data;

  public static final String JSON_PROPERTY_UUID = "uuid";
  private String uuid;

  /**
   * Type of change
   */
  public enum TypeEnum {
    IPV4_PREFIX_FILTER_RULE_UPDATE("BGP_IPv4_PREFIX_FILTER_RULE_UPDATE"),
    
    IPV4_PREFIX_FILTER_RULE_CREATION("BGP_IPv4_PREFIX_FILTER_RULE_CREATION"),
    
    IPV4_PREFIX_FILTER_RULE_DELETION("BGP_IPv4_PREFIX_FILTER_RULE_DELETION"),
    
    IPV6_PREFIX_FILTER_RULE_UPDATE("BGP_IPv6_PREFIX_FILTER_RULE_UPDATE"),
    
    IPV6_PREFIX_FILTER_RULE_CREATION("BGP_IPv6_PREFIX_FILTER_RULE_CREATION"),
    
    IPV6_PREFIX_FILTER_RULE_DELETION("BGP_IPv6_PREFIX_FILTER_RULE_DELETION");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static TypeEnum fromValue(String value) {
      for (TypeEnum b : TypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_TYPE = "type";
  private TypeEnum type;

  public static final String JSON_PROPERTY_HREF = "href";
  private URI href;

  public RouteFilterRulesChangeData() {
  }

  public RouteFilterRulesChangeData status(StatusEnum status) {
    
    this.status = status;
    return this;
  }

   /**
   * Current outcome of the change flow
   * @return status
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public StatusEnum getStatus() {
    return status;
  }


  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStatus(StatusEnum status) {
    this.status = status;
  }


  public RouteFilterRulesChangeData createdBy(String createdBy) {
    
    this.createdBy = createdBy;
    return this;
  }

   /**
   * Created by User Key
   * @return createdBy
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATED_BY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCreatedBy() {
    return createdBy;
  }


  @JsonProperty(JSON_PROPERTY_CREATED_BY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreatedBy(String createdBy) {
    this.createdBy = createdBy;
  }


  public RouteFilterRulesChangeData createdDateTime(OffsetDateTime createdDateTime) {
    
    this.createdDateTime = createdDateTime;
    return this;
  }

   /**
   * Set when change flow starts
   * @return createdDateTime
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATED_DATE_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getCreatedDateTime() {
    return createdDateTime;
  }


  @JsonProperty(JSON_PROPERTY_CREATED_DATE_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreatedDateTime(OffsetDateTime createdDateTime) {
    this.createdDateTime = createdDateTime;
  }


  public RouteFilterRulesChangeData updatedBy(String updatedBy) {
    
    this.updatedBy = updatedBy;
    return this;
  }

   /**
   * Updated by User Key
   * @return updatedBy
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_UPDATED_BY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getUpdatedBy() {
    return updatedBy;
  }


  @JsonProperty(JSON_PROPERTY_UPDATED_BY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUpdatedBy(String updatedBy) {
    this.updatedBy = updatedBy;
  }


  public RouteFilterRulesChangeData updatedDateTime(OffsetDateTime updatedDateTime) {
    
    this.updatedDateTime = updatedDateTime;
    return this;
  }

   /**
   * Set when change object is updated
   * @return updatedDateTime
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_UPDATED_DATE_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getUpdatedDateTime() {
    return updatedDateTime;
  }


  @JsonProperty(JSON_PROPERTY_UPDATED_DATE_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUpdatedDateTime(OffsetDateTime updatedDateTime) {
    this.updatedDateTime = updatedDateTime;
  }


  public RouteFilterRulesChangeData data(RouteFilterRulesChangeOperation data) {
    
    this.data = data;
    return this;
  }

   /**
   * Get data
   * @return data
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public RouteFilterRulesChangeOperation getData() {
    return data;
  }


  @JsonProperty(JSON_PROPERTY_DATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setData(RouteFilterRulesChangeOperation data) {
    this.data = data;
  }


  public RouteFilterRulesChangeData uuid(String uuid) {
    
    this.uuid = uuid;
    return this;
  }

   /**
   * Uniquely identifies a change
   * @return uuid
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_UUID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getUuid() {
    return uuid;
  }


  @JsonProperty(JSON_PROPERTY_UUID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setUuid(String uuid) {
    this.uuid = uuid;
  }


  public RouteFilterRulesChangeData type(TypeEnum type) {
    
    this.type = type;
    return this;
  }

   /**
   * Type of change
   * @return type
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public TypeEnum getType() {
    return type;
  }


  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setType(TypeEnum type) {
    this.type = type;
  }


  public RouteFilterRulesChangeData href(URI href) {
    
    this.href = href;
    return this;
  }

   /**
   * Route Filter Change URI
   * @return href
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_HREF)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public URI getHref() {
    return href;
  }


  @JsonProperty(JSON_PROPERTY_HREF)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setHref(URI href) {
    this.href = href;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RouteFilterRulesChangeData routeFilterRulesChangeData = (RouteFilterRulesChangeData) o;
    return Objects.equals(this.status, routeFilterRulesChangeData.status) &&
        Objects.equals(this.createdBy, routeFilterRulesChangeData.createdBy) &&
        Objects.equals(this.createdDateTime, routeFilterRulesChangeData.createdDateTime) &&
        Objects.equals(this.updatedBy, routeFilterRulesChangeData.updatedBy) &&
        Objects.equals(this.updatedDateTime, routeFilterRulesChangeData.updatedDateTime) &&
        Objects.equals(this.data, routeFilterRulesChangeData.data) &&
        Objects.equals(this.uuid, routeFilterRulesChangeData.uuid) &&
        Objects.equals(this.type, routeFilterRulesChangeData.type) &&
        Objects.equals(this.href, routeFilterRulesChangeData.href);
  }

  @Override
  public int hashCode() {
    return Objects.hash(status, createdBy, createdDateTime, updatedBy, updatedDateTime, data, uuid, type, href);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RouteFilterRulesChangeData {\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    createdBy: ").append(toIndentedString(createdBy)).append("\n");
    sb.append("    createdDateTime: ").append(toIndentedString(createdDateTime)).append("\n");
    sb.append("    updatedBy: ").append(toIndentedString(updatedBy)).append("\n");
    sb.append("    updatedDateTime: ").append(toIndentedString(updatedDateTime)).append("\n");
    sb.append("    data: ").append(toIndentedString(data)).append("\n");
    sb.append("    uuid: ").append(toIndentedString(uuid)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    href: ").append(toIndentedString(href)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}


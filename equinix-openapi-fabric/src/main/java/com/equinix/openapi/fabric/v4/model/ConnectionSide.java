/*
 * Equinix Fabric API v4
 *
 * Contact: api-support@equinix.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.equinix.openapi.fabric.v4.model;

import java.util.Objects;
import java.util.Arrays;
import com.equinix.openapi.fabric.v4.model.AccessPoint;
import com.equinix.openapi.fabric.v4.model.ConnectionCompanyProfile;
import com.equinix.openapi.fabric.v4.model.ConnectionInvitation;
import com.equinix.openapi.fabric.v4.model.ConnectionSideAdditionalInfo;
import com.equinix.openapi.fabric.v4.model.InternetAccess;
import com.equinix.openapi.fabric.v4.model.ServiceToken;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Connection configuration object for each side of multi-segment connection
 */
@JsonPropertyOrder({
  ConnectionSide.JSON_PROPERTY_SERVICE_TOKEN,
  ConnectionSide.JSON_PROPERTY_ACCESS_POINT,
  ConnectionSide.JSON_PROPERTY_INTERNET_ACCESS,
  ConnectionSide.JSON_PROPERTY_COMPANY_PROFILE,
  ConnectionSide.JSON_PROPERTY_INVITATION,
  ConnectionSide.JSON_PROPERTY_ADDITIONAL_INFO
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class ConnectionSide {
  public static final String JSON_PROPERTY_SERVICE_TOKEN = "serviceToken";
  private ServiceToken serviceToken;

  public static final String JSON_PROPERTY_ACCESS_POINT = "accessPoint";
  private AccessPoint accessPoint;

  public static final String JSON_PROPERTY_INTERNET_ACCESS = "internetAccess";
  private InternetAccess internetAccess;

  public static final String JSON_PROPERTY_COMPANY_PROFILE = "companyProfile";
  private ConnectionCompanyProfile companyProfile;

  public static final String JSON_PROPERTY_INVITATION = "invitation";
  private ConnectionInvitation invitation;

  public static final String JSON_PROPERTY_ADDITIONAL_INFO = "additionalInfo";
  private List<ConnectionSideAdditionalInfo> additionalInfo = new ArrayList<>();

  public ConnectionSide() {
  }

  public ConnectionSide serviceToken(ServiceToken serviceToken) {
    
    this.serviceToken = serviceToken;
    return this;
  }

   /**
   * Get serviceToken
   * @return serviceToken
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SERVICE_TOKEN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ServiceToken getServiceToken() {
    return serviceToken;
  }


  @JsonProperty(JSON_PROPERTY_SERVICE_TOKEN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setServiceToken(ServiceToken serviceToken) {
    this.serviceToken = serviceToken;
  }


  public ConnectionSide accessPoint(AccessPoint accessPoint) {
    
    this.accessPoint = accessPoint;
    return this;
  }

   /**
   * Get accessPoint
   * @return accessPoint
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ACCESS_POINT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public AccessPoint getAccessPoint() {
    return accessPoint;
  }


  @JsonProperty(JSON_PROPERTY_ACCESS_POINT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAccessPoint(AccessPoint accessPoint) {
    this.accessPoint = accessPoint;
  }


  public ConnectionSide internetAccess(InternetAccess internetAccess) {
    
    this.internetAccess = internetAccess;
    return this;
  }

   /**
   * Get internetAccess
   * @return internetAccess
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_INTERNET_ACCESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public InternetAccess getInternetAccess() {
    return internetAccess;
  }


  @JsonProperty(JSON_PROPERTY_INTERNET_ACCESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setInternetAccess(InternetAccess internetAccess) {
    this.internetAccess = internetAccess;
  }


  public ConnectionSide companyProfile(ConnectionCompanyProfile companyProfile) {
    
    this.companyProfile = companyProfile;
    return this;
  }

   /**
   * Get companyProfile
   * @return companyProfile
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_COMPANY_PROFILE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ConnectionCompanyProfile getCompanyProfile() {
    return companyProfile;
  }


  @JsonProperty(JSON_PROPERTY_COMPANY_PROFILE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCompanyProfile(ConnectionCompanyProfile companyProfile) {
    this.companyProfile = companyProfile;
  }


  public ConnectionSide invitation(ConnectionInvitation invitation) {
    
    this.invitation = invitation;
    return this;
  }

   /**
   * Get invitation
   * @return invitation
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_INVITATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ConnectionInvitation getInvitation() {
    return invitation;
  }


  @JsonProperty(JSON_PROPERTY_INVITATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setInvitation(ConnectionInvitation invitation) {
    this.invitation = invitation;
  }


  public ConnectionSide additionalInfo(List<ConnectionSideAdditionalInfo> additionalInfo) {
    
    this.additionalInfo = additionalInfo;
    return this;
  }

  public ConnectionSide addAdditionalInfoItem(ConnectionSideAdditionalInfo additionalInfoItem) {
    if (this.additionalInfo == null) {
      this.additionalInfo = new ArrayList<>();
    }
    this.additionalInfo.add(additionalInfoItem);
    return this;
  }

   /**
   * Any additional information, which is not part of connection metadata or configuration
   * @return additionalInfo
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ADDITIONAL_INFO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<ConnectionSideAdditionalInfo> getAdditionalInfo() {
    return additionalInfo;
  }


  @JsonProperty(JSON_PROPERTY_ADDITIONAL_INFO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAdditionalInfo(List<ConnectionSideAdditionalInfo> additionalInfo) {
    this.additionalInfo = additionalInfo;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ConnectionSide connectionSide = (ConnectionSide) o;
    return Objects.equals(this.serviceToken, connectionSide.serviceToken) &&
        Objects.equals(this.accessPoint, connectionSide.accessPoint) &&
        Objects.equals(this.internetAccess, connectionSide.internetAccess) &&
        Objects.equals(this.companyProfile, connectionSide.companyProfile) &&
        Objects.equals(this.invitation, connectionSide.invitation) &&
        Objects.equals(this.additionalInfo, connectionSide.additionalInfo);
  }

  @Override
  public int hashCode() {
    return Objects.hash(serviceToken, accessPoint, internetAccess, companyProfile, invitation, additionalInfo);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ConnectionSide {\n");
    sb.append("    serviceToken: ").append(toIndentedString(serviceToken)).append("\n");
    sb.append("    accessPoint: ").append(toIndentedString(accessPoint)).append("\n");
    sb.append("    internetAccess: ").append(toIndentedString(internetAccess)).append("\n");
    sb.append("    companyProfile: ").append(toIndentedString(companyProfile)).append("\n");
    sb.append("    invitation: ").append(toIndentedString(invitation)).append("\n");
    sb.append("    additionalInfo: ").append(toIndentedString(additionalInfo)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}


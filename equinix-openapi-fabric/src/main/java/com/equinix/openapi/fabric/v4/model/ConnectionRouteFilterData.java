/*
 * Equinix Fabric API v4
 *
 * Contact: api-support@equinix.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.equinix.openapi.fabric.v4.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.net.URI;
import java.util.UUID;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * ConnectionRouteFilterData
 */
@JsonPropertyOrder({
  ConnectionRouteFilterData.JSON_PROPERTY_HREF,
  ConnectionRouteFilterData.JSON_PROPERTY_TYPE,
  ConnectionRouteFilterData.JSON_PROPERTY_UUID,
  ConnectionRouteFilterData.JSON_PROPERTY_ATTACHMENT_STATUS,
  ConnectionRouteFilterData.JSON_PROPERTY_DIRECTION
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class ConnectionRouteFilterData {
  public static final String JSON_PROPERTY_HREF = "href";
  private URI href;

  /**
   * Route Filter type
   */
  public enum TypeEnum {
    IPV4_PREFIX_FILTER("BGP_IPv4_PREFIX_FILTER"),
    
    IPV6_PREFIX_FILTER("BGP_IPv6_PREFIX_FILTER");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static TypeEnum fromValue(String value) {
      for (TypeEnum b : TypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_TYPE = "type";
  private TypeEnum type;

  public static final String JSON_PROPERTY_UUID = "uuid";
  private UUID uuid;

  /**
   * Gets or Sets attachmentStatus
   */
  public enum AttachmentStatusEnum {
    ATTACHING("ATTACHING"),
    
    ATTACHED("ATTACHED"),
    
    DETACHED("DETACHED"),
    
    DETACHING("DETACHING"),
    
    FAILED("FAILED"),
    
    PENDING_BGP_CONFIGURATION("PENDING_BGP_CONFIGURATION");

    private String value;

    AttachmentStatusEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static AttachmentStatusEnum fromValue(String value) {
      for (AttachmentStatusEnum b : AttachmentStatusEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_ATTACHMENT_STATUS = "attachmentStatus";
  private AttachmentStatusEnum attachmentStatus;

  /**
   * Gets or Sets direction
   */
  public enum DirectionEnum {
    INBOUND("INBOUND"),
    
    OUTBOUND("OUTBOUND");

    private String value;

    DirectionEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static DirectionEnum fromValue(String value) {
      for (DirectionEnum b : DirectionEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_DIRECTION = "direction";
  private DirectionEnum direction;

  public ConnectionRouteFilterData() {
  }

  public ConnectionRouteFilterData href(URI href) {
    
    this.href = href;
    return this;
  }

   /**
   * Route Filter URI
   * @return href
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_HREF)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public URI getHref() {
    return href;
  }


  @JsonProperty(JSON_PROPERTY_HREF)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setHref(URI href) {
    this.href = href;
  }


  public ConnectionRouteFilterData type(TypeEnum type) {
    
    this.type = type;
    return this;
  }

   /**
   * Route Filter type
   * @return type
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public TypeEnum getType() {
    return type;
  }


  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setType(TypeEnum type) {
    this.type = type;
  }


  public ConnectionRouteFilterData uuid(UUID uuid) {
    
    this.uuid = uuid;
    return this;
  }

   /**
   * Route Filter identifier
   * @return uuid
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_UUID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public UUID getUuid() {
    return uuid;
  }


  @JsonProperty(JSON_PROPERTY_UUID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUuid(UUID uuid) {
    this.uuid = uuid;
  }


  public ConnectionRouteFilterData attachmentStatus(AttachmentStatusEnum attachmentStatus) {
    
    this.attachmentStatus = attachmentStatus;
    return this;
  }

   /**
   * Get attachmentStatus
   * @return attachmentStatus
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ATTACHMENT_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public AttachmentStatusEnum getAttachmentStatus() {
    return attachmentStatus;
  }


  @JsonProperty(JSON_PROPERTY_ATTACHMENT_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAttachmentStatus(AttachmentStatusEnum attachmentStatus) {
    this.attachmentStatus = attachmentStatus;
  }


  public ConnectionRouteFilterData direction(DirectionEnum direction) {
    
    this.direction = direction;
    return this;
  }

   /**
   * Get direction
   * @return direction
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DIRECTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public DirectionEnum getDirection() {
    return direction;
  }


  @JsonProperty(JSON_PROPERTY_DIRECTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDirection(DirectionEnum direction) {
    this.direction = direction;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ConnectionRouteFilterData connectionRouteFilterData = (ConnectionRouteFilterData) o;
    return Objects.equals(this.href, connectionRouteFilterData.href) &&
        Objects.equals(this.type, connectionRouteFilterData.type) &&
        Objects.equals(this.uuid, connectionRouteFilterData.uuid) &&
        Objects.equals(this.attachmentStatus, connectionRouteFilterData.attachmentStatus) &&
        Objects.equals(this.direction, connectionRouteFilterData.direction);
  }

  @Override
  public int hashCode() {
    return Objects.hash(href, type, uuid, attachmentStatus, direction);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ConnectionRouteFilterData {\n");
    sb.append("    href: ").append(toIndentedString(href)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    uuid: ").append(toIndentedString(uuid)).append("\n");
    sb.append("    attachmentStatus: ").append(toIndentedString(attachmentStatus)).append("\n");
    sb.append("    direction: ").append(toIndentedString(direction)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}


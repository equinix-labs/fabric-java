/*
 * Equinix Fabric API v4
 *
 * Contact: api-support@equinix.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.equinix.openapi.fabric.v4.model;

import java.util.Objects;
import java.util.Arrays;
import com.equinix.openapi.fabric.v4.model.ServiceProfileAndFilter;
import com.equinix.openapi.fabric.v4.model.ServiceProfileSimpleExpression;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * ServiceProfileFilter
 */
@JsonPropertyOrder({
  ServiceProfileFilter.JSON_PROPERTY_PROPERTY,
  ServiceProfileFilter.JSON_PROPERTY_OPERATOR,
  ServiceProfileFilter.JSON_PROPERTY_VALUES,
  ServiceProfileFilter.JSON_PROPERTY_AND
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class ServiceProfileFilter {
  public static final String JSON_PROPERTY_PROPERTY = "property";
  private String property;

  public static final String JSON_PROPERTY_OPERATOR = "operator";
  private String operator;

  public static final String JSON_PROPERTY_VALUES = "values";
  private List<String> values = new ArrayList<>();

  public static final String JSON_PROPERTY_AND = "and";
  private List<ServiceProfileSimpleExpression> and = new ArrayList<>();

  public ServiceProfileFilter() {
  }

  public ServiceProfileFilter property(String property) {
    
    this.property = property;
    return this;
  }

   /**
   * Possible field names to use on filters:  * &#x60;/name&#x60; - Service Profile name  * &#x60;/uuid&#x60; - Service Profile uuid  * &#x60;/state&#x60; - Service Profile status  * &#x60;/metros/code&#x60; - Service Profile metro code  * &#x60;/visibility&#x60; - Service Profile package  * &#x60;/type&#x60; - Service Profile package  * &#x60;/project/projectId&#x60; - Service Profile project id 
   * @return property
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PROPERTY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getProperty() {
    return property;
  }


  @JsonProperty(JSON_PROPERTY_PROPERTY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setProperty(String property) {
    this.property = property;
  }


  public ServiceProfileFilter operator(String operator) {
    
    this.operator = operator;
    return this;
  }

   /**
   * Possible operators to use on filters:  * &#x60;&#x3D;&#x60; - equal 
   * @return operator
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_OPERATOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getOperator() {
    return operator;
  }


  @JsonProperty(JSON_PROPERTY_OPERATOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOperator(String operator) {
    this.operator = operator;
  }


  public ServiceProfileFilter values(List<String> values) {
    
    this.values = values;
    return this;
  }

  public ServiceProfileFilter addValuesItem(String valuesItem) {
    if (this.values == null) {
      this.values = new ArrayList<>();
    }
    this.values.add(valuesItem);
    return this;
  }

   /**
   * Get values
   * @return values
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_VALUES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getValues() {
    return values;
  }


  @JsonProperty(JSON_PROPERTY_VALUES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setValues(List<String> values) {
    this.values = values;
  }


  public ServiceProfileFilter and(List<ServiceProfileSimpleExpression> and) {
    
    this.and = and;
    return this;
  }

  public ServiceProfileFilter addAndItem(ServiceProfileSimpleExpression andItem) {
    if (this.and == null) {
      this.and = new ArrayList<>();
    }
    this.and.add(andItem);
    return this;
  }

   /**
   * Get and
   * @return and
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_AND)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<ServiceProfileSimpleExpression> getAnd() {
    return and;
  }


  @JsonProperty(JSON_PROPERTY_AND)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAnd(List<ServiceProfileSimpleExpression> and) {
    this.and = and;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ServiceProfileFilter serviceProfileFilter = (ServiceProfileFilter) o;
    return Objects.equals(this.property, serviceProfileFilter.property) &&
        Objects.equals(this.operator, serviceProfileFilter.operator) &&
        Objects.equals(this.values, serviceProfileFilter.values) &&
        Objects.equals(this.and, serviceProfileFilter.and);
  }

  @Override
  public int hashCode() {
    return Objects.hash(property, operator, values, and);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ServiceProfileFilter {\n");
    sb.append("    property: ").append(toIndentedString(property)).append("\n");
    sb.append("    operator: ").append(toIndentedString(operator)).append("\n");
    sb.append("    values: ").append(toIndentedString(values)).append("\n");
    sb.append("    and: ").append(toIndentedString(and)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}


/*
 * Equinix Fabric API v4
 *
 * Contact: api-support@equinix.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.equinix.openapi.fabric.v4.model;

import java.util.Objects;
import java.util.Arrays;
import com.equinix.openapi.fabric.v4.model.ConnectedMetro;
import com.equinix.openapi.fabric.v4.model.GeoCoordinates;
import com.equinix.openapi.fabric.v4.model.GeoScopeType;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * GET Metros retrieves all Equinix? Fabric? metros, as well as latency data for each location.This performance data helps network planning engineers and administrators make strategic decisions about port locations and traffic routes.
 */
@JsonPropertyOrder({
  Metro.JSON_PROPERTY_HREF,
  Metro.JSON_PROPERTY_TYPE,
  Metro.JSON_PROPERTY_CODE,
  Metro.JSON_PROPERTY_REGION,
  Metro.JSON_PROPERTY_NAME,
  Metro.JSON_PROPERTY_EQUINIX_ASN,
  Metro.JSON_PROPERTY_LOCAL_V_C_BANDWIDTH_MAX,
  Metro.JSON_PROPERTY_GEO_COORDINATES,
  Metro.JSON_PROPERTY_CONNECTED_METROS,
  Metro.JSON_PROPERTY_GEO_SCOPES
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class Metro {
  public static final String JSON_PROPERTY_HREF = "href";
  private String href;

  public static final String JSON_PROPERTY_TYPE = "type";
  private String type;

  public static final String JSON_PROPERTY_CODE = "code";
  private String code;

  public static final String JSON_PROPERTY_REGION = "region";
  private String region;

  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_EQUINIX_ASN = "equinixAsn";
  private Long equinixAsn;

  public static final String JSON_PROPERTY_LOCAL_V_C_BANDWIDTH_MAX = "localVCBandwidthMax";
  private Long localVCBandwidthMax;

  public static final String JSON_PROPERTY_GEO_COORDINATES = "geoCoordinates";
  private GeoCoordinates geoCoordinates;

  public static final String JSON_PROPERTY_CONNECTED_METROS = "connectedMetros";
  private List<ConnectedMetro> connectedMetros = new ArrayList<>();

  public static final String JSON_PROPERTY_GEO_SCOPES = "geoScopes";
  private List<GeoScopeType> geoScopes = new ArrayList<>();

  public Metro() {
  }

  public Metro href(String href) {
    
    this.href = href;
    return this;
  }

   /**
   * The Canonical URL at which the resource resides.
   * @return href
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_HREF)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getHref() {
    return href;
  }


  @JsonProperty(JSON_PROPERTY_HREF)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setHref(String href) {
    this.href = href;
  }


  public Metro type(String type) {
    
    this.type = type;
    return this;
  }

   /**
   * Indicator of a Fabric Metro
   * @return type
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getType() {
    return type;
  }


  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setType(String type) {
    this.type = type;
  }


  public Metro code(String code) {
    
    this.code = code;
    return this;
  }

   /**
   * Code Assigned to an Equinix IBX data center in a specified metropolitan area.
   * @return code
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCode() {
    return code;
  }


  @JsonProperty(JSON_PROPERTY_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCode(String code) {
    this.code = code;
  }


  public Metro region(String region) {
    
    this.region = region;
    return this;
  }

   /**
   * Board geographic area in which the data center is located
   * @return region
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_REGION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getRegion() {
    return region;
  }


  @JsonProperty(JSON_PROPERTY_REGION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRegion(String region) {
    this.region = region;
  }


  public Metro name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Name of the region in which the data center is located.
   * @return name
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setName(String name) {
    this.name = name;
  }


  public Metro equinixAsn(Long equinixAsn) {
    
    this.equinixAsn = equinixAsn;
    return this;
  }

   /**
   * Autonomous system number (ASN) for a specified Fabric metro. The ASN is a unique identifier that carries the network routing protocol and exchanges that data with other internal systems via border gateway protocol.
   * @return equinixAsn
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EQUINIX_ASN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getEquinixAsn() {
    return equinixAsn;
  }


  @JsonProperty(JSON_PROPERTY_EQUINIX_ASN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEquinixAsn(Long equinixAsn) {
    this.equinixAsn = equinixAsn;
  }


  public Metro localVCBandwidthMax(Long localVCBandwidthMax) {
    
    this.localVCBandwidthMax = localVCBandwidthMax;
    return this;
  }

   /**
   * This field holds Max Connection speed with in the metro
   * @return localVCBandwidthMax
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LOCAL_V_C_BANDWIDTH_MAX)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getLocalVCBandwidthMax() {
    return localVCBandwidthMax;
  }


  @JsonProperty(JSON_PROPERTY_LOCAL_V_C_BANDWIDTH_MAX)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLocalVCBandwidthMax(Long localVCBandwidthMax) {
    this.localVCBandwidthMax = localVCBandwidthMax;
  }


  public Metro geoCoordinates(GeoCoordinates geoCoordinates) {
    
    this.geoCoordinates = geoCoordinates;
    return this;
  }

   /**
   * Get geoCoordinates
   * @return geoCoordinates
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_GEO_COORDINATES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public GeoCoordinates getGeoCoordinates() {
    return geoCoordinates;
  }


  @JsonProperty(JSON_PROPERTY_GEO_COORDINATES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setGeoCoordinates(GeoCoordinates geoCoordinates) {
    this.geoCoordinates = geoCoordinates;
  }


  public Metro connectedMetros(List<ConnectedMetro> connectedMetros) {
    
    this.connectedMetros = connectedMetros;
    return this;
  }

  public Metro addConnectedMetrosItem(ConnectedMetro connectedMetrosItem) {
    if (this.connectedMetros == null) {
      this.connectedMetros = new ArrayList<>();
    }
    this.connectedMetros.add(connectedMetrosItem);
    return this;
  }

   /**
   * Get connectedMetros
   * @return connectedMetros
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CONNECTED_METROS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<ConnectedMetro> getConnectedMetros() {
    return connectedMetros;
  }


  @JsonProperty(JSON_PROPERTY_CONNECTED_METROS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setConnectedMetros(List<ConnectedMetro> connectedMetros) {
    this.connectedMetros = connectedMetros;
  }


  public Metro geoScopes(List<GeoScopeType> geoScopes) {
    
    this.geoScopes = geoScopes;
    return this;
  }

  public Metro addGeoScopesItem(GeoScopeType geoScopesItem) {
    if (this.geoScopes == null) {
      this.geoScopes = new ArrayList<>();
    }
    this.geoScopes.add(geoScopesItem);
    return this;
  }

   /**
   * List of supported geographic boundaries of a Fabric Metro.
   * @return geoScopes
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_GEO_SCOPES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<GeoScopeType> getGeoScopes() {
    return geoScopes;
  }


  @JsonProperty(JSON_PROPERTY_GEO_SCOPES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setGeoScopes(List<GeoScopeType> geoScopes) {
    this.geoScopes = geoScopes;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Metro metro = (Metro) o;
    return Objects.equals(this.href, metro.href) &&
        Objects.equals(this.type, metro.type) &&
        Objects.equals(this.code, metro.code) &&
        Objects.equals(this.region, metro.region) &&
        Objects.equals(this.name, metro.name) &&
        Objects.equals(this.equinixAsn, metro.equinixAsn) &&
        Objects.equals(this.localVCBandwidthMax, metro.localVCBandwidthMax) &&
        Objects.equals(this.geoCoordinates, metro.geoCoordinates) &&
        Objects.equals(this.connectedMetros, metro.connectedMetros) &&
        Objects.equals(this.geoScopes, metro.geoScopes);
  }

  @Override
  public int hashCode() {
    return Objects.hash(href, type, code, region, name, equinixAsn, localVCBandwidthMax, geoCoordinates, connectedMetros, geoScopes);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Metro {\n");
    sb.append("    href: ").append(toIndentedString(href)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    code: ").append(toIndentedString(code)).append("\n");
    sb.append("    region: ").append(toIndentedString(region)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    equinixAsn: ").append(toIndentedString(equinixAsn)).append("\n");
    sb.append("    localVCBandwidthMax: ").append(toIndentedString(localVCBandwidthMax)).append("\n");
    sb.append("    geoCoordinates: ").append(toIndentedString(geoCoordinates)).append("\n");
    sb.append("    connectedMetros: ").append(toIndentedString(connectedMetros)).append("\n");
    sb.append("    geoScopes: ").append(toIndentedString(geoScopes)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}


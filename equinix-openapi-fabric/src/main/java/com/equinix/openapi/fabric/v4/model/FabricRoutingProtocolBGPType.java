/*
 * Equinix Fabric API v4
 *
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.equinix.openapi.fabric.v4.model;

import java.util.Objects;
import java.util.Arrays;
import com.equinix.openapi.fabric.v4.model.FabricBGPConnectionIpv4;
import com.equinix.openapi.fabric.v4.model.TopologyProperties;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.UUID;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.equinix.openapi.fabric.JSON;

/**
 * Defines the structure for BGP routing protocol configuration, including protocol type, BGP IPv4 settings, customer ASN, authentication key, and deployment properties. 
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class FabricRoutingProtocolBGPType {
  /**
   * Routing protocol type
   */
  @JsonAdapter(TypeEnum.Adapter.class)
  public enum TypeEnum {
    BGP("BGP");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static TypeEnum fromValue(String value) {
      for (TypeEnum b : TypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<TypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final TypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public TypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return TypeEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private TypeEnum type;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_UUID = "uuid";
  @SerializedName(SERIALIZED_NAME_UUID)
  private UUID uuid;

  public static final String SERIALIZED_NAME_BGP_IPV4 = "bgpIpv4";
  @SerializedName(SERIALIZED_NAME_BGP_IPV4)
  private FabricBGPConnectionIpv4 bgpIpv4;

  public static final String SERIALIZED_NAME_CUSTOMER_ASN = "customerAsn";
  @SerializedName(SERIALIZED_NAME_CUSTOMER_ASN)
  private Long customerAsn;

  public static final String SERIALIZED_NAME_BGP_AUTH_KEY = "bgpAuthKey";
  @SerializedName(SERIALIZED_NAME_BGP_AUTH_KEY)
  private String bgpAuthKey;

  public static final String SERIALIZED_NAME_AS_OVERRIDE_ENABLED = "asOverrideEnabled";
  @SerializedName(SERIALIZED_NAME_AS_OVERRIDE_ENABLED)
  private Boolean asOverrideEnabled;

  public static final String SERIALIZED_NAME_DEPLOYMENT_PROPERTIES = "deploymentProperties";
  @SerializedName(SERIALIZED_NAME_DEPLOYMENT_PROPERTIES)
  private TopologyProperties deploymentProperties;

  public FabricRoutingProtocolBGPType() {
  }

  public FabricRoutingProtocolBGPType type(TypeEnum type) {
    
    this.type = type;
    return this;
  }

   /**
   * Routing protocol type
   * @return type
  **/
  @javax.annotation.Nonnull

  public TypeEnum getType() {
    return type;
  }


  public void setType(TypeEnum type) {
    this.type = type;
  }


  public FabricRoutingProtocolBGPType name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nullable

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public FabricRoutingProtocolBGPType uuid(UUID uuid) {
    
    this.uuid = uuid;
    return this;
  }

   /**
   * Equinix-assigned route protocol identifier
   * @return uuid
  **/
  @javax.annotation.Nullable

  public UUID getUuid() {
    return uuid;
  }


  public void setUuid(UUID uuid) {
    this.uuid = uuid;
  }


  public FabricRoutingProtocolBGPType bgpIpv4(FabricBGPConnectionIpv4 bgpIpv4) {
    
    this.bgpIpv4 = bgpIpv4;
    return this;
  }

   /**
   * Get bgpIpv4
   * @return bgpIpv4
  **/
  @javax.annotation.Nonnull

  public FabricBGPConnectionIpv4 getBgpIpv4() {
    return bgpIpv4;
  }


  public void setBgpIpv4(FabricBGPConnectionIpv4 bgpIpv4) {
    this.bgpIpv4 = bgpIpv4;
  }


  public FabricRoutingProtocolBGPType customerAsn(Long customerAsn) {
    
    this.customerAsn = customerAsn;
    return this;
  }

   /**
   * Customer asn
   * @return customerAsn
  **/
  @javax.annotation.Nonnull

  public Long getCustomerAsn() {
    return customerAsn;
  }


  public void setCustomerAsn(Long customerAsn) {
    this.customerAsn = customerAsn;
  }


  public FabricRoutingProtocolBGPType bgpAuthKey(String bgpAuthKey) {
    
    this.bgpAuthKey = bgpAuthKey;
    return this;
  }

   /**
   * BGP authorization key
   * @return bgpAuthKey
  **/
  @javax.annotation.Nonnull

  public String getBgpAuthKey() {
    return bgpAuthKey;
  }


  public void setBgpAuthKey(String bgpAuthKey) {
    this.bgpAuthKey = bgpAuthKey;
  }


  public FabricRoutingProtocolBGPType asOverrideEnabled(Boolean asOverrideEnabled) {
    
    this.asOverrideEnabled = asOverrideEnabled;
    return this;
  }

   /**
   * Enable AS number override
   * @return asOverrideEnabled
  **/
  @javax.annotation.Nullable

  public Boolean getAsOverrideEnabled() {
    return asOverrideEnabled;
  }


  public void setAsOverrideEnabled(Boolean asOverrideEnabled) {
    this.asOverrideEnabled = asOverrideEnabled;
  }


  public FabricRoutingProtocolBGPType deploymentProperties(TopologyProperties deploymentProperties) {
    
    this.deploymentProperties = deploymentProperties;
    return this;
  }

   /**
   * Get deploymentProperties
   * @return deploymentProperties
  **/
  @javax.annotation.Nullable

  public TopologyProperties getDeploymentProperties() {
    return deploymentProperties;
  }


  public void setDeploymentProperties(TopologyProperties deploymentProperties) {
    this.deploymentProperties = deploymentProperties;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the FabricRoutingProtocolBGPType instance itself
   */
  public FabricRoutingProtocolBGPType putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FabricRoutingProtocolBGPType fabricRoutingProtocolBGPType = (FabricRoutingProtocolBGPType) o;
    return Objects.equals(this.type, fabricRoutingProtocolBGPType.type) &&
        Objects.equals(this.name, fabricRoutingProtocolBGPType.name) &&
        Objects.equals(this.uuid, fabricRoutingProtocolBGPType.uuid) &&
        Objects.equals(this.bgpIpv4, fabricRoutingProtocolBGPType.bgpIpv4) &&
        Objects.equals(this.customerAsn, fabricRoutingProtocolBGPType.customerAsn) &&
        Objects.equals(this.bgpAuthKey, fabricRoutingProtocolBGPType.bgpAuthKey) &&
        Objects.equals(this.asOverrideEnabled, fabricRoutingProtocolBGPType.asOverrideEnabled) &&
        Objects.equals(this.deploymentProperties, fabricRoutingProtocolBGPType.deploymentProperties)&&
        Objects.equals(this.additionalProperties, fabricRoutingProtocolBGPType.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(type, name, uuid, bgpIpv4, customerAsn, bgpAuthKey, asOverrideEnabled, deploymentProperties, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FabricRoutingProtocolBGPType {\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    uuid: ").append(toIndentedString(uuid)).append("\n");
    sb.append("    bgpIpv4: ").append(toIndentedString(bgpIpv4)).append("\n");
    sb.append("    customerAsn: ").append(toIndentedString(customerAsn)).append("\n");
    sb.append("    bgpAuthKey: ").append(toIndentedString(bgpAuthKey)).append("\n");
    sb.append("    asOverrideEnabled: ").append(toIndentedString(asOverrideEnabled)).append("\n");
    sb.append("    deploymentProperties: ").append(toIndentedString(deploymentProperties)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("type");
    openapiFields.add("name");
    openapiFields.add("uuid");
    openapiFields.add("bgpIpv4");
    openapiFields.add("customerAsn");
    openapiFields.add("bgpAuthKey");
    openapiFields.add("asOverrideEnabled");
    openapiFields.add("deploymentProperties");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("type");
    openapiRequiredFields.add("bgpIpv4");
    openapiRequiredFields.add("customerAsn");
    openapiRequiredFields.add("bgpAuthKey");
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to FabricRoutingProtocolBGPType
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!FabricRoutingProtocolBGPType.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in FabricRoutingProtocolBGPType is not found in the empty JSON string", FabricRoutingProtocolBGPType.openapiRequiredFields.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : FabricRoutingProtocolBGPType.openapiRequiredFields) {
        if (jsonObj.get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonObj.toString()));
        }
      }
      if (!jsonObj.get("type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("type").toString()));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if ((jsonObj.get("uuid") != null && !jsonObj.get("uuid").isJsonNull()) && !jsonObj.get("uuid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `uuid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("uuid").toString()));
      }
      // validate the required field `bgpIpv4`
      FabricBGPConnectionIpv4.validateJsonObject(jsonObj.getAsJsonObject("bgpIpv4"));
      if (!jsonObj.get("bgpAuthKey").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `bgpAuthKey` to be a primitive type in the JSON string but got `%s`", jsonObj.get("bgpAuthKey").toString()));
      }
      // validate the optional field `deploymentProperties`
      if (jsonObj.get("deploymentProperties") != null && !jsonObj.get("deploymentProperties").isJsonNull()) {
        TopologyProperties.validateJsonObject(jsonObj.getAsJsonObject("deploymentProperties"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!FabricRoutingProtocolBGPType.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'FabricRoutingProtocolBGPType' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<FabricRoutingProtocolBGPType> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(FabricRoutingProtocolBGPType.class));

       return (TypeAdapter<T>) new TypeAdapter<FabricRoutingProtocolBGPType>() {
           @Override
           public void write(JsonWriter out, FabricRoutingProtocolBGPType value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additional properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public FabricRoutingProtocolBGPType read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             FabricRoutingProtocolBGPType instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of FabricRoutingProtocolBGPType given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of FabricRoutingProtocolBGPType
  * @throws IOException if the JSON string is invalid with respect to FabricRoutingProtocolBGPType
  */
  public static FabricRoutingProtocolBGPType fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, FabricRoutingProtocolBGPType.class);
  }

 /**
  * Convert an instance of FabricRoutingProtocolBGPType to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}


/*
 * Equinix Fabric API v4
 *
 * Contact: api-support@equinix.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.equinix.openapi.fabric.v4.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Connection Invitation Details
 */
@JsonPropertyOrder({
  ConnectionInvitation.JSON_PROPERTY_EMAIL,
  ConnectionInvitation.JSON_PROPERTY_MESSAGE,
  ConnectionInvitation.JSON_PROPERTY_CTR_DRAFT_ORDER_ID
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class ConnectionInvitation {
  public static final String JSON_PROPERTY_EMAIL = "email";
  private String email;

  public static final String JSON_PROPERTY_MESSAGE = "message";
  private String message;

  public static final String JSON_PROPERTY_CTR_DRAFT_ORDER_ID = "ctrDraftOrderId";
  private String ctrDraftOrderId;

  public ConnectionInvitation() {
  }

  public ConnectionInvitation email(String email) {
    
    this.email = email;
    return this;
  }

   /**
   * invitee email
   * @return email
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EMAIL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getEmail() {
    return email;
  }


  @JsonProperty(JSON_PROPERTY_EMAIL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEmail(String email) {
    this.email = email;
  }


  public ConnectionInvitation message(String message) {
    
    this.message = message;
    return this;
  }

   /**
   * invitation message
   * @return message
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MESSAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getMessage() {
    return message;
  }


  @JsonProperty(JSON_PROPERTY_MESSAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMessage(String message) {
    this.message = message;
  }


  public ConnectionInvitation ctrDraftOrderId(String ctrDraftOrderId) {
    
    this.ctrDraftOrderId = ctrDraftOrderId;
    return this;
  }

   /**
   * draft order id for invitation
   * @return ctrDraftOrderId
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CTR_DRAFT_ORDER_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCtrDraftOrderId() {
    return ctrDraftOrderId;
  }


  @JsonProperty(JSON_PROPERTY_CTR_DRAFT_ORDER_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCtrDraftOrderId(String ctrDraftOrderId) {
    this.ctrDraftOrderId = ctrDraftOrderId;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ConnectionInvitation connectionInvitation = (ConnectionInvitation) o;
    return Objects.equals(this.email, connectionInvitation.email) &&
        Objects.equals(this.message, connectionInvitation.message) &&
        Objects.equals(this.ctrDraftOrderId, connectionInvitation.ctrDraftOrderId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(email, message, ctrDraftOrderId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ConnectionInvitation {\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    message: ").append(toIndentedString(message)).append("\n");
    sb.append("    ctrDraftOrderId: ").append(toIndentedString(ctrDraftOrderId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}


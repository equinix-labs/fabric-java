/*
 * Equinix Fabric API v4
 *
 * Contact: api-support@equinix.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.equinix.openapi.fabric.v4.model;

import com.fasterxml.jackson.annotation.*;

import java.math.BigDecimal;
import java.net.URI;
import java.util.ArrayList;
import java.util.List;
import java.util.Objects;
import java.util.UUID;

/**
 * NetworkAllOf
 */
@JsonPropertyOrder({
  NetworkAllOf.JSON_PROPERTY_HREF,
  NetworkAllOf.JSON_PROPERTY_UUID,
  NetworkAllOf.JSON_PROPERTY_STATE,
  NetworkAllOf.JSON_PROPERTY_CONNECTIONS_COUNT,
  NetworkAllOf.JSON_PROPERTY_ACCOUNT,
  NetworkAllOf.JSON_PROPERTY_CHANGE,
  NetworkAllOf.JSON_PROPERTY_OPERATION,
  NetworkAllOf.JSON_PROPERTY_CHANGE_LOG,
  NetworkAllOf.JSON_PROPERTY_LINKS
})
@JsonTypeName("Network_allOf")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class NetworkAllOf {
  public static final String JSON_PROPERTY_HREF = "href";
  private URI href;

  public static final String JSON_PROPERTY_UUID = "uuid";
  private UUID uuid;

  public static final String JSON_PROPERTY_STATE = "state";
  private NetworkState state;

  public static final String JSON_PROPERTY_CONNECTIONS_COUNT = "connectionsCount";
  private BigDecimal connectionsCount;

  public static final String JSON_PROPERTY_ACCOUNT = "account";
  private SimplifiedAccount account;

  public static final String JSON_PROPERTY_CHANGE = "change";
  private SimplifiedNetworkChange change;

  public static final String JSON_PROPERTY_OPERATION = "operation";
  private NetworkOperation operation;

  public static final String JSON_PROPERTY_CHANGE_LOG = "changeLog";
  private Changelog changeLog;

  public static final String JSON_PROPERTY_LINKS = "links";
  private List<Link> links = new ArrayList<>();

  public NetworkAllOf() {
  }

  @JsonCreator
  public NetworkAllOf(
    @JsonProperty(JSON_PROPERTY_HREF) URI href, 
    @JsonProperty(JSON_PROPERTY_LINKS) List<Link> links
  ) {
    this();
    this.href = href;
    this.links = links;
  }

   /**
   * Network URI
   * @return href
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_HREF)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public URI getHref() {
    return href;
  }




  public NetworkAllOf uuid(UUID uuid) {
    
    this.uuid = uuid;
    return this;
  }

   /**
   * Equinix-assigned network identifier
   * @return uuid
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_UUID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public UUID getUuid() {
    return uuid;
  }


  @JsonProperty(JSON_PROPERTY_UUID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setUuid(UUID uuid) {
    this.uuid = uuid;
  }


  public NetworkAllOf state(NetworkState state) {
    
    this.state = state;
    return this;
  }

   /**
   * Get state
   * @return state
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_STATE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public NetworkState getState() {
    return state;
  }


  @JsonProperty(JSON_PROPERTY_STATE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setState(NetworkState state) {
    this.state = state;
  }


  public NetworkAllOf connectionsCount(BigDecimal connectionsCount) {
    
    this.connectionsCount = connectionsCount;
    return this;
  }

   /**
   * number of connections created on the network
   * @return connectionsCount
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CONNECTIONS_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getConnectionsCount() {
    return connectionsCount;
  }


  @JsonProperty(JSON_PROPERTY_CONNECTIONS_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setConnectionsCount(BigDecimal connectionsCount) {
    this.connectionsCount = connectionsCount;
  }


  public NetworkAllOf account(SimplifiedAccount account) {
    
    this.account = account;
    return this;
  }

   /**
   * Get account
   * @return account
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ACCOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public SimplifiedAccount getAccount() {
    return account;
  }


  @JsonProperty(JSON_PROPERTY_ACCOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAccount(SimplifiedAccount account) {
    this.account = account;
  }


  public NetworkAllOf change(SimplifiedNetworkChange change) {
    
    this.change = change;
    return this;
  }

   /**
   * Get change
   * @return change
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CHANGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public SimplifiedNetworkChange getChange() {
    return change;
  }


  @JsonProperty(JSON_PROPERTY_CHANGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setChange(SimplifiedNetworkChange change) {
    this.change = change;
  }


  public NetworkAllOf operation(NetworkOperation operation) {
    
    this.operation = operation;
    return this;
  }

   /**
   * Get operation
   * @return operation
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_OPERATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public NetworkOperation getOperation() {
    return operation;
  }


  @JsonProperty(JSON_PROPERTY_OPERATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOperation(NetworkOperation operation) {
    this.operation = operation;
  }


  public NetworkAllOf changeLog(Changelog changeLog) {
    
    this.changeLog = changeLog;
    return this;
  }

   /**
   * Get changeLog
   * @return changeLog
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CHANGE_LOG)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Changelog getChangeLog() {
    return changeLog;
  }


  @JsonProperty(JSON_PROPERTY_CHANGE_LOG)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setChangeLog(Changelog changeLog) {
    this.changeLog = changeLog;
  }


   /**
   * Network sub-resources links
   * @return links
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LINKS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<Link> getLinks() {
    return links;
  }




  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    NetworkAllOf networkAllOf = (NetworkAllOf) o;
    return Objects.equals(this.href, networkAllOf.href) &&
        Objects.equals(this.uuid, networkAllOf.uuid) &&
        Objects.equals(this.state, networkAllOf.state) &&
        Objects.equals(this.connectionsCount, networkAllOf.connectionsCount) &&
        Objects.equals(this.account, networkAllOf.account) &&
        Objects.equals(this.change, networkAllOf.change) &&
        Objects.equals(this.operation, networkAllOf.operation) &&
        Objects.equals(this.changeLog, networkAllOf.changeLog) &&
        Objects.equals(this.links, networkAllOf.links);
  }

  @Override
  public int hashCode() {
    return Objects.hash(href, uuid, state, connectionsCount, account, change, operation, changeLog, links);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class NetworkAllOf {\n");
    sb.append("    href: ").append(toIndentedString(href)).append("\n");
    sb.append("    uuid: ").append(toIndentedString(uuid)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    connectionsCount: ").append(toIndentedString(connectionsCount)).append("\n");
    sb.append("    account: ").append(toIndentedString(account)).append("\n");
    sb.append("    change: ").append(toIndentedString(change)).append("\n");
    sb.append("    operation: ").append(toIndentedString(operation)).append("\n");
    sb.append("    changeLog: ").append(toIndentedString(changeLog)).append("\n");
    sb.append("    links: ").append(toIndentedString(links)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}


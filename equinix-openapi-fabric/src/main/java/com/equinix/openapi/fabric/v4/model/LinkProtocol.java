/*
 * Equinix Fabric API v4
 *
 * Contact: api-support@equinix.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.equinix.openapi.fabric.v4.model;

import com.fasterxml.jackson.annotation.*;

import java.util.Objects;

/**
 * Connection link protocol Configuration
 */
@JsonPropertyOrder({
  LinkProtocol.JSON_PROPERTY_TYPE,
  LinkProtocol.JSON_PROPERTY_IPV4,
  LinkProtocol.JSON_PROPERTY_IPV6,
  LinkProtocol.JSON_PROPERTY_TAG_PROTOCOL_ID,
  LinkProtocol.JSON_PROPERTY_VLAN_TAG,
  LinkProtocol.JSON_PROPERTY_VLAN_TAG_MIN,
  LinkProtocol.JSON_PROPERTY_VLAN_TAG_MAX,
  LinkProtocol.JSON_PROPERTY_INNER_TAG_PROTOCOL_ID,
  LinkProtocol.JSON_PROPERTY_OUTER_TAG_PROTOCOL_ID,
  LinkProtocol.JSON_PROPERTY_VLAN_C_TAG,
  LinkProtocol.JSON_PROPERTY_VLAN_S_TAG,
  LinkProtocol.JSON_PROPERTY_VLAN_C_TAG_MIN,
  LinkProtocol.JSON_PROPERTY_VLAN_C_TAG_MAX,
  LinkProtocol.JSON_PROPERTY_SUB_INTERFACE,
  LinkProtocol.JSON_PROPERTY_VNI,
  LinkProtocol.JSON_PROPERTY_VNID,
  LinkProtocol.JSON_PROPERTY_TYPE5VNI
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
@JsonIgnoreProperties(
  value = "type", // ignore manually set type, it will be automatically generated by Jackson during serialization
  allowSetters = true // allows the type to be set during deserialization
)
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "type", visible = true)
@JsonSubTypes({
  @JsonSubTypes.Type(value = LinkProtocolDot1q.class, name = "DOT1Q"),
  @JsonSubTypes.Type(value = LinkProtocolEvpnVxlan.class, name = "EVPN_VXLAN"),
  @JsonSubTypes.Type(value = LinkProtocolQinq.class, name = "QINQ"),
  @JsonSubTypes.Type(value = LinkProtocolUntagged.class, name = "UNTAGGED"),
  @JsonSubTypes.Type(value = LinkProtocolVxlan.class, name = "VXLAN"),
})

public class LinkProtocol {
  public static final String JSON_PROPERTY_TYPE = "type";
  protected LinkProtocolType type;

  public static final String JSON_PROPERTY_IPV4 = "ipv4";
  private LinkProtocolIpv4Ipv6Config ipv4;

  public static final String JSON_PROPERTY_IPV6 = "ipv6";
  private LinkProtocolIpv4Ipv6Config ipv6;

  public static final String JSON_PROPERTY_TAG_PROTOCOL_ID = "tagProtocolId";
  private String tagProtocolId;

  public static final String JSON_PROPERTY_VLAN_TAG = "vlanTag";
  private String vlanTag;

  public static final String JSON_PROPERTY_VLAN_TAG_MIN = "vlanTagMin";
  private Integer vlanTagMin;

  public static final String JSON_PROPERTY_VLAN_TAG_MAX = "vlanTagMax";
  private Integer vlanTagMax;

  public static final String JSON_PROPERTY_INNER_TAG_PROTOCOL_ID = "innerTagProtocolId";
  private Integer innerTagProtocolId;

  public static final String JSON_PROPERTY_OUTER_TAG_PROTOCOL_ID = "outerTagProtocolId";
  private Integer outerTagProtocolId;

  public static final String JSON_PROPERTY_VLAN_C_TAG = "vlanCTag";
  private Integer vlanCTag;

  public static final String JSON_PROPERTY_VLAN_S_TAG = "vlanSTag";
  private Integer vlanSTag;

  public static final String JSON_PROPERTY_VLAN_C_TAG_MIN = "vlanCTagMin";
  private Integer vlanCTagMin;

  public static final String JSON_PROPERTY_VLAN_C_TAG_MAX = "vlanCTagMax";
  private Integer vlanCTagMax;

  public static final String JSON_PROPERTY_SUB_INTERFACE = "subInterface";
  private Integer subInterface;

  public static final String JSON_PROPERTY_VNI = "vni";
  private Integer vni;

  public static final String JSON_PROPERTY_VNID = "vnid";
  private Integer vnid;

  public static final String JSON_PROPERTY_TYPE5VNI = "type5vni";
  private Integer type5vni;

  public LinkProtocol() {
  }

  public LinkProtocol type(LinkProtocolType type) {
    
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public LinkProtocolType getType() {
    return type;
  }


  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setType(LinkProtocolType type) {
    this.type = type;
  }


  public LinkProtocol ipv4(LinkProtocolIpv4Ipv6Config ipv4) {
    
    this.ipv4 = ipv4;
    return this;
  }

   /**
   * Get ipv4
   * @return ipv4
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_IPV4)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public LinkProtocolIpv4Ipv6Config getIpv4() {
    return ipv4;
  }


  @JsonProperty(JSON_PROPERTY_IPV4)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIpv4(LinkProtocolIpv4Ipv6Config ipv4) {
    this.ipv4 = ipv4;
  }


  public LinkProtocol ipv6(LinkProtocolIpv4Ipv6Config ipv6) {
    
    this.ipv6 = ipv6;
    return this;
  }

   /**
   * Get ipv6
   * @return ipv6
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_IPV6)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public LinkProtocolIpv4Ipv6Config getIpv6() {
    return ipv6;
  }


  @JsonProperty(JSON_PROPERTY_IPV6)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIpv6(LinkProtocolIpv4Ipv6Config ipv6) {
    this.ipv6 = ipv6;
  }


  public LinkProtocol tagProtocolId(String tagProtocolId) {
    
    this.tagProtocolId = tagProtocolId;
    return this;
  }

   /**
   * Tag protocol identifier
   * @return tagProtocolId
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TAG_PROTOCOL_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getTagProtocolId() {
    return tagProtocolId;
  }


  @JsonProperty(JSON_PROPERTY_TAG_PROTOCOL_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTagProtocolId(String tagProtocolId) {
    this.tagProtocolId = tagProtocolId;
  }


  public LinkProtocol vlanTag(String vlanTag) {
    
    this.vlanTag = vlanTag;
    return this;
  }

   /**
   * VLAN tag
   * @return vlanTag
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_VLAN_TAG)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getVlanTag() {
    return vlanTag;
  }


  @JsonProperty(JSON_PROPERTY_VLAN_TAG)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setVlanTag(String vlanTag) {
    this.vlanTag = vlanTag;
  }


  public LinkProtocol vlanTagMin(Integer vlanTagMin) {
    
    this.vlanTagMin = vlanTagMin;
    return this;
  }

   /**
   * VLAN tag Min value specified for DOT1Q connections
   * @return vlanTagMin
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_VLAN_TAG_MIN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getVlanTagMin() {
    return vlanTagMin;
  }


  @JsonProperty(JSON_PROPERTY_VLAN_TAG_MIN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setVlanTagMin(Integer vlanTagMin) {
    this.vlanTagMin = vlanTagMin;
  }


  public LinkProtocol vlanTagMax(Integer vlanTagMax) {
    
    this.vlanTagMax = vlanTagMax;
    return this;
  }

   /**
   * VLAN tag Max value specified for DOT1Q connections
   * @return vlanTagMax
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_VLAN_TAG_MAX)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getVlanTagMax() {
    return vlanTagMax;
  }


  @JsonProperty(JSON_PROPERTY_VLAN_TAG_MAX)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setVlanTagMax(Integer vlanTagMax) {
    this.vlanTagMax = vlanTagMax;
  }


  public LinkProtocol innerTagProtocolId(Integer innerTagProtocolId) {
    
    this.innerTagProtocolId = innerTagProtocolId;
    return this;
  }

   /**
   * Inner tag protocol identifier
   * @return innerTagProtocolId
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_INNER_TAG_PROTOCOL_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getInnerTagProtocolId() {
    return innerTagProtocolId;
  }


  @JsonProperty(JSON_PROPERTY_INNER_TAG_PROTOCOL_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setInnerTagProtocolId(Integer innerTagProtocolId) {
    this.innerTagProtocolId = innerTagProtocolId;
  }


  public LinkProtocol outerTagProtocolId(Integer outerTagProtocolId) {
    
    this.outerTagProtocolId = outerTagProtocolId;
    return this;
  }

   /**
   * Outer tag protocol identifier
   * @return outerTagProtocolId
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_OUTER_TAG_PROTOCOL_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getOuterTagProtocolId() {
    return outerTagProtocolId;
  }


  @JsonProperty(JSON_PROPERTY_OUTER_TAG_PROTOCOL_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setOuterTagProtocolId(Integer outerTagProtocolId) {
    this.outerTagProtocolId = outerTagProtocolId;
  }


  public LinkProtocol vlanCTag(Integer vlanCTag) {
    
    this.vlanCTag = vlanCTag;
    return this;
  }

   /**
   * Inner tag, i.e., C-VLAN tag
   * @return vlanCTag
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_VLAN_C_TAG)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getVlanCTag() {
    return vlanCTag;
  }


  @JsonProperty(JSON_PROPERTY_VLAN_C_TAG)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setVlanCTag(Integer vlanCTag) {
    this.vlanCTag = vlanCTag;
  }


  public LinkProtocol vlanSTag(Integer vlanSTag) {
    
    this.vlanSTag = vlanSTag;
    return this;
  }

   /**
   * Outer tag, i.e., S-VLAN tag
   * @return vlanSTag
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_VLAN_S_TAG)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getVlanSTag() {
    return vlanSTag;
  }


  @JsonProperty(JSON_PROPERTY_VLAN_S_TAG)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setVlanSTag(Integer vlanSTag) {
    this.vlanSTag = vlanSTag;
  }


  public LinkProtocol vlanCTagMin(Integer vlanCTagMin) {
    
    this.vlanCTagMin = vlanCTagMin;
    return this;
  }

   /**
   * Outer tag Min value specified for QINQ connections
   * @return vlanCTagMin
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_VLAN_C_TAG_MIN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getVlanCTagMin() {
    return vlanCTagMin;
  }


  @JsonProperty(JSON_PROPERTY_VLAN_C_TAG_MIN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setVlanCTagMin(Integer vlanCTagMin) {
    this.vlanCTagMin = vlanCTagMin;
  }


  public LinkProtocol vlanCTagMax(Integer vlanCTagMax) {
    
    this.vlanCTagMax = vlanCTagMax;
    return this;
  }

   /**
   * Outer tag Max value specified for QINQ connections
   * @return vlanCTagMax
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_VLAN_C_TAG_MAX)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getVlanCTagMax() {
    return vlanCTagMax;
  }


  @JsonProperty(JSON_PROPERTY_VLAN_C_TAG_MAX)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setVlanCTagMax(Integer vlanCTagMax) {
    this.vlanCTagMax = vlanCTagMax;
  }


  public LinkProtocol subInterface(Integer subInterface) {
    
    this.subInterface = subInterface;
    return this;
  }

   /**
   * Subinterface identifier
   * @return subInterface
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SUB_INTERFACE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getSubInterface() {
    return subInterface;
  }


  @JsonProperty(JSON_PROPERTY_SUB_INTERFACE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSubInterface(Integer subInterface) {
    this.subInterface = subInterface;
  }


  public LinkProtocol vni(Integer vni) {
    
    this.vni = vni;
    return this;
  }

   /**
   * Virtual Network Identifier
   * minimum: 4097
   * maximum: 16777215
   * @return vni
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_VNI)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getVni() {
    return vni;
  }


  @JsonProperty(JSON_PROPERTY_VNI)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setVni(Integer vni) {
    this.vni = vni;
  }


  public LinkProtocol vnid(Integer vnid) {
    
    this.vnid = vnid;
    return this;
  }

   /**
   * Virtual Network Identifier
   * minimum: 20001
   * maximum: 40000
   * @return vnid
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_VNID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getVnid() {
    return vnid;
  }


  @JsonProperty(JSON_PROPERTY_VNID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setVnid(Integer vnid) {
    this.vnid = vnid;
  }


  public LinkProtocol type5vni(Integer type5vni) {
    
    this.type5vni = type5vni;
    return this;
  }

   /**
   * Type 5 VNI identifier
   * @return type5vni
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_TYPE5VNI)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getType5vni() {
    return type5vni;
  }


  @JsonProperty(JSON_PROPERTY_TYPE5VNI)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setType5vni(Integer type5vni) {
    this.type5vni = type5vni;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LinkProtocol linkProtocol = (LinkProtocol) o;
    return Objects.equals(this.type, linkProtocol.type) &&
        Objects.equals(this.ipv4, linkProtocol.ipv4) &&
        Objects.equals(this.ipv6, linkProtocol.ipv6) &&
        Objects.equals(this.tagProtocolId, linkProtocol.tagProtocolId) &&
        Objects.equals(this.vlanTag, linkProtocol.vlanTag) &&
        Objects.equals(this.vlanTagMin, linkProtocol.vlanTagMin) &&
        Objects.equals(this.vlanTagMax, linkProtocol.vlanTagMax) &&
        Objects.equals(this.innerTagProtocolId, linkProtocol.innerTagProtocolId) &&
        Objects.equals(this.outerTagProtocolId, linkProtocol.outerTagProtocolId) &&
        Objects.equals(this.vlanCTag, linkProtocol.vlanCTag) &&
        Objects.equals(this.vlanSTag, linkProtocol.vlanSTag) &&
        Objects.equals(this.vlanCTagMin, linkProtocol.vlanCTagMin) &&
        Objects.equals(this.vlanCTagMax, linkProtocol.vlanCTagMax) &&
        Objects.equals(this.subInterface, linkProtocol.subInterface) &&
        Objects.equals(this.vni, linkProtocol.vni) &&
        Objects.equals(this.vnid, linkProtocol.vnid) &&
        Objects.equals(this.type5vni, linkProtocol.type5vni);
  }

  @Override
  public int hashCode() {
    return Objects.hash(type, ipv4, ipv6, tagProtocolId, vlanTag, vlanTagMin, vlanTagMax, innerTagProtocolId, outerTagProtocolId, vlanCTag, vlanSTag, vlanCTagMin, vlanCTagMax, subInterface, vni, vnid, type5vni);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class LinkProtocol {\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    ipv4: ").append(toIndentedString(ipv4)).append("\n");
    sb.append("    ipv6: ").append(toIndentedString(ipv6)).append("\n");
    sb.append("    tagProtocolId: ").append(toIndentedString(tagProtocolId)).append("\n");
    sb.append("    vlanTag: ").append(toIndentedString(vlanTag)).append("\n");
    sb.append("    vlanTagMin: ").append(toIndentedString(vlanTagMin)).append("\n");
    sb.append("    vlanTagMax: ").append(toIndentedString(vlanTagMax)).append("\n");
    sb.append("    innerTagProtocolId: ").append(toIndentedString(innerTagProtocolId)).append("\n");
    sb.append("    outerTagProtocolId: ").append(toIndentedString(outerTagProtocolId)).append("\n");
    sb.append("    vlanCTag: ").append(toIndentedString(vlanCTag)).append("\n");
    sb.append("    vlanSTag: ").append(toIndentedString(vlanSTag)).append("\n");
    sb.append("    vlanCTagMin: ").append(toIndentedString(vlanCTagMin)).append("\n");
    sb.append("    vlanCTagMax: ").append(toIndentedString(vlanCTagMax)).append("\n");
    sb.append("    subInterface: ").append(toIndentedString(subInterface)).append("\n");
    sb.append("    vni: ").append(toIndentedString(vni)).append("\n");
    sb.append("    vnid: ").append(toIndentedString(vnid)).append("\n");
    sb.append("    type5vni: ").append(toIndentedString(type5vni)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}


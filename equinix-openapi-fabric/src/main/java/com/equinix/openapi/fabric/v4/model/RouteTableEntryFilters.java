/*
 * Equinix Fabric API v4
 *
 * Contact: api-support@equinix.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.equinix.openapi.fabric.v4.model;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/**
 * RouteTableEntryFilters
 */
@JsonPropertyOrder({
  RouteTableEntryFilters.JSON_PROPERTY_AND
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class RouteTableEntryFilters {
  public static final String JSON_PROPERTY_AND = "and";
  private List<RouteTableEntryFilter> and = new ArrayList<>();

  public RouteTableEntryFilters() {
  }

  public RouteTableEntryFilters and(List<RouteTableEntryFilter> and) {
    
    this.and = and;
    return this;
  }

  public RouteTableEntryFilters addAndItem(RouteTableEntryFilter andItem) {
    if (this.and == null) {
      this.and = new ArrayList<>();
    }
    this.and.add(andItem);
    return this;
  }

   /**
   * Get and
   * @return and
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_AND)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<RouteTableEntryFilter> getAnd() {
    return and;
  }


  @JsonProperty(JSON_PROPERTY_AND)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAnd(List<RouteTableEntryFilter> and) {
    this.and = and;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RouteTableEntryFilters routeTableEntryFilters = (RouteTableEntryFilters) o;
    return Objects.equals(this.and, routeTableEntryFilters.and);
  }

  @Override
  public int hashCode() {
    return Objects.hash(and);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RouteTableEntryFilters {\n");
    sb.append("    and: ").append(toIndentedString(and)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}


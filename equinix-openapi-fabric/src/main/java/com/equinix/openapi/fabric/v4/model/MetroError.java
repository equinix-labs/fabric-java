/*
 * Equinix Fabric API v4
 *
 * Contact: api-support@equinix.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.equinix.openapi.fabric.v4.model;

import com.fasterxml.jackson.annotation.*;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/**
 * Error with details
 */
@JsonPropertyOrder({
  MetroError.JSON_PROPERTY_ERROR_CODE,
  MetroError.JSON_PROPERTY_ERROR_MESSAGE,
  MetroError.JSON_PROPERTY_CORRELATION_ID,
  MetroError.JSON_PROPERTY_DETAILS,
  MetroError.JSON_PROPERTY_HELP,
  MetroError.JSON_PROPERTY_ADDITIONAL_INFO
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
@JsonIgnoreProperties(
  value = "errorCode", // ignore manually set errorCode, it will be automatically generated by Jackson during serialization
  allowSetters = true // allows the errorCode to be set during deserialization
)
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "errorCode", visible = true)

public class MetroError {
  /**
   * Gets or Sets errorCode
   */
  public enum ErrorCodeEnum {
    _3036001("EQ-3036001"),
    
    _3036013("EQ-3036013"),
    
    _3036030("EQ-3036030"),
    
    _3036100("EQ-3036100");

    private String value;

    ErrorCodeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static ErrorCodeEnum fromValue(String value) {
      for (ErrorCodeEnum b : ErrorCodeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_ERROR_CODE = "errorCode";
  protected ErrorCodeEnum errorCode;

  /**
   * Gets or Sets errorMessage
   */
  public enum ErrorMessageEnum {
    UNAUTHORIZED("Unauthorized"),
    
    INVALID_QUERY_PARAMETER("Invalid Query Parameter"),
    
    INVALID_PATH_PARAMETER("Invalid Path Parameter"),
    
    INVALID_QUERY_OR_PATH_PARAMETER("Invalid Query or Path Parameter"),
    
    INTERNAL_SERVER_ERROR("Internal Server Error"),
    
    METRO_NOT_FOUND("Metro Not Found");

    private String value;

    ErrorMessageEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static ErrorMessageEnum fromValue(String value) {
      for (ErrorMessageEnum b : ErrorMessageEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_ERROR_MESSAGE = "errorMessage";
  private ErrorMessageEnum errorMessage;

  public static final String JSON_PROPERTY_CORRELATION_ID = "correlationId";
  private String correlationId;

  public static final String JSON_PROPERTY_DETAILS = "details";
  private String details;

  public static final String JSON_PROPERTY_HELP = "help";
  private String help;

  public static final String JSON_PROPERTY_ADDITIONAL_INFO = "additionalInfo";
  private List<PriceErrorAdditionalInfo> additionalInfo = new ArrayList<>();

  public MetroError() {
  }

  public MetroError errorCode(ErrorCodeEnum errorCode) {
    
    this.errorCode = errorCode;
    return this;
  }

   /**
   * Get errorCode
   * @return errorCode
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ERROR_CODE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public ErrorCodeEnum getErrorCode() {
    return errorCode;
  }


  @JsonProperty(JSON_PROPERTY_ERROR_CODE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setErrorCode(ErrorCodeEnum errorCode) {
    this.errorCode = errorCode;
  }


  public MetroError errorMessage(ErrorMessageEnum errorMessage) {
    
    this.errorMessage = errorMessage;
    return this;
  }

   /**
   * Get errorMessage
   * @return errorMessage
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ERROR_MESSAGE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public ErrorMessageEnum getErrorMessage() {
    return errorMessage;
  }


  @JsonProperty(JSON_PROPERTY_ERROR_MESSAGE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setErrorMessage(ErrorMessageEnum errorMessage) {
    this.errorMessage = errorMessage;
  }


  public MetroError correlationId(String correlationId) {
    
    this.correlationId = correlationId;
    return this;
  }

   /**
   * Get correlationId
   * @return correlationId
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CORRELATION_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCorrelationId() {
    return correlationId;
  }


  @JsonProperty(JSON_PROPERTY_CORRELATION_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCorrelationId(String correlationId) {
    this.correlationId = correlationId;
  }


  public MetroError details(String details) {
    
    this.details = details;
    return this;
  }

   /**
   * Get details
   * @return details
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DETAILS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDetails() {
    return details;
  }


  @JsonProperty(JSON_PROPERTY_DETAILS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDetails(String details) {
    this.details = details;
  }


  public MetroError help(String help) {
    
    this.help = help;
    return this;
  }

   /**
   * Get help
   * @return help
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_HELP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getHelp() {
    return help;
  }


  @JsonProperty(JSON_PROPERTY_HELP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setHelp(String help) {
    this.help = help;
  }


  public MetroError additionalInfo(List<PriceErrorAdditionalInfo> additionalInfo) {
    
    this.additionalInfo = additionalInfo;
    return this;
  }

  public MetroError addAdditionalInfoItem(PriceErrorAdditionalInfo additionalInfoItem) {
    if (this.additionalInfo == null) {
      this.additionalInfo = new ArrayList<>();
    }
    this.additionalInfo.add(additionalInfoItem);
    return this;
  }

   /**
   * Get additionalInfo
   * @return additionalInfo
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ADDITIONAL_INFO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<PriceErrorAdditionalInfo> getAdditionalInfo() {
    return additionalInfo;
  }


  @JsonProperty(JSON_PROPERTY_ADDITIONAL_INFO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAdditionalInfo(List<PriceErrorAdditionalInfo> additionalInfo) {
    this.additionalInfo = additionalInfo;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MetroError metroError = (MetroError) o;
    return Objects.equals(this.errorCode, metroError.errorCode) &&
        Objects.equals(this.errorMessage, metroError.errorMessage) &&
        Objects.equals(this.correlationId, metroError.correlationId) &&
        Objects.equals(this.details, metroError.details) &&
        Objects.equals(this.help, metroError.help) &&
        Objects.equals(this.additionalInfo, metroError.additionalInfo);
  }

  @Override
  public int hashCode() {
    return Objects.hash(errorCode, errorMessage, correlationId, details, help, additionalInfo);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MetroError {\n");
    sb.append("    errorCode: ").append(toIndentedString(errorCode)).append("\n");
    sb.append("    errorMessage: ").append(toIndentedString(errorMessage)).append("\n");
    sb.append("    correlationId: ").append(toIndentedString(correlationId)).append("\n");
    sb.append("    details: ").append(toIndentedString(details)).append("\n");
    sb.append("    help: ").append(toIndentedString(help)).append("\n");
    sb.append("    additionalInfo: ").append(toIndentedString(additionalInfo)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}


/*
 * Equinix Fabric API v4
 *
 * Contact: api-support@equinix.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.equinix.openapi.fabric.v4.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * PtpAdvanceConfiguration
 */
@JsonPropertyOrder({
  PtpAdvanceConfiguration.JSON_PROPERTY_TIME_SCALE,
  PtpAdvanceConfiguration.JSON_PROPERTY_DOMAIN,
  PtpAdvanceConfiguration.JSON_PROPERTY_PRIORITY1,
  PtpAdvanceConfiguration.JSON_PROPERTY_PRIORITY2,
  PtpAdvanceConfiguration.JSON_PROPERTY_LOG_ANNOUNCE_INTERVAL,
  PtpAdvanceConfiguration.JSON_PROPERTY_LOG_SYNC_INTERVAL,
  PtpAdvanceConfiguration.JSON_PROPERTY_LOG_DELAY_REQ_INTERVAL,
  PtpAdvanceConfiguration.JSON_PROPERTY_TRANSPORT_MODE,
  PtpAdvanceConfiguration.JSON_PROPERTY_GRANT_TIME
})
@JsonTypeName("ptpAdvanceConfiguration")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class PtpAdvanceConfiguration {
  /**
   * Time Scale value, ARB denotes Arbitrary and PTP denotes Precision Time Protocol.
   */
  public enum TimeScaleEnum {
    ARB("ARB"),
    
    PTP("PTP");

    private String value;

    TimeScaleEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static TimeScaleEnum fromValue(String value) {
      for (TimeScaleEnum b : TimeScaleEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_TIME_SCALE = "timeScale";
  private TimeScaleEnum timeScale;

  public static final String JSON_PROPERTY_DOMAIN = "domain";
  private Integer domain;

  public static final String JSON_PROPERTY_PRIORITY1 = "priority1";
  private Integer priority1;

  public static final String JSON_PROPERTY_PRIORITY2 = "priority2";
  private Integer priority2;

  public static final String JSON_PROPERTY_LOG_ANNOUNCE_INTERVAL = "logAnnounceInterval";
  private Integer logAnnounceInterval;

  public static final String JSON_PROPERTY_LOG_SYNC_INTERVAL = "logSyncInterval";
  private Integer logSyncInterval;

  public static final String JSON_PROPERTY_LOG_DELAY_REQ_INTERVAL = "logDelayReqInterval";
  private Integer logDelayReqInterval;

  /**
   * Gets or Sets transportMode
   */
  public enum TransportModeEnum {
    MULTICAST("Multicast"),
    
    UNICAST("Unicast"),
    
    HYBRID("Hybrid");

    private String value;

    TransportModeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static TransportModeEnum fromValue(String value) {
      for (TransportModeEnum b : TransportModeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_TRANSPORT_MODE = "transportMode";
  private TransportModeEnum transportMode;

  public static final String JSON_PROPERTY_GRANT_TIME = "grantTime";
  private Integer grantTime;

  public PtpAdvanceConfiguration() {
  }

  public PtpAdvanceConfiguration timeScale(TimeScaleEnum timeScale) {
    
    this.timeScale = timeScale;
    return this;
  }

   /**
   * Time Scale value, ARB denotes Arbitrary and PTP denotes Precision Time Protocol.
   * @return timeScale
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TIME_SCALE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public TimeScaleEnum getTimeScale() {
    return timeScale;
  }


  @JsonProperty(JSON_PROPERTY_TIME_SCALE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTimeScale(TimeScaleEnum timeScale) {
    this.timeScale = timeScale;
  }


  public PtpAdvanceConfiguration domain(Integer domain) {
    
    this.domain = domain;
    return this;
  }

   /**
   * Get domain
   * minimum: 0
   * maximum: 127
   * @return domain
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DOMAIN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getDomain() {
    return domain;
  }


  @JsonProperty(JSON_PROPERTY_DOMAIN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDomain(Integer domain) {
    this.domain = domain;
  }


  public PtpAdvanceConfiguration priority1(Integer priority1) {
    
    this.priority1 = priority1;
    return this;
  }

   /**
   * Get priority1
   * minimum: 0
   * maximum: 248
   * @return priority1
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PRIORITY1)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getPriority1() {
    return priority1;
  }


  @JsonProperty(JSON_PROPERTY_PRIORITY1)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPriority1(Integer priority1) {
    this.priority1 = priority1;
  }


  public PtpAdvanceConfiguration priority2(Integer priority2) {
    
    this.priority2 = priority2;
    return this;
  }

   /**
   * Get priority2
   * minimum: 0
   * maximum: 248
   * @return priority2
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PRIORITY2)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getPriority2() {
    return priority2;
  }


  @JsonProperty(JSON_PROPERTY_PRIORITY2)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPriority2(Integer priority2) {
    this.priority2 = priority2;
  }


  public PtpAdvanceConfiguration logAnnounceInterval(Integer logAnnounceInterval) {
    
    this.logAnnounceInterval = logAnnounceInterval;
    return this;
  }

   /**
   * The mean time interval between Announce messages. A shorter interval makes ptp4l react faster to the changes in the master-slave hierarchy. The interval should be the same in the whole domain. It&#39;s specified as a power of two in seconds. The default is 1 (2 seconds).
   * @return logAnnounceInterval
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LOG_ANNOUNCE_INTERVAL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getLogAnnounceInterval() {
    return logAnnounceInterval;
  }


  @JsonProperty(JSON_PROPERTY_LOG_ANNOUNCE_INTERVAL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLogAnnounceInterval(Integer logAnnounceInterval) {
    this.logAnnounceInterval = logAnnounceInterval;
  }


  public PtpAdvanceConfiguration logSyncInterval(Integer logSyncInterval) {
    
    this.logSyncInterval = logSyncInterval;
    return this;
  }

   /**
   * The mean time interval between Sync messages. A shorter interval may improve accuracy of the local clock. It&#39;s specified as a power of two in seconds. The default is 0 (1 second).
   * @return logSyncInterval
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LOG_SYNC_INTERVAL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getLogSyncInterval() {
    return logSyncInterval;
  }


  @JsonProperty(JSON_PROPERTY_LOG_SYNC_INTERVAL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLogSyncInterval(Integer logSyncInterval) {
    this.logSyncInterval = logSyncInterval;
  }


  public PtpAdvanceConfiguration logDelayReqInterval(Integer logDelayReqInterval) {
    
    this.logDelayReqInterval = logDelayReqInterval;
    return this;
  }

   /**
   * Get logDelayReqInterval
   * @return logDelayReqInterval
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LOG_DELAY_REQ_INTERVAL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getLogDelayReqInterval() {
    return logDelayReqInterval;
  }


  @JsonProperty(JSON_PROPERTY_LOG_DELAY_REQ_INTERVAL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLogDelayReqInterval(Integer logDelayReqInterval) {
    this.logDelayReqInterval = logDelayReqInterval;
  }


  public PtpAdvanceConfiguration transportMode(TransportModeEnum transportMode) {
    
    this.transportMode = transportMode;
    return this;
  }

   /**
   * Get transportMode
   * @return transportMode
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TRANSPORT_MODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public TransportModeEnum getTransportMode() {
    return transportMode;
  }


  @JsonProperty(JSON_PROPERTY_TRANSPORT_MODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTransportMode(TransportModeEnum transportMode) {
    this.transportMode = transportMode;
  }


  public PtpAdvanceConfiguration grantTime(Integer grantTime) {
    
    this.grantTime = grantTime;
    return this;
  }

   /**
   * Unicast Grant Time in seconds. For Multicast and Hybrid transport modes, grant time defaults to 300 seconds. For Unicast mode, grant time can be between 30 to 7200.
   * minimum: 30
   * maximum: 7200
   * @return grantTime
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_GRANT_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getGrantTime() {
    return grantTime;
  }


  @JsonProperty(JSON_PROPERTY_GRANT_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setGrantTime(Integer grantTime) {
    this.grantTime = grantTime;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PtpAdvanceConfiguration ptpAdvanceConfiguration = (PtpAdvanceConfiguration) o;
    return Objects.equals(this.timeScale, ptpAdvanceConfiguration.timeScale) &&
        Objects.equals(this.domain, ptpAdvanceConfiguration.domain) &&
        Objects.equals(this.priority1, ptpAdvanceConfiguration.priority1) &&
        Objects.equals(this.priority2, ptpAdvanceConfiguration.priority2) &&
        Objects.equals(this.logAnnounceInterval, ptpAdvanceConfiguration.logAnnounceInterval) &&
        Objects.equals(this.logSyncInterval, ptpAdvanceConfiguration.logSyncInterval) &&
        Objects.equals(this.logDelayReqInterval, ptpAdvanceConfiguration.logDelayReqInterval) &&
        Objects.equals(this.transportMode, ptpAdvanceConfiguration.transportMode) &&
        Objects.equals(this.grantTime, ptpAdvanceConfiguration.grantTime);
  }

  @Override
  public int hashCode() {
    return Objects.hash(timeScale, domain, priority1, priority2, logAnnounceInterval, logSyncInterval, logDelayReqInterval, transportMode, grantTime);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PtpAdvanceConfiguration {\n");
    sb.append("    timeScale: ").append(toIndentedString(timeScale)).append("\n");
    sb.append("    domain: ").append(toIndentedString(domain)).append("\n");
    sb.append("    priority1: ").append(toIndentedString(priority1)).append("\n");
    sb.append("    priority2: ").append(toIndentedString(priority2)).append("\n");
    sb.append("    logAnnounceInterval: ").append(toIndentedString(logAnnounceInterval)).append("\n");
    sb.append("    logSyncInterval: ").append(toIndentedString(logSyncInterval)).append("\n");
    sb.append("    logDelayReqInterval: ").append(toIndentedString(logDelayReqInterval)).append("\n");
    sb.append("    transportMode: ").append(toIndentedString(transportMode)).append("\n");
    sb.append("    grantTime: ").append(toIndentedString(grantTime)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}


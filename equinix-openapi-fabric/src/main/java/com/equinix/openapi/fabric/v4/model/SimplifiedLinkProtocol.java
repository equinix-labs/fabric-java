/*
 * Equinix Fabric API v4
 *
 * Contact: api-support@equinix.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.equinix.openapi.fabric.v4.model;

import java.util.Objects;
import java.util.Arrays;
import com.equinix.openapi.fabric.v4.model.LinkProtocolType;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Connection link protocol Configuration
 */
@JsonPropertyOrder({
  SimplifiedLinkProtocol.JSON_PROPERTY_TYPE,
  SimplifiedLinkProtocol.JSON_PROPERTY_VLAN_TAG,
  SimplifiedLinkProtocol.JSON_PROPERTY_VLAN_S_TAG,
  SimplifiedLinkProtocol.JSON_PROPERTY_VLAN_C_TAG
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class SimplifiedLinkProtocol {
  public static final String JSON_PROPERTY_TYPE = "type";
  private LinkProtocolType type;

  public static final String JSON_PROPERTY_VLAN_TAG = "vlanTag";
  private Integer vlanTag;

  public static final String JSON_PROPERTY_VLAN_S_TAG = "vlanSTag";
  private Integer vlanSTag;

  public static final String JSON_PROPERTY_VLAN_C_TAG = "vlanCTag";
  private Integer vlanCTag;

  public SimplifiedLinkProtocol() {
  }

  public SimplifiedLinkProtocol type(LinkProtocolType type) {
    
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public LinkProtocolType getType() {
    return type;
  }


  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setType(LinkProtocolType type) {
    this.type = type;
  }


  public SimplifiedLinkProtocol vlanTag(Integer vlanTag) {
    
    this.vlanTag = vlanTag;
    return this;
  }

   /**
   * vlanTag value specified for DOT1Q connections
   * minimum: 2
   * maximum: 4092
   * @return vlanTag
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_VLAN_TAG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getVlanTag() {
    return vlanTag;
  }


  @JsonProperty(JSON_PROPERTY_VLAN_TAG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setVlanTag(Integer vlanTag) {
    this.vlanTag = vlanTag;
  }


  public SimplifiedLinkProtocol vlanSTag(Integer vlanSTag) {
    
    this.vlanSTag = vlanSTag;
    return this;
  }

   /**
   * vlanSTag value specified for QINQ connections
   * minimum: 2
   * maximum: 4092
   * @return vlanSTag
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_VLAN_S_TAG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getVlanSTag() {
    return vlanSTag;
  }


  @JsonProperty(JSON_PROPERTY_VLAN_S_TAG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setVlanSTag(Integer vlanSTag) {
    this.vlanSTag = vlanSTag;
  }


  public SimplifiedLinkProtocol vlanCTag(Integer vlanCTag) {
    
    this.vlanCTag = vlanCTag;
    return this;
  }

   /**
   * vlanCTag value specified for QINQ connections
   * minimum: 2
   * maximum: 4092
   * @return vlanCTag
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_VLAN_C_TAG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getVlanCTag() {
    return vlanCTag;
  }


  @JsonProperty(JSON_PROPERTY_VLAN_C_TAG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setVlanCTag(Integer vlanCTag) {
    this.vlanCTag = vlanCTag;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SimplifiedLinkProtocol simplifiedLinkProtocol = (SimplifiedLinkProtocol) o;
    return Objects.equals(this.type, simplifiedLinkProtocol.type) &&
        Objects.equals(this.vlanTag, simplifiedLinkProtocol.vlanTag) &&
        Objects.equals(this.vlanSTag, simplifiedLinkProtocol.vlanSTag) &&
        Objects.equals(this.vlanCTag, simplifiedLinkProtocol.vlanCTag);
  }

  @Override
  public int hashCode() {
    return Objects.hash(type, vlanTag, vlanSTag, vlanCTag);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SimplifiedLinkProtocol {\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    vlanTag: ").append(toIndentedString(vlanTag)).append("\n");
    sb.append("    vlanSTag: ").append(toIndentedString(vlanSTag)).append("\n");
    sb.append("    vlanCTag: ").append(toIndentedString(vlanCTag)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}


/*
 * Equinix Fabric API v4
 *
 * Contact: api-support@equinix.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.equinix.openapi.fabric.v4.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

import java.io.IOException;

/**
 * Product type
 */
@JsonAdapter(ProductType.Adapter.class)
public enum ProductType {
  
  VIRTUAL_CONNECTION_PRODUCT("VIRTUAL_CONNECTION_PRODUCT"),
  
  IP_BLOCK_PRODUCT("IP_BLOCK_PRODUCT"),
  
  VIRTUAL_PORT_PRODUCT("VIRTUAL_PORT_PRODUCT"),
  
  CLOUD_ROUTER_PRODUCT("CLOUD_ROUTER_PRODUCT");

  private String value;

  ProductType(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static ProductType fromValue(String value) {
    for (ProductType b : ProductType.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  public static class Adapter extends TypeAdapter<ProductType> {
    @Override
    public void write(final JsonWriter jsonWriter, final ProductType enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public ProductType read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return ProductType.fromValue(value);
    }
  }
}


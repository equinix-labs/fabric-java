/*
 * Equinix Fabric API v4
 *
 * Contact: api-support@equinix.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.equinix.openapi.fabric.v4.model;

import java.util.Objects;
import java.util.Arrays;
import com.equinix.openapi.fabric.v4.model.Changelog;
import com.equinix.openapi.fabric.v4.model.Project;
import com.equinix.openapi.fabric.v4.model.ServiceTokenConnection;
import com.equinix.openapi.fabric.v4.model.ServiceTokenState;
import com.equinix.openapi.fabric.v4.model.ServiceTokenType;
import com.equinix.openapi.fabric.v4.model.SimplifiedAccount;
import com.equinix.openapi.fabric.v4.model.SimplifiedNotification;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.net.URI;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.List;
import java.util.UUID;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Create Service Tokens (v4) generates Equinix Fabric service tokens. These tokens authorize users to access protected resources and services. The tokens remove sensitive content from the environment, rather than just masking it, making the protected data impossible to unencrypt or decrypt. Resource owners can distribute the tokens to trusted partners and vendors, allowing selected third parties to work directly with Equinix network assets.
 */
@JsonPropertyOrder({
  ServiceToken.JSON_PROPERTY_TYPE,
  ServiceToken.JSON_PROPERTY_HREF,
  ServiceToken.JSON_PROPERTY_UUID,
  ServiceToken.JSON_PROPERTY_NAME,
  ServiceToken.JSON_PROPERTY_DESCRIPTION,
  ServiceToken.JSON_PROPERTY_EXPIRATION_DATE_TIME,
  ServiceToken.JSON_PROPERTY_CONNECTION,
  ServiceToken.JSON_PROPERTY_STATE,
  ServiceToken.JSON_PROPERTY_NOTIFICATIONS,
  ServiceToken.JSON_PROPERTY_ACCOUNT,
  ServiceToken.JSON_PROPERTY_CHANGELOG,
  ServiceToken.JSON_PROPERTY_PROJECT
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class ServiceToken {
  public static final String JSON_PROPERTY_TYPE = "type";
  private ServiceTokenType type;

  public static final String JSON_PROPERTY_HREF = "href";
  private URI href;

  public static final String JSON_PROPERTY_UUID = "uuid";
  private UUID uuid;

  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_DESCRIPTION = "description";
  private String description;

  public static final String JSON_PROPERTY_EXPIRATION_DATE_TIME = "expirationDateTime";
  private OffsetDateTime expirationDateTime;

  public static final String JSON_PROPERTY_CONNECTION = "connection";
  private ServiceTokenConnection connection;

  public static final String JSON_PROPERTY_STATE = "state";
  private ServiceTokenState state;

  public static final String JSON_PROPERTY_NOTIFICATIONS = "notifications";
  private List<SimplifiedNotification> notifications = new ArrayList<>();

  public static final String JSON_PROPERTY_ACCOUNT = "account";
  private SimplifiedAccount account;

  public static final String JSON_PROPERTY_CHANGELOG = "changelog";
  private Changelog changelog;

  public static final String JSON_PROPERTY_PROJECT = "project";
  private Project project;

  public ServiceToken() {
  }

  @JsonCreator
  public ServiceToken(
    @JsonProperty(JSON_PROPERTY_HREF) URI href
  ) {
    this();
    this.href = href;
  }

  public ServiceToken type(ServiceTokenType type) {
    
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ServiceTokenType getType() {
    return type;
  }


  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setType(ServiceTokenType type) {
    this.type = type;
  }


   /**
   * An absolute URL that is the subject of the link&#39;s context.
   * @return href
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_HREF)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public URI getHref() {
    return href;
  }




  public ServiceToken uuid(UUID uuid) {
    
    this.uuid = uuid;
    return this;
  }

   /**
   * Equinix-assigned service token identifier
   * @return uuid
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_UUID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public UUID getUuid() {
    return uuid;
  }


  @JsonProperty(JSON_PROPERTY_UUID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setUuid(UUID uuid) {
    this.uuid = uuid;
  }


  public ServiceToken name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Customer-provided service token name
   * @return name
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setName(String name) {
    this.name = name;
  }


  public ServiceToken description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * Customer-provided service token description
   * @return description
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDescription() {
    return description;
  }


  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDescription(String description) {
    this.description = description;
  }


  public ServiceToken expirationDateTime(OffsetDateTime expirationDateTime) {
    
    this.expirationDateTime = expirationDateTime;
    return this;
  }

   /**
   * Expiration date and time of the service token.
   * @return expirationDateTime
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EXPIRATION_DATE_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getExpirationDateTime() {
    return expirationDateTime;
  }


  @JsonProperty(JSON_PROPERTY_EXPIRATION_DATE_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExpirationDateTime(OffsetDateTime expirationDateTime) {
    this.expirationDateTime = expirationDateTime;
  }


  public ServiceToken connection(ServiceTokenConnection connection) {
    
    this.connection = connection;
    return this;
  }

   /**
   * Get connection
   * @return connection
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CONNECTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ServiceTokenConnection getConnection() {
    return connection;
  }


  @JsonProperty(JSON_PROPERTY_CONNECTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setConnection(ServiceTokenConnection connection) {
    this.connection = connection;
  }


  public ServiceToken state(ServiceTokenState state) {
    
    this.state = state;
    return this;
  }

   /**
   * Get state
   * @return state
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_STATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ServiceTokenState getState() {
    return state;
  }


  @JsonProperty(JSON_PROPERTY_STATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setState(ServiceTokenState state) {
    this.state = state;
  }


  public ServiceToken notifications(List<SimplifiedNotification> notifications) {
    
    this.notifications = notifications;
    return this;
  }

  public ServiceToken addNotificationsItem(SimplifiedNotification notificationsItem) {
    if (this.notifications == null) {
      this.notifications = new ArrayList<>();
    }
    this.notifications.add(notificationsItem);
    return this;
  }

   /**
   * Service token related notifications
   * @return notifications
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NOTIFICATIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<SimplifiedNotification> getNotifications() {
    return notifications;
  }


  @JsonProperty(JSON_PROPERTY_NOTIFICATIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNotifications(List<SimplifiedNotification> notifications) {
    this.notifications = notifications;
  }


  public ServiceToken account(SimplifiedAccount account) {
    
    this.account = account;
    return this;
  }

   /**
   * Get account
   * @return account
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ACCOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public SimplifiedAccount getAccount() {
    return account;
  }


  @JsonProperty(JSON_PROPERTY_ACCOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAccount(SimplifiedAccount account) {
    this.account = account;
  }


  public ServiceToken changelog(Changelog changelog) {
    
    this.changelog = changelog;
    return this;
  }

   /**
   * Get changelog
   * @return changelog
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CHANGELOG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Changelog getChangelog() {
    return changelog;
  }


  @JsonProperty(JSON_PROPERTY_CHANGELOG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setChangelog(Changelog changelog) {
    this.changelog = changelog;
  }


  public ServiceToken project(Project project) {
    
    this.project = project;
    return this;
  }

   /**
   * Get project
   * @return project
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PROJECT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Project getProject() {
    return project;
  }


  @JsonProperty(JSON_PROPERTY_PROJECT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setProject(Project project) {
    this.project = project;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ServiceToken serviceToken = (ServiceToken) o;
    return Objects.equals(this.type, serviceToken.type) &&
        Objects.equals(this.href, serviceToken.href) &&
        Objects.equals(this.uuid, serviceToken.uuid) &&
        Objects.equals(this.name, serviceToken.name) &&
        Objects.equals(this.description, serviceToken.description) &&
        Objects.equals(this.expirationDateTime, serviceToken.expirationDateTime) &&
        Objects.equals(this.connection, serviceToken.connection) &&
        Objects.equals(this.state, serviceToken.state) &&
        Objects.equals(this.notifications, serviceToken.notifications) &&
        Objects.equals(this.account, serviceToken.account) &&
        Objects.equals(this.changelog, serviceToken.changelog) &&
        Objects.equals(this.project, serviceToken.project);
  }

  @Override
  public int hashCode() {
    return Objects.hash(type, href, uuid, name, description, expirationDateTime, connection, state, notifications, account, changelog, project);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ServiceToken {\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    href: ").append(toIndentedString(href)).append("\n");
    sb.append("    uuid: ").append(toIndentedString(uuid)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    expirationDateTime: ").append(toIndentedString(expirationDateTime)).append("\n");
    sb.append("    connection: ").append(toIndentedString(connection)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    notifications: ").append(toIndentedString(notifications)).append("\n");
    sb.append("    account: ").append(toIndentedString(account)).append("\n");
    sb.append("    changelog: ").append(toIndentedString(changelog)).append("\n");
    sb.append("    project: ").append(toIndentedString(project)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}


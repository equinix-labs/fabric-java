/*
 * Equinix Fabric API v4
 * Equinix Fabric is an advanced software-defined interconnection solution that enables you to directly, securely and dynamically connect to distributed infrastructure and digital ecosystems on platform Equinix via a single port, Customers can use Fabric to connect to: </br> 1. Cloud Service Providers - Clouds, network and other service providers.  </br> 2. Enterprises - Other Equinix customers, vendors and partners.  </br> 3. Myself - Another customer instance deployed at Equinix. </br>
 *
 * The version of the OpenAPI document: 4.10
 * Contact: api-support@equinix.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.equinix.openapi.fabric.v4.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;


/**
 * Model tests for ServiceProfileMetadata
 */
public class ServiceProfileMetadataTest {
    private final ServiceProfileMetadata model = new ServiceProfileMetadata();

    /**
     * Model tests for ServiceProfileMetadata
     */
    @Test
    public void testServiceProfileMetadata() {
        // TODO: test ServiceProfileMetadata
    }

    /**
     * Test the property 'props'
     */
    @Test
    public void propsTest() {
        // TODO: test props
    }

    /**
     * Test the property 'regEx'
     */
    @Test
    public void regExTest() {
        // TODO: test regEx
    }

    /**
     * Test the property 'regExMsg'
     */
    @Test
    public void regExMsgTest() {
        // TODO: test regExMsg
    }

    /**
     * Test the property 'vlanRangeMaxValue'
     */
    @Test
    public void vlanRangeMaxValueTest() {
        // TODO: test vlanRangeMaxValue
    }

    /**
     * Test the property 'vlanRangeMinValue'
     */
    @Test
    public void vlanRangeMinValueTest() {
        // TODO: test vlanRangeMinValue
    }

    /**
     * Test the property 'maxQinq'
     */
    @Test
    public void maxQinqTest() {
        // TODO: test maxQinq
    }

    /**
     * Test the property 'maxDot1q'
     */
    @Test
    public void maxDot1qTest() {
        // TODO: test maxDot1q
    }

    /**
     * Test the property 'variableBilling'
     */
    @Test
    public void variableBillingTest() {
        // TODO: test variableBilling
    }

    /**
     * Test the property 'globalOrganization'
     */
    @Test
    public void globalOrganizationTest() {
        // TODO: test globalOrganization
    }

    /**
     * Test the property 'limitAuthKeyConn'
     */
    @Test
    public void limitAuthKeyConnTest() {
        // TODO: test limitAuthKeyConn
    }

    /**
     * Test the property 'allowSecondaryLocation'
     */
    @Test
    public void allowSecondaryLocationTest() {
        // TODO: test allowSecondaryLocation
    }

    /**
     * Test the property 'redundantProfileId'
     */
    @Test
    public void redundantProfileIdTest() {
        // TODO: test redundantProfileId
    }

    /**
     * Test the property 'allowVcMigration'
     */
    @Test
    public void allowVcMigrationTest() {
        // TODO: test allowVcMigration
    }

    /**
     * Test the property 'connectionEditable'
     */
    @Test
    public void connectionEditableTest() {
        // TODO: test connectionEditable
    }

    /**
     * Test the property 'releaseVlan'
     */
    @Test
    public void releaseVlanTest() {
        // TODO: test releaseVlan
    }

    /**
     * Test the property 'maxConnectionsOnPort'
     */
    @Test
    public void maxConnectionsOnPortTest() {
        // TODO: test maxConnectionsOnPort
    }

    /**
     * Test the property 'portAssignmentStrategy'
     */
    @Test
    public void portAssignmentStrategyTest() {
        // TODO: test portAssignmentStrategy
    }

    /**
     * Test the property 'eqxManagedPort'
     */
    @Test
    public void eqxManagedPortTest() {
        // TODO: test eqxManagedPort
    }

    /**
     * Test the property 'connectionNameEditable'
     */
    @Test
    public void connectionNameEditableTest() {
        // TODO: test connectionNameEditable
    }

}

/*
 * Equinix Fabric API v4
 * Equinix Fabric is an advanced software-defined interconnection solution that enables you to directly, securely and dynamically connect to distributed infrastructure and digital ecosystems on platform Equinix via a single port, Customers can use Fabric to connect to: </br> 1. Cloud Service Providers - Clouds, network and other service providers.  </br> 2. Enterprises - Other Equinix customers, vendors and partners.  </br> 3. Myself - Another customer instance deployed at Equinix. </br>
 *
 * Contact: api-support@equinix.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.equinix.openapi.fabric.v4.model;

import com.equinix.openapi.fabric.v4.model.Changelog;
import com.equinix.openapi.fabric.v4.model.RouteTableEntryConnection;
import com.equinix.openapi.fabric.v4.model.RouteTableEntryProtocolType;
import com.equinix.openapi.fabric.v4.model.RouteTableEntryState;
import com.equinix.openapi.fabric.v4.model.RouteTableEntryType;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;


/**
 * Model tests for RouteTableEntry
 */
public class RouteTableEntryTest {
    private final RouteTableEntry model = new RouteTableEntry();

    /**
     * Model tests for RouteTableEntry
     */
    @Test
    public void testRouteTableEntry() {
        // TODO: test RouteTableEntry
    }

    /**
     * Test the property 'type'
     */
    @Test
    public void typeTest() {
        // TODO: test type
    }

    /**
     * Test the property 'protocolType'
     */
    @Test
    public void protocolTypeTest() {
        // TODO: test protocolType
    }

    /**
     * Test the property 'state'
     */
    @Test
    public void stateTest() {
        // TODO: test state
    }

    /**
     * Test the property 'age'
     */
    @Test
    public void ageTest() {
        // TODO: test age
    }

    /**
     * Test the property 'prefix'
     */
    @Test
    public void prefixTest() {
        // TODO: test prefix
    }

    /**
     * Test the property 'nextHop'
     */
    @Test
    public void nextHopTest() {
        // TODO: test nextHop
    }

    /**
     * Test the property 'metric'
     */
    @Test
    public void metricTest() {
        // TODO: test metric
    }

    /**
     * Test the property 'localPreference'
     */
    @Test
    public void localPreferenceTest() {
        // TODO: test localPreference
    }

    /**
     * Test the property 'asPath'
     */
    @Test
    public void asPathTest() {
        // TODO: test asPath
    }

    /**
     * Test the property 'connection'
     */
    @Test
    public void connectionTest() {
        // TODO: test connection
    }

    /**
     * Test the property 'changeLog'
     */
    @Test
    public void changeLogTest() {
        // TODO: test changeLog
    }

}

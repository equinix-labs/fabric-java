/*
 * Equinix Fabric API v4
 * Equinix Fabric is an advanced software-defined interconnection solution that enables you to directly, securely and dynamically connect to distributed infrastructure and digital ecosystems on platform Equinix via a single port, Customers can use Fabric to connect to: </br> 1. Cloud Service Providers - Clouds, network and other service providers.  </br> 2. Enterprises - Other Equinix customers, vendors and partners.  </br> 3. Myself - Another customer instance deployed at Equinix. </br>
 *
 * The version of the OpenAPI document: 4.10
 * Contact: api-support@equinix.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.equinix.openapi.fabric.v4.model;

import com.equinix.openapi.fabric.v4.model.CustomField;
import com.equinix.openapi.fabric.v4.model.MarketingInfo;
import com.equinix.openapi.fabric.v4.model.ServiceMetro;
import com.equinix.openapi.fabric.v4.model.ServiceProfileAccessPointCOLO;
import com.equinix.openapi.fabric.v4.model.ServiceProfileAccessPointType;
import com.equinix.openapi.fabric.v4.model.ServiceProfileAccessPointVD;
import com.equinix.openapi.fabric.v4.model.ServiceProfileTypeEnum;
import com.equinix.openapi.fabric.v4.model.ServiceProfileVisibilityEnum;
import com.equinix.openapi.fabric.v4.model.SimplifiedNotification;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.net.URI;
import java.util.ArrayList;
import java.util.List;
import java.util.UUID;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;


/**
 * Model tests for SimplifiedServiceProfile
 */
public class SimplifiedServiceProfileTest {
    private final SimplifiedServiceProfile model = new SimplifiedServiceProfile();

    /**
     * Model tests for SimplifiedServiceProfile
     */
    @Test
    public void testSimplifiedServiceProfile() {
        // TODO: test SimplifiedServiceProfile
    }

    /**
     * Test the property 'href'
     */
    @Test
    public void hrefTest() {
        // TODO: test href
    }

    /**
     * Test the property 'type'
     */
    @Test
    public void typeTest() {
        // TODO: test type
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'uuid'
     */
    @Test
    public void uuidTest() {
        // TODO: test uuid
    }

    /**
     * Test the property 'description'
     */
    @Test
    public void descriptionTest() {
        // TODO: test description
    }

    /**
     * Test the property 'notifications'
     */
    @Test
    public void notificationsTest() {
        // TODO: test notifications
    }

    /**
     * Test the property 'tags'
     */
    @Test
    public void tagsTest() {
        // TODO: test tags
    }

    /**
     * Test the property 'visibility'
     */
    @Test
    public void visibilityTest() {
        // TODO: test visibility
    }

    /**
     * Test the property 'allowedEmails'
     */
    @Test
    public void allowedEmailsTest() {
        // TODO: test allowedEmails
    }

    /**
     * Test the property 'accessPointTypeConfigs'
     */
    @Test
    public void accessPointTypeConfigsTest() {
        // TODO: test accessPointTypeConfigs
    }

    /**
     * Test the property 'customFields'
     */
    @Test
    public void customFieldsTest() {
        // TODO: test customFields
    }

    /**
     * Test the property 'marketingInfo'
     */
    @Test
    public void marketingInfoTest() {
        // TODO: test marketingInfo
    }

    /**
     * Test the property 'ports'
     */
    @Test
    public void portsTest() {
        // TODO: test ports
    }

    /**
     * Test the property 'virtualDevices'
     */
    @Test
    public void virtualDevicesTest() {
        // TODO: test virtualDevices
    }

    /**
     * Test the property 'metros'
     */
    @Test
    public void metrosTest() {
        // TODO: test metros
    }

    /**
     * Test the property 'selfProfile'
     */
    @Test
    public void selfProfileTest() {
        // TODO: test selfProfile
    }

    /**
     * Test the property 'projectId'
     */
    @Test
    public void projectIdTest() {
        // TODO: test projectId
    }

}

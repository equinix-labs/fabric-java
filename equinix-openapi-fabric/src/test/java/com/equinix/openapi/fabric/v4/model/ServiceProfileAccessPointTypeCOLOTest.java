/*
 * Equinix Fabric API v4
 * Equinix Fabric is an advanced software-defined interconnection solution that enables you to directly, securely and dynamically connect to distributed infrastructure and digital ecosystems on platform Equinix via a single port, Customers can use Fabric to connect to: </br> 1. Cloud Service Providers - Clouds, network and other service providers.  </br> 2. Enterprises - Other Equinix customers, vendors and partners.  </br> 3. Myself - Another customer instance deployed at Equinix. </br>
 *
 * The version of the OpenAPI document: 4.8
 * Contact: api-support@equinix.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.equinix.openapi.fabric.v4.model;

import com.equinix.openapi.fabric.v4.model.ApiConfig;
import com.equinix.openapi.fabric.v4.model.AuthenticationKey;
import com.equinix.openapi.fabric.v4.model.ServiceProfileAccessPointTypeEnum;
import com.equinix.openapi.fabric.v4.model.ServiceProfileLinkProtocolConfig;
import com.equinix.openapi.fabric.v4.model.ServiceProfileMetadata;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;


/**
 * Model tests for ServiceProfileAccessPointTypeCOLO
 */
public class ServiceProfileAccessPointTypeCOLOTest {
    private final ServiceProfileAccessPointTypeCOLO model = new ServiceProfileAccessPointTypeCOLO();

    /**
     * Model tests for ServiceProfileAccessPointTypeCOLO
     */
    @Test
    public void testServiceProfileAccessPointTypeCOLO() {
        // TODO: test ServiceProfileAccessPointTypeCOLO
    }

    /**
     * Test the property 'uuid'
     */
    @Test
    public void uuidTest() {
        // TODO: test uuid
    }

    /**
     * Test the property 'type'
     */
    @Test
    public void typeTest() {
        // TODO: test type
    }

    /**
     * Test the property 'supportedBandwidths'
     */
    @Test
    public void supportedBandwidthsTest() {
        // TODO: test supportedBandwidths
    }

    /**
     * Test the property 'allowRemoteConnections'
     */
    @Test
    public void allowRemoteConnectionsTest() {
        // TODO: test allowRemoteConnections
    }

    /**
     * Test the property 'allowCustomBandwidth'
     */
    @Test
    public void allowCustomBandwidthTest() {
        // TODO: test allowCustomBandwidth
    }

    /**
     * Test the property 'bandwidthAlertThreshold'
     */
    @Test
    public void bandwidthAlertThresholdTest() {
        // TODO: test bandwidthAlertThreshold
    }

    /**
     * Test the property 'allowBandwidthAutoApproval'
     */
    @Test
    public void allowBandwidthAutoApprovalTest() {
        // TODO: test allowBandwidthAutoApproval
    }

    /**
     * Test the property 'allowBandwidthUpgrade'
     */
    @Test
    public void allowBandwidthUpgradeTest() {
        // TODO: test allowBandwidthUpgrade
    }

    /**
     * Test the property 'linkProtocolConfig'
     */
    @Test
    public void linkProtocolConfigTest() {
        // TODO: test linkProtocolConfig
    }

    /**
     * Test the property 'enableAutoGenerateServiceKey'
     */
    @Test
    public void enableAutoGenerateServiceKeyTest() {
        // TODO: test enableAutoGenerateServiceKey
    }

    /**
     * Test the property 'connectionRedundancyRequired'
     */
    @Test
    public void connectionRedundancyRequiredTest() {
        // TODO: test connectionRedundancyRequired
    }

    /**
     * Test the property 'apiConfig'
     */
    @Test
    public void apiConfigTest() {
        // TODO: test apiConfig
    }

    /**
     * Test the property 'connectionLabel'
     */
    @Test
    public void connectionLabelTest() {
        // TODO: test connectionLabel
    }

    /**
     * Test the property 'authenticationKey'
     */
    @Test
    public void authenticationKeyTest() {
        // TODO: test authenticationKey
    }

    /**
     * Test the property 'metadata'
     */
    @Test
    public void metadataTest() {
        // TODO: test metadata
    }

}

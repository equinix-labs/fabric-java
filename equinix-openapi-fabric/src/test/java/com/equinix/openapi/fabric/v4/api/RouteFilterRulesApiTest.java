/*
 * Equinix Fabric API v4
 *
 * Contact: api-support@equinix.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.equinix.openapi.fabric.v4.api;

import com.equinix.openapi.fabric.v4.model.RouteFilterRulesBase;
import com.equinix.openapi.fabric.v4.model.RouteFilterRulesPatchRequestItem;
import com.equinix.openapi.fabric.v4.model.RouteFilterRulesPostRequest;
import org.junit.Before;
import org.junit.Ignore;
import org.junit.Test;

import java.util.List;
import java.util.UUID;

/**
 * API tests for RouteFilterRulesApi
 */
@Ignore
public class RouteFilterRulesApiTest {

    private RouteFilterRulesApi api;

    @Before
    public void createApi() {
        api = new TokenGenerator().generate().routeFilterRules();
    }

    /**
     * Successful operation
     */
    @Test
    public void shouldSee202AfterCreateRouteFilterRule() {
        String routeFilterId = null;
        RouteFilterRulesBase routeFilterRulesBase = null;
        api.createRouteFilterRule()
                .routeFilterIdPath(routeFilterId)
                .body(routeFilterRulesBase).execute(r -> r);
        // TODO: test validations
    }

    /**
     * Successful operation
     */
    @Test
    public void shouldSee202AfterCreateRouteFilterRulesInBulk() {
        String routeFilterId = null;
        RouteFilterRulesPostRequest routeFilterRulesPostRequest = null;
        api.createRouteFilterRulesInBulk()
                .routeFilterIdPath(routeFilterId)
                .body(routeFilterRulesPostRequest).execute(r -> r);
        // TODO: test validations
    }

    /**
     * Successful operation
     */
    @Test
    public void shouldSee202AfterDeleteRouteFilterRuleByUuid() {
        String routeFilterId = null;
        String routeFilterRuleId = null;
        api.deleteRouteFilterRuleByUuid()
                .routeFilterIdPath(routeFilterId)
                .routeFilterRuleIdPath(routeFilterRuleId).execute(r -> r);
        // TODO: test validations
    }

    /**
     * Successful operation
     */
    @Test
    public void shouldSee202AfterGetRouteFilterRuleByUuid() {
        String routeFilterId = null;
        String routeFilterRuleId = null;
        api.getRouteFilterRuleByUuid()
                .routeFilterIdPath(routeFilterId)
                .routeFilterRuleIdPath(routeFilterRuleId).execute(r -> r);
        // TODO: test validations
    }

    /**
     * Fabric Route Filter Change object
     */
    @Test
    public void shouldSee200AfterGetRouteFilterRuleChangeByUuid() {
        String routeFilterId = null;
        String routeFilterRuleId = null;
        UUID changeId = null;
        api.getRouteFilterRuleChangeByUuid()
                .routeFilterIdPath(routeFilterId)
                .routeFilterRuleIdPath(routeFilterRuleId)
                .changeIdPath(changeId).execute(r -> r);
        // TODO: test validations
    }

    /**
     * Fabric Route Filter Rule Change object
     */
    @Test
    public void shouldSee200AfterGetRouteFilterRuleChanges() {
        String routeFilterId = null;
        String routeFilterRuleId = null;
        Integer offset = null;
        Integer limit = null;
        api.getRouteFilterRuleChanges()
                .routeFilterIdPath(routeFilterId)
                .routeFilterRuleIdPath(routeFilterRuleId).execute(r -> r);
        // TODO: test validations
    }

    /**
     * Successful operation
     */
    @Test
    public void shouldSee200AfterGetRouteFilterRules() {
        String routeFilterId = null;
        Integer offset = null;
        Integer limit = null;
        api.getRouteFilterRules()
                .routeFilterIdPath(routeFilterId).execute(r -> r);
        // TODO: test validations
    }

    /**
     * Successful operation
     */
    @Test
    public void shouldSee202AfterPatchRouteFilterRuleByUuid() {
        String routeFilterId = null;
        String routeFilterRuleId = null;
        List<RouteFilterRulesPatchRequestItem> routeFilterRulesPatchRequestItem = null;
        api.patchRouteFilterRuleByUuid()
                .routeFilterIdPath(routeFilterId)
                .routeFilterRuleIdPath(routeFilterRuleId)
                .body(routeFilterRulesPatchRequestItem).execute(r -> r);
        // TODO: test validations
    }

    /**
     * Successful operation
     */
    @Test
    public void shouldSee202AfterReplaceRouteFilterRuleByUuid() {
        String routeFilterId = null;
        String routeFilterRuleId = null;
        RouteFilterRulesBase routeFilterRulesBase = null;
        api.replaceRouteFilterRuleByUuid()
                .routeFilterIdPath(routeFilterId)
                .routeFilterRuleIdPath(routeFilterRuleId)
                .body(routeFilterRulesBase).execute(r -> r);
        // TODO: test validations
    }
}

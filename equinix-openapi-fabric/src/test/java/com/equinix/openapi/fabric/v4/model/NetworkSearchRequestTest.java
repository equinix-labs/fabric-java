/*
 * Equinix Fabric API v4
 * Equinix Fabric is an advanced software-defined interconnection solution that enables you to directly, securely and dynamically connect to distributed infrastructure and digital ecosystems on platform Equinix via a single port, Customers can use Fabric to connect to: </br> 1. Cloud Service Providers - Clouds, network and other service providers.  </br> 2. Enterprises - Other Equinix customers, vendors and partners.  </br> 3. Myself - Another customer instance deployed at Equinix. </br>
 *
 * Contact: api-support@equinix.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.equinix.openapi.fabric.v4.model;

import com.equinix.openapi.fabric.v4.model.NetworkFilter;
import com.equinix.openapi.fabric.v4.model.NetworkSortCriteria;
import com.equinix.openapi.fabric.v4.model.PaginationRequest;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;


/**
 * Model tests for NetworkSearchRequest
 */
public class NetworkSearchRequestTest {
    private final NetworkSearchRequest model = new NetworkSearchRequest();

    /**
     * Model tests for NetworkSearchRequest
     */
    @Test
    public void testNetworkSearchRequest() {
        // TODO: test NetworkSearchRequest
    }

    /**
     * Test the property 'filter'
     */
    @Test
    public void filterTest() {
        // TODO: test filter
    }

    /**
     * Test the property 'pagination'
     */
    @Test
    public void paginationTest() {
        // TODO: test pagination
    }

    /**
     * Test the property 'sort'
     */
    @Test
    public void sortTest() {
        // TODO: test sort
    }

}

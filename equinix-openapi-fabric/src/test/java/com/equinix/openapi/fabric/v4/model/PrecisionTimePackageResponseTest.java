/*
 * Equinix Fabric API v4
 * Equinix Fabric is an advanced software-defined interconnection solution that enables you to directly, securely and dynamically connect to distributed infrastructure and digital ecosystems on platform Equinix via a single port, Customers can use Fabric to connect to: </br> 1. Cloud Service Providers - Clouds, network and other service providers.  </br> 2. Enterprises - Other Equinix customers, vendors and partners.  </br> 3. Myself - Another customer instance deployed at Equinix. </br>
 *
 * Contact: api-support@equinix.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.equinix.openapi.fabric.v4.model;

import com.equinix.openapi.fabric.v4.model.Changelog;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.net.URI;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;


/**
 * Model tests for PrecisionTimePackageResponse
 */
public class PrecisionTimePackageResponseTest {
    private final PrecisionTimePackageResponse model = new PrecisionTimePackageResponse();

    /**
     * Model tests for PrecisionTimePackageResponse
     */
    @Test
    public void testPrecisionTimePackageResponse() {
        // TODO: test PrecisionTimePackageResponse
    }

    /**
     * Test the property 'href'
     */
    @Test
    public void hrefTest() {
        // TODO: test href
    }

    /**
     * Test the property 'code'
     */
    @Test
    public void codeTest() {
        // TODO: test code
    }

    /**
     * Test the property 'type'
     */
    @Test
    public void typeTest() {
        // TODO: test type
    }

    /**
     * Test the property 'bandwidth'
     */
    @Test
    public void bandwidthTest() {
        // TODO: test bandwidth
    }

    /**
     * Test the property 'clientsPerSecondMax'
     */
    @Test
    public void clientsPerSecondMaxTest() {
        // TODO: test clientsPerSecondMax
    }

    /**
     * Test the property 'redundancySupported'
     */
    @Test
    public void redundancySupportedTest() {
        // TODO: test redundancySupported
    }

    /**
     * Test the property 'multiSubnetSupported'
     */
    @Test
    public void multiSubnetSupportedTest() {
        // TODO: test multiSubnetSupported
    }

    /**
     * Test the property 'accuracyUnit'
     */
    @Test
    public void accuracyUnitTest() {
        // TODO: test accuracyUnit
    }

    /**
     * Test the property 'accuracySla'
     */
    @Test
    public void accuracySlaTest() {
        // TODO: test accuracySla
    }

    /**
     * Test the property 'accuracyAvgMin'
     */
    @Test
    public void accuracyAvgMinTest() {
        // TODO: test accuracyAvgMin
    }

    /**
     * Test the property 'accuracyAvgMax'
     */
    @Test
    public void accuracyAvgMaxTest() {
        // TODO: test accuracyAvgMax
    }

    /**
     * Test the property 'changelog'
     */
    @Test
    public void changelogTest() {
        // TODO: test changelog
    }

}

/*
 * Equinix Fabric API v4
 *
 * Contact: api-support@equinix.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.equinix.openapi.fabric.v4.api;

import com.equinix.openapi.fabric.v4.model.ConnectionRouteFiltersBase;
import com.equinix.openapi.fabric.v4.model.RouteFiltersBase;
import com.equinix.openapi.fabric.v4.model.RouteFiltersPatchRequestItem;
import com.equinix.openapi.fabric.v4.model.RouteFiltersSearchBase;
import org.junit.Ignore;
import org.junit.Test;

import java.util.List;
import java.util.UUID;

/**
 * API tests for RouteFiltersApi
 */
@Ignore
public class RouteFiltersApiTest {

    private RouteFiltersApi api = TokenGenerator.getApiClient().routeFilters();

    /**
     * Successful operation
     */
    @Test
    public void shouldSee202AfterAttachConnectionRouteFilter() {
        String routeFilterId = null;
        String connectionId = null;
        ConnectionRouteFiltersBase connectionRouteFiltersBase = null;
        api.attachConnectionRouteFilter()
                .routeFilterIdPath(routeFilterId)
                .connectionIdPath(connectionId)
                .body(connectionRouteFiltersBase).execute(r -> r);
        // TODO: test validations
    }

    /**
     * Successful operation
     */
    @Test
    public void shouldSee202AfterCreateRouteFilter() {
        RouteFiltersBase routeFiltersBase = null;
        api.createRouteFilter()
                .body(routeFiltersBase).execute(r -> r);
        // TODO: test validations
    }

    /**
     * Successful operation
     */
    @Test
    public void shouldSee202AfterDeleteRouteFilterByUuid() {
        String routeFilterId = null;
        api.deleteRouteFilterByUuid()
                .routeFilterIdPath(routeFilterId).execute(r -> r);
        // TODO: test validations
    }

    /**
     * Successful operation
     */
    @Test
    public void shouldSee202AfterDetachConnectionRouteFilter() {
        String routeFilterId = null;
        String connectionId = null;
        api.detachConnectionRouteFilter()
                .routeFilterIdPath(routeFilterId)
                .connectionIdPath(connectionId).execute(r -> r);
        // TODO: test validations
    }

    /**
     * Successful operation
     */
    @Test
    public void shouldSee200AfterGetConnectionRouteFilterByUuid() {
        String routeFilterId = null;
        String connectionId = null;
        api.getConnectionRouteFilterByUuid()
                .routeFilterIdPath(routeFilterId)
                .connectionIdPath(connectionId).execute(r -> r);
        // TODO: test validations
    }

    /**
     * Successful operation
     */
    @Test
    public void shouldSee200AfterGetConnectionRouteFilters() {
        String connectionId = null;
        api.getConnectionRouteFilters()
                .connectionIdPath(connectionId).execute(r -> r);
        // TODO: test validations
    }

    /**
     * Successful operation
     */
    @Test
    public void shouldSee200AfterGetRouteFilterByUuid() {
        String routeFilterId = null;
        api.getRouteFilterByUuid()
                .routeFilterIdPath(routeFilterId).execute(r -> r);
        // TODO: test validations
    }

    /**
     * Fabric Route Filter Change object
     */
    @Test
    public void shouldSee200AfterGetRouteFilterChangeByUuid() {
        String routeFilterId = null;
        UUID changeId = null;
        api.getRouteFilterChangeByUuid()
                .routeFilterIdPath(routeFilterId)
                .changeIdPath(changeId).execute(r -> r);
        // TODO: test validations
    }

    /**
     * Fabric Route Filter Change object
     */
    @Test
    public void shouldSee200AfterGetRouteFilterChanges() {
        String routeFilterId = null;
        Integer offset = null;
        Integer limit = null;
        api.getRouteFilterChanges()
                .routeFilterIdPath(routeFilterId).execute(r -> r);
        // TODO: test validations
    }

    /**
     * Successful operation
     */
    @Test
    public void shouldSee200AfterGetRouteFilterConnections() {
        String routeFilterId = null;
        api.getRouteFilterConnections()
                .routeFilterIdPath(routeFilterId).execute(r -> r);
        // TODO: test validations
    }

    /**
     * Successful operation
     */
    @Test
    public void shouldSee202AfterPatchRouteFilterByUuid() {
        String routeFilterId = null;
        List<RouteFiltersPatchRequestItem> routeFiltersPatchRequestItem = null;
        api.patchRouteFilterByUuid()
                .routeFilterIdPath(routeFilterId)
                .body(routeFiltersPatchRequestItem).execute(r -> r);
        // TODO: test validations
    }

    /**
     * Successful operation
     */
    @Test
    public void shouldSee200AfterSearchRouteFilters() {
        RouteFiltersSearchBase routeFiltersSearchBase = null;
        api.searchRouteFilters()
                .body(routeFiltersSearchBase).execute(r -> r);
        // TODO: test validations
    }
}

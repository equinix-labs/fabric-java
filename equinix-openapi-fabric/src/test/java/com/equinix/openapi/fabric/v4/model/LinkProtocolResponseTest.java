/*
 * Equinix Fabric API v4
 * Equinix Fabric is an advanced software-defined interconnection solution that enables you to directly, securely and dynamically connect to distributed infrastructure and digital ecosystems on platform Equinix via a single port, Customers can use Fabric to connect to: </br> 1. Cloud Service Providers - Clouds, network and other service providers.  </br> 2. Enterprises - Other Equinix customers, vendors and partners.  </br> 3. Myself - Another customer instance deployed at Equinix. </br>
 *
 * Contact: api-support@equinix.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.equinix.openapi.fabric.v4.model;

import com.equinix.openapi.fabric.v4.model.AdditionalInfo;
import com.equinix.openapi.fabric.v4.model.Changelog;
import com.equinix.openapi.fabric.v4.model.LinkProtocolConnection;
import com.equinix.openapi.fabric.v4.model.LinkProtocolRequestType;
import com.equinix.openapi.fabric.v4.model.LinkProtocolServiceToken;
import com.equinix.openapi.fabric.v4.model.LinkProtocolState;
import com.equinix.openapi.fabric.v4.model.SubInterface;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.UUID;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;


/**
 * Model tests for LinkProtocolResponse
 */
public class LinkProtocolResponseTest {
    private final LinkProtocolResponse model = new LinkProtocolResponse();

    /**
     * Model tests for LinkProtocolResponse
     */
    @Test
    public void testLinkProtocolResponse() {
        // TODO: test LinkProtocolResponse
    }

    /**
     * Test the property 'uuid'
     */
    @Test
    public void uuidTest() {
        // TODO: test uuid
    }

    /**
     * Test the property 'state'
     */
    @Test
    public void stateTest() {
        // TODO: test state
    }

    /**
     * Test the property 'type'
     */
    @Test
    public void typeTest() {
        // TODO: test type
    }

    /**
     * Test the property 'vlanTag'
     */
    @Test
    public void vlanTagTest() {
        // TODO: test vlanTag
    }

    /**
     * Test the property 'vlanTagMin'
     */
    @Test
    public void vlanTagMinTest() {
        // TODO: test vlanTagMin
    }

    /**
     * Test the property 'vlanTagMax'
     */
    @Test
    public void vlanTagMaxTest() {
        // TODO: test vlanTagMax
    }

    /**
     * Test the property 'vlanSTag'
     */
    @Test
    public void vlanSTagTest() {
        // TODO: test vlanSTag
    }

    /**
     * Test the property 'vlanCTag'
     */
    @Test
    public void vlanCTagTest() {
        // TODO: test vlanCTag
    }

    /**
     * Test the property 'vlanCTagMin'
     */
    @Test
    public void vlanCTagMinTest() {
        // TODO: test vlanCTagMin
    }

    /**
     * Test the property 'vlanCTagMax'
     */
    @Test
    public void vlanCTagMaxTest() {
        // TODO: test vlanCTagMax
    }

    /**
     * Test the property 'subInterface'
     */
    @Test
    public void subInterfaceTest() {
        // TODO: test subInterface
    }

    /**
     * Test the property 'additionalInfo'
     */
    @Test
    public void additionalInfoTest() {
        // TODO: test additionalInfo
    }

    /**
     * Test the property 'connection'
     */
    @Test
    public void connectionTest() {
        // TODO: test connection
    }

    /**
     * Test the property 'serviceToken'
     */
    @Test
    public void serviceTokenTest() {
        // TODO: test serviceToken
    }

    /**
     * Test the property 'changeLog'
     */
    @Test
    public void changeLogTest() {
        // TODO: test changeLog
    }

}

/*
 * Equinix Fabric API v4
 * Equinix Fabric is an advanced software-defined interconnection solution that enables you to directly, securely and dynamically connect to distributed infrastructure and digital ecosystems on platform Equinix via a single port, Customers can use Fabric to connect to: </br> 1. Cloud Service Providers - Clouds, network and other service providers.  </br> 2. Enterprises - Other Equinix customers, vendors and partners.  </br> 3. Myself - Another customer instance deployed at Equinix. </br>
 *
 * The version of the OpenAPI document: 4.10
 * Contact: api-support@equinix.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.equinix.openapi.fabric.v4.model;

import com.equinix.openapi.fabric.v4.model.FabricCloudRouterPrice;
import com.equinix.openapi.fabric.v4.model.IpBlockPrice;
import com.equinix.openapi.fabric.v4.model.PriceCategory;
import com.equinix.openapi.fabric.v4.model.PriceCharge;
import com.equinix.openapi.fabric.v4.model.ProductType;
import com.equinix.openapi.fabric.v4.model.SimplifiedAccount;
import com.equinix.openapi.fabric.v4.model.VirtualConnectionPrice;
import com.equinix.openapi.fabric.v4.model.VirtualPortPrice;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;


/**
 * Model tests for Price
 */
public class PriceTest {
    private final Price model = new Price();

    /**
     * Model tests for Price
     */
    @Test
    public void testPrice() {
        // TODO: test Price
    }

    /**
     * Test the property 'href'
     */
    @Test
    public void hrefTest() {
        // TODO: test href
    }

    /**
     * Test the property 'type'
     */
    @Test
    public void typeTest() {
        // TODO: test type
    }

    /**
     * Test the property 'code'
     */
    @Test
    public void codeTest() {
        // TODO: test code
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'description'
     */
    @Test
    public void descriptionTest() {
        // TODO: test description
    }

    /**
     * Test the property 'account'
     */
    @Test
    public void accountTest() {
        // TODO: test account
    }

    /**
     * Test the property 'charges'
     */
    @Test
    public void chargesTest() {
        // TODO: test charges
    }

    /**
     * Test the property 'currency'
     */
    @Test
    public void currencyTest() {
        // TODO: test currency
    }

    /**
     * Test the property 'termLength'
     */
    @Test
    public void termLengthTest() {
        // TODO: test termLength
    }

    /**
     * Test the property 'catgory'
     */
    @Test
    public void catgoryTest() {
        // TODO: test catgory
    }

    /**
     * Test the property 'connection'
     */
    @Test
    public void connectionTest() {
        // TODO: test connection
    }

    /**
     * Test the property 'ipBlock'
     */
    @Test
    public void ipBlockTest() {
        // TODO: test ipBlock
    }

    /**
     * Test the property 'router'
     */
    @Test
    public void routerTest() {
        // TODO: test router
    }

    /**
     * Test the property 'port'
     */
    @Test
    public void portTest() {
        // TODO: test port
    }

}

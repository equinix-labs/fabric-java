/*
 * Equinix Fabric API v4
 * Equinix Fabric is an advanced software-defined interconnection solution that enables you to directly, securely and dynamically connect to distributed infrastructure and digital ecosystems on platform Equinix via a single port, Customers can use Fabric to connect to: </br> 1. Cloud Service Providers - Clouds, network and other service providers.  </br> 2. Enterprises - Other Equinix customers, vendors and partners.  </br> 3. Myself - Another customer instance deployed at Equinix. </br>
 *
 * The version of the OpenAPI document: 4.10
 * Contact: api-support@equinix.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.equinix.openapi.fabric.v4.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;


/**
 * Model tests for PtpAdvanceConfiguration
 */
public class PtpAdvanceConfigurationTest {
    private final PtpAdvanceConfiguration model = new PtpAdvanceConfiguration();

    /**
     * Model tests for PtpAdvanceConfiguration
     */
    @Test
    public void testPtpAdvanceConfiguration() {
        // TODO: test PtpAdvanceConfiguration
    }

    /**
     * Test the property 'timeScale'
     */
    @Test
    public void timeScaleTest() {
        // TODO: test timeScale
    }

    /**
     * Test the property 'domain'
     */
    @Test
    public void domainTest() {
        // TODO: test domain
    }

    /**
     * Test the property 'priority1'
     */
    @Test
    public void priority1Test() {
        // TODO: test priority1
    }

    /**
     * Test the property 'priority2'
     */
    @Test
    public void priority2Test() {
        // TODO: test priority2
    }

    /**
     * Test the property 'logAnnounceInterval'
     */
    @Test
    public void logAnnounceIntervalTest() {
        // TODO: test logAnnounceInterval
    }

    /**
     * Test the property 'logSyncInterval'
     */
    @Test
    public void logSyncIntervalTest() {
        // TODO: test logSyncInterval
    }

    /**
     * Test the property 'logDelayReqInterval'
     */
    @Test
    public void logDelayReqIntervalTest() {
        // TODO: test logDelayReqInterval
    }

    /**
     * Test the property 'transportMode'
     */
    @Test
    public void transportModeTest() {
        // TODO: test transportMode
    }

    /**
     * Test the property 'grantTime'
     */
    @Test
    public void grantTimeTest() {
        // TODO: test grantTime
    }

}

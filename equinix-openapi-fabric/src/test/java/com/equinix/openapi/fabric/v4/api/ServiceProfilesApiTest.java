/*
 * Equinix Fabric API v4
 *
 * Contact: api-support@equinix.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.equinix.openapi.fabric.v4.api;

import com.equinix.openapi.fabric.ApiClient;
import com.equinix.openapi.fabric.v4.model.JsonPatchOperation;
import com.equinix.openapi.fabric.v4.model.ServiceProfileRequest;
import com.equinix.openapi.fabric.v4.model.ServiceProfileSearchRequest;
import io.restassured.builder.RequestSpecBuilder;
import io.restassured.filter.log.ErrorLoggingFilter;
import org.junit.Before;
import org.junit.Ignore;
import org.junit.Test;

import java.util.List;
import java.util.UUID;

import static com.equinix.openapi.fabric.JacksonObjectMapper.jackson;
import static io.restassured.config.ObjectMapperConfig.objectMapperConfig;
import static io.restassured.config.RestAssuredConfig.config;

/**
 * API tests for ServiceProfilesApi
 */
@Ignore
public class ServiceProfilesApiTest {

    private ServiceProfilesApi api;

    @Before
    public void createApi() {
        api = ApiClient.api(ApiClient.Config.apiConfig().reqSpecSupplier(
                () -> new RequestSpecBuilder()
                        .setConfig(config().objectMapperConfig(objectMapperConfig().defaultObjectMapper(jackson())))
                        .addFilter(new ErrorLoggingFilter())
                        .setBaseUri("https://api.equinix.com"))).serviceProfiles();
    }

    /**
     * Successful Create operation
     */
    @Test
    public void shouldSee201AfterCreateServiceProfile() {
        ServiceProfileRequest serviceProfileRequest = null;
        api.createServiceProfile()
                .body(serviceProfileRequest).execute(r -> r.prettyPeek());
        // TODO: test validations
    }

    /**
     * Bad request
     */
    @Test
    public void shouldSee400AfterCreateServiceProfile() {
        ServiceProfileRequest serviceProfileRequest = null;
        api.createServiceProfile()
                .body(serviceProfileRequest).execute(r -> r.prettyPeek());
        // TODO: test validations
    }

    /**
     * Unauthorized
     */
    @Test
    public void shouldSee401AfterCreateServiceProfile() {
        ServiceProfileRequest serviceProfileRequest = null;
        api.createServiceProfile()
                .body(serviceProfileRequest).execute(r -> r.prettyPeek());
        // TODO: test validations
    }

    /**
     * Forbidden
     */
    @Test
    public void shouldSee403AfterCreateServiceProfile() {
        ServiceProfileRequest serviceProfileRequest = null;
        api.createServiceProfile()
                .body(serviceProfileRequest).execute(r -> r.prettyPeek());
        // TODO: test validations
    }

    /**
     * Internal Server Error
     */
    @Test
    public void shouldSee500AfterCreateServiceProfile() {
        ServiceProfileRequest serviceProfileRequest = null;
        api.createServiceProfile()
                .body(serviceProfileRequest).execute(r -> r.prettyPeek());
        // TODO: test validations
    }


    /**
     * Successful Delete operation
     */
    @Test
    public void shouldSee200AfterDeleteServiceProfileByUuid() {
        UUID serviceProfileId = null;
        api.deleteServiceProfileByUuid()
                .serviceProfileIdPath(serviceProfileId).execute(r -> r.prettyPeek());
        // TODO: test validations
    }

    /**
     * Bad request
     */
    @Test
    public void shouldSee400AfterDeleteServiceProfileByUuid() {
        UUID serviceProfileId = null;
        api.deleteServiceProfileByUuid()
                .serviceProfileIdPath(serviceProfileId).execute(r -> r.prettyPeek());
        // TODO: test validations
    }

    /**
     * Unauthorized
     */
    @Test
    public void shouldSee401AfterDeleteServiceProfileByUuid() {
        UUID serviceProfileId = null;
        api.deleteServiceProfileByUuid()
                .serviceProfileIdPath(serviceProfileId).execute(r -> r.prettyPeek());
        // TODO: test validations
    }

    /**
     * Forbidden
     */
    @Test
    public void shouldSee403AfterDeleteServiceProfileByUuid() {
        UUID serviceProfileId = null;
        api.deleteServiceProfileByUuid()
                .serviceProfileIdPath(serviceProfileId).execute(r -> r.prettyPeek());
        // TODO: test validations
    }

    /**
     * Not Found
     */
    @Test
    public void shouldSee404AfterDeleteServiceProfileByUuid() {
        UUID serviceProfileId = null;
        api.deleteServiceProfileByUuid()
                .serviceProfileIdPath(serviceProfileId).execute(r -> r.prettyPeek());
        // TODO: test validations
    }

    /**
     * Internal Server Error
     */
    @Test
    public void shouldSee500AfterDeleteServiceProfileByUuid() {
        UUID serviceProfileId = null;
        api.deleteServiceProfileByUuid()
                .serviceProfileIdPath(serviceProfileId).execute(r -> r.prettyPeek());
        // TODO: test validations
    }


    /**
     * Successful operation
     */
    @Test
    public void shouldSee200AfterGetServiceProfileByUuid() {
        UUID serviceProfileId = null;
        String viewPoint = null;
        api.getServiceProfileByUuid()
                .serviceProfileIdPath(serviceProfileId).execute(r -> r.prettyPeek());
        // TODO: test validations
    }

    /**
     * Bad request
     */
    @Test
    public void shouldSee400AfterGetServiceProfileByUuid() {
        UUID serviceProfileId = null;
        String viewPoint = null;
        api.getServiceProfileByUuid()
                .serviceProfileIdPath(serviceProfileId).execute(r -> r.prettyPeek());
        // TODO: test validations
    }

    /**
     * Unauthorized
     */
    @Test
    public void shouldSee401AfterGetServiceProfileByUuid() {
        UUID serviceProfileId = null;
        String viewPoint = null;
        api.getServiceProfileByUuid()
                .serviceProfileIdPath(serviceProfileId).execute(r -> r.prettyPeek());
        // TODO: test validations
    }

    /**
     * Forbidden
     */
    @Test
    public void shouldSee403AfterGetServiceProfileByUuid() {
        UUID serviceProfileId = null;
        String viewPoint = null;
        api.getServiceProfileByUuid()
                .serviceProfileIdPath(serviceProfileId).execute(r -> r.prettyPeek());
        // TODO: test validations
    }

    /**
     * Internal Server Error
     */
    @Test
    public void shouldSee500AfterGetServiceProfileByUuid() {
        UUID serviceProfileId = null;
        String viewPoint = null;
        api.getServiceProfileByUuid()
                .serviceProfileIdPath(serviceProfileId).execute(r -> r.prettyPeek());
        // TODO: test validations
    }


    /**
     * Successful operation
     */
    @Test
    public void shouldSee200AfterGetServiceProfileMetrosByUuid() {
        UUID serviceProfileId = null;
        Integer offset = null;
        Integer limit = null;
        api.getServiceProfileMetrosByUuid()
                .serviceProfileIdPath(serviceProfileId).execute(r -> r.prettyPeek());
        // TODO: test validations
    }

    /**
     * Bad request
     */
    @Test
    public void shouldSee400AfterGetServiceProfileMetrosByUuid() {
        UUID serviceProfileId = null;
        Integer offset = null;
        Integer limit = null;
        api.getServiceProfileMetrosByUuid()
                .serviceProfileIdPath(serviceProfileId).execute(r -> r.prettyPeek());
        // TODO: test validations
    }

    /**
     * Unauthorized
     */
    @Test
    public void shouldSee401AfterGetServiceProfileMetrosByUuid() {
        UUID serviceProfileId = null;
        Integer offset = null;
        Integer limit = null;
        api.getServiceProfileMetrosByUuid()
                .serviceProfileIdPath(serviceProfileId).execute(r -> r.prettyPeek());
        // TODO: test validations
    }

    /**
     * Forbidden
     */
    @Test
    public void shouldSee403AfterGetServiceProfileMetrosByUuid() {
        UUID serviceProfileId = null;
        Integer offset = null;
        Integer limit = null;
        api.getServiceProfileMetrosByUuid()
                .serviceProfileIdPath(serviceProfileId).execute(r -> r.prettyPeek());
        // TODO: test validations
    }

    /**
     * Internal Server Error
     */
    @Test
    public void shouldSee500AfterGetServiceProfileMetrosByUuid() {
        UUID serviceProfileId = null;
        Integer offset = null;
        Integer limit = null;
        api.getServiceProfileMetrosByUuid()
                .serviceProfileIdPath(serviceProfileId).execute(r -> r.prettyPeek());
        // TODO: test validations
    }


    /**
     * Successful operation
     */
    @Test
    public void shouldSee200AfterGetServiceProfiles() {
        Integer offset = null;
        Integer limit = null;
        String viewPoint = null;
        api.getServiceProfiles().execute(r -> r.prettyPeek());
        // TODO: test validations
    }

    /**
     * Bad request
     */
    @Test
    public void shouldSee400AfterGetServiceProfiles() {
        Integer offset = null;
        Integer limit = null;
        String viewPoint = null;
        api.getServiceProfiles().execute(r -> r.prettyPeek());
        // TODO: test validations
    }

    /**
     * Unauthorized
     */
    @Test
    public void shouldSee401AfterGetServiceProfiles() {
        Integer offset = null;
        Integer limit = null;
        String viewPoint = null;
        api.getServiceProfiles().execute(r -> r.prettyPeek());
        // TODO: test validations
    }

    /**
     * Forbidden
     */
    @Test
    public void shouldSee403AfterGetServiceProfiles() {
        Integer offset = null;
        Integer limit = null;
        String viewPoint = null;
        api.getServiceProfiles().execute(r -> r.prettyPeek());
        // TODO: test validations
    }

    /**
     * Internal Server Error
     */
    @Test
    public void shouldSee500AfterGetServiceProfiles() {
        Integer offset = null;
        Integer limit = null;
        String viewPoint = null;
        api.getServiceProfiles().execute(r -> r.prettyPeek());
        // TODO: test validations
    }


    /**
     * Successful Put operation
     */
    @Test
    public void shouldSee202AfterPutServiceProfileByUuid() {
        UUID serviceProfileId = null;
        String ifMatch = null;
        ServiceProfileRequest serviceProfileRequest = null;
        api.putServiceProfileByUuid()
                .serviceProfileIdPath(serviceProfileId)
                .ifMatchHeader(ifMatch)
                .body(serviceProfileRequest).execute(r -> r.prettyPeek());
        // TODO: test validations
    }

    /**
     * Bad request
     */
    @Test
    public void shouldSee400AfterPutServiceProfileByUuid() {
        UUID serviceProfileId = null;
        String ifMatch = null;
        ServiceProfileRequest serviceProfileRequest = null;
        api.putServiceProfileByUuid()
                .serviceProfileIdPath(serviceProfileId)
                .ifMatchHeader(ifMatch)
                .body(serviceProfileRequest).execute(r -> r.prettyPeek());
        // TODO: test validations
    }

    /**
     * Unauthorized
     */
    @Test
    public void shouldSee401AfterPutServiceProfileByUuid() {
        UUID serviceProfileId = null;
        String ifMatch = null;
        ServiceProfileRequest serviceProfileRequest = null;
        api.putServiceProfileByUuid()
                .serviceProfileIdPath(serviceProfileId)
                .ifMatchHeader(ifMatch)
                .body(serviceProfileRequest).execute(r -> r.prettyPeek());
        // TODO: test validations
    }

    /**
     * Forbidden
     */
    @Test
    public void shouldSee403AfterPutServiceProfileByUuid() {
        UUID serviceProfileId = null;
        String ifMatch = null;
        ServiceProfileRequest serviceProfileRequest = null;
        api.putServiceProfileByUuid()
                .serviceProfileIdPath(serviceProfileId)
                .ifMatchHeader(ifMatch)
                .body(serviceProfileRequest).execute(r -> r.prettyPeek());
        // TODO: test validations
    }

    /**
     * Not Found
     */
    @Test
    public void shouldSee404AfterPutServiceProfileByUuid() {
        UUID serviceProfileId = null;
        String ifMatch = null;
        ServiceProfileRequest serviceProfileRequest = null;
        api.putServiceProfileByUuid()
                .serviceProfileIdPath(serviceProfileId)
                .ifMatchHeader(ifMatch)
                .body(serviceProfileRequest).execute(r -> r.prettyPeek());
        // TODO: test validations
    }

    /**
     * Internal Server Error
     */
    @Test
    public void shouldSee500AfterPutServiceProfileByUuid() {
        UUID serviceProfileId = null;
        String ifMatch = null;
        ServiceProfileRequest serviceProfileRequest = null;
        api.putServiceProfileByUuid()
                .serviceProfileIdPath(serviceProfileId)
                .ifMatchHeader(ifMatch)
                .body(serviceProfileRequest).execute(r -> r.prettyPeek());
        // TODO: test validations
    }


    /**
     * Successful operation
     */
    @Test
    public void shouldSee200AfterSearchServiceProfiles() {
        ServiceProfileSearchRequest serviceProfileSearchRequest = null;
        String viewPoint = null;
        api.searchServiceProfiles()
                .body(serviceProfileSearchRequest).execute(r -> r.prettyPeek());
        // TODO: test validations
    }

    /**
     * Bad request
     */
    @Test
    public void shouldSee400AfterSearchServiceProfiles() {
        ServiceProfileSearchRequest serviceProfileSearchRequest = null;
        String viewPoint = null;
        api.searchServiceProfiles()
                .body(serviceProfileSearchRequest).execute(r -> r.prettyPeek());
        // TODO: test validations
    }

    /**
     * Unauthorized
     */
    @Test
    public void shouldSee401AfterSearchServiceProfiles() {
        ServiceProfileSearchRequest serviceProfileSearchRequest = null;
        String viewPoint = null;
        api.searchServiceProfiles()
                .body(serviceProfileSearchRequest).execute(r -> r.prettyPeek());
        // TODO: test validations
    }

    /**
     * Internal Server Error
     */
    @Test
    public void shouldSee500AfterSearchServiceProfiles() {
        ServiceProfileSearchRequest serviceProfileSearchRequest = null;
        String viewPoint = null;
        api.searchServiceProfiles()
                .body(serviceProfileSearchRequest).execute(r -> r.prettyPeek());
        // TODO: test validations
    }


    /**
     * Successful Patch operation
     */
    @Test
    public void shouldSee200AfterUpdateServiceProfileByUuid() {
        UUID serviceProfileId = null;
        String ifMatch = null;
        List<JsonPatchOperation> jsonPatchOperation = null;
        api.updateServiceProfileByUuid()
                .serviceProfileIdPath(serviceProfileId)
                .ifMatchHeader(ifMatch)
                .body(jsonPatchOperation).execute(r -> r.prettyPeek());
        // TODO: test validations
    }

    /**
     * Bad request
     */
    @Test
    public void shouldSee400AfterUpdateServiceProfileByUuid() {
        UUID serviceProfileId = null;
        String ifMatch = null;
        List<JsonPatchOperation> jsonPatchOperation = null;
        api.updateServiceProfileByUuid()
                .serviceProfileIdPath(serviceProfileId)
                .ifMatchHeader(ifMatch)
                .body(jsonPatchOperation).execute(r -> r.prettyPeek());
        // TODO: test validations
    }

    /**
     * Unauthorized
     */
    @Test
    public void shouldSee401AfterUpdateServiceProfileByUuid() {
        UUID serviceProfileId = null;
        String ifMatch = null;
        List<JsonPatchOperation> jsonPatchOperation = null;
        api.updateServiceProfileByUuid()
                .serviceProfileIdPath(serviceProfileId)
                .ifMatchHeader(ifMatch)
                .body(jsonPatchOperation).execute(r -> r.prettyPeek());
        // TODO: test validations
    }

    /**
     * Forbidden
     */
    @Test
    public void shouldSee403AfterUpdateServiceProfileByUuid() {
        UUID serviceProfileId = null;
        String ifMatch = null;
        List<JsonPatchOperation> jsonPatchOperation = null;
        api.updateServiceProfileByUuid()
                .serviceProfileIdPath(serviceProfileId)
                .ifMatchHeader(ifMatch)
                .body(jsonPatchOperation).execute(r -> r.prettyPeek());
        // TODO: test validations
    }

    /**
     * Not Found
     */
    @Test
    public void shouldSee404AfterUpdateServiceProfileByUuid() {
        UUID serviceProfileId = null;
        String ifMatch = null;
        List<JsonPatchOperation> jsonPatchOperation = null;
        api.updateServiceProfileByUuid()
                .serviceProfileIdPath(serviceProfileId)
                .ifMatchHeader(ifMatch)
                .body(jsonPatchOperation).execute(r -> r.prettyPeek());
        // TODO: test validations
    }

    /**
     * Precondition Failed
     */
    @Test
    public void shouldSee412AfterUpdateServiceProfileByUuid() {
        UUID serviceProfileId = null;
        String ifMatch = null;
        List<JsonPatchOperation> jsonPatchOperation = null;
        api.updateServiceProfileByUuid()
                .serviceProfileIdPath(serviceProfileId)
                .ifMatchHeader(ifMatch)
                .body(jsonPatchOperation).execute(r -> r.prettyPeek());
        // TODO: test validations
    }

    /**
     * Internal Server Error
     */
    @Test
    public void shouldSee500AfterUpdateServiceProfileByUuid() {
        UUID serviceProfileId = null;
        String ifMatch = null;
        List<JsonPatchOperation> jsonPatchOperation = null;
        api.updateServiceProfileByUuid()
                .serviceProfileIdPath(serviceProfileId)
                .ifMatchHeader(ifMatch)
                .body(jsonPatchOperation).execute(r -> r.prettyPeek());
        // TODO: test validations
    }

}

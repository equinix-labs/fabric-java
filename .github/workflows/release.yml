name: Generate next release
# This workflow will generate changelog and release notes.

on:
  workflow_dispatch:

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest

    outputs:
      new_release_published: ${{ steps.release.outputs.new_release_published }}
      new_release_git_tag: ${{ steps.release.outputs.new_release_git_tag }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 11
        uses: actions/setup-java@v4
        with:
          java-version: '11'
          distribution: 'temurin'

      - name: Release
        id: release
        uses: cycjimmy/semantic-release-action@v4.0.0
        with:
          semantic_version: 19.0.5
          extra_plugins: |
            @semantic-release/exec@6.0.3
            @semantic-release/git@10.0.0
            conventional-changelog-conventionalcommits@4.6.3
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SETTINGS_PATH: ${{ github.workspace }}/settings.xml
          GIT_AUTHOR_NAME: equinix-labs@auto-commit-workflow
          GIT_AUTHOR_EMAIL: bot@equinix.noreply.github.com
          GIT_COMMITTER_NAME: equinix-labs@auto-commit-workflow
          GIT_COMMITTER_EMAIL: bot@equinix.noreply.github.com

  publish:
    name: Publish artifacts
    runs-on: ubuntu-latest
    needs: release
    if: needs.release.outputs.new_release_published == 'true'

    permissions:
      id-token: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          path: equinix-openapi-fabric
          ssh-key: ${{ secrets.DEPLOY_KEY }}

      - name: Set up JDK 11
        uses: actions/setup-java@v4
        with:
          java-version: '11'
          distribution: 'temurin'
          server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
          settings-path: ${{ github.workspace }} # location for the settings.xml file

      - name: Build and publish package
        run: |
          cd equinix-openapi-fabric && mvn -B package --file pom.xml && mvn deploy -s ${process.env.SETTINGS_PATH} -DaltDeploymentRepository=github::default::https://maven.pkg.github.com/equinix-labs/fabric-java

/*
 * Equinix Fabric API v4
 * Equinix Fabric is an advanced software-defined interconnection solution that enables you to directly, securely and dynamically connect to distributed infrastructure and digital ecosystems on platform Equinix via a single port, Customers can use Fabric to connect to: </br> 1. Cloud Service Providers - Clouds, network and other service providers.  </br> 2. Enterprises - Other Equinix customers, vendors and partners.  </br> 3. Myself - Another customer instance deployed at Equinix. </br>
 *
 * Contact: api-support@equinix.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.equinix.openapi.fabric.v4.api;

import com.equinix.openapi.fabric.ApiException;
import com.equinix.openapi.fabric.v4.api.dto.port.PortDto;
import com.equinix.openapi.fabric.v4.api.dto.users.UsersItem;
import com.equinix.openapi.fabric.v4.api.helpers.Utils;
import com.equinix.openapi.fabric.v4.model.*;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.time.OffsetDateTime;
import java.time.ZoneOffset;
import java.time.temporal.ChronoUnit;
import java.util.Collections;
import java.util.UUID;

import static com.equinix.openapi.fabric.v4.api.helpers.Apis.statisticsApi;
import static org.junit.jupiter.api.Assertions.assertEquals;

/**
 * API tests for StatisticsApi
 */
@Disabled
public class StatisticsApiTest {
    private static final UsersItem.UserName userName = UsersItem.UserName.PANTHERS_FCR;

    /**
     * Get Stats by uuid
     * <p>
     * This API provides service-level metrics so that you can view access and gather key information required to manage service subscription sizing and capacity
     *
     * @throws ApiException if the Api call fails
     */
    @Disabled
    @Test
    public void getConnectionStatsByPortUuidTest() throws ApiException {
        //
        //String connectionId = null;
        //
        //OffsetDateTime startDateTime = null;
        //
        //OffsetDateTime endDateTime = null;
        //
        //ViewPoint viewPoint = null;
        //
        //Statistics response = api.getConnectionStatsByPortUuid(connectionId, startDateTime, endDateTime, viewPoint);

        // TODO: test validations
    }

    /**
     * Top Port Statistics
     * <p>
     * This API provides top utilized service-level traffic metrics so that you can view access and gather key information required to manage service subscription sizing and capacity.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getPortStatsTest() throws ApiException {
        String projectId = "291639000636552";
        TopUtilizedStatistics response = statisticsApi.getPortStats(
                Collections.singletonList(""),
                Sort._BANDWIDTHUTILIZATION,
                5,
                Duration.P7D,
                QueryDirection.OUTBOUND,
                MetricInterval.P7D,
                projectId);
        assertEquals(200, statisticsApi.getApiClient().getStatusCode());
    }

    /**
     * Get Stats by uuid
     * <p>
     * This API provides service-level traffic metrics so that you can view access and gather key information required to manage service subscription sizing and capacity.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getPortStatsByPortUuidTest() throws ApiException {
        UsersItem user = Utils.getUserData(userName);
        PortDto portDto = user.getPorts().get(0);
        OffsetDateTime startDate = OffsetDateTime.now().minusMonths(3).withOffsetSameLocal(ZoneOffset.UTC).truncatedTo(ChronoUnit.SECONDS);
        OffsetDateTime endDate = OffsetDateTime.now().withOffsetSameLocal(ZoneOffset.UTC).truncatedTo(ChronoUnit.SECONDS);

        Statistics response = statisticsApi.getPortStatsByPortUuid(UUID.fromString(portDto.getUuid()), startDate, endDate);
        assertEquals(200, statisticsApi.getApiClient().getStatusCode());
        assertEquals(portDto.getName(), response.getAdditionalProperties().get("name"));
    }
}

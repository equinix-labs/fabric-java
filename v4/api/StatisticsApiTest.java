/*
 * Equinix Fabric API v4
 *
 * Contact: api-support@equinix.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.equinix.openapi.fabric.v4.api;

import com.equinix.openapi.fabric.v4.model.*;
import org.junit.Before;
import org.junit.Ignore;
import org.junit.Test;

import java.time.OffsetDateTime;
import java.util.List;
import java.util.UUID;

/**
 * API tests for StatisticsApi
 */
@Ignore
public class StatisticsApiTest {

    private StatisticsApi api;

    @Before
    public void createApi() {
        api = new TokenGenerator().generate().statistics();
    }

    /**
     * Successful operation
     */
    @Test
    public void shouldSee200AfterGetConnectionStatsByPortUuid() {
        String connectionId = null;
        OffsetDateTime startDateTime = null;
        OffsetDateTime endDateTime = null;
        ViewPoint viewPoint = null;
        api.getConnectionStatsByPortUuid()
                .connectionIdPath(connectionId)
                .startDateTimeQuery(startDateTime)
                .endDateTimeQuery(endDateTime)
                .viewPointQuery(viewPoint).execute(r -> r);
        // TODO: test validations
    }

    /**
     * Successful operation
     */
    @Test
    public void shouldSee200AfterGetPortStats() {
        List<String> metros = null;
        Sort sort = null;
        Integer top = null;
        Duration duration = null;
        QueryDirection direction = null;
        MetricInterval metricInterval = null;
        String projectId = null;
        api.getPortStats()
                .metrosQuery(metros).execute(r -> r);
        // TODO: test validations
    }

    /**
     * Successful operation
     */
    @Test
    public void shouldSee200AfterGetPortStatsByPortUuid() {
        UUID portId = null;
        OffsetDateTime startDateTime = null;
        OffsetDateTime endDateTime = null;
        api.getPortStatsByPortUuid()
                .portIdPath(portId)
                .startDateTimeQuery(startDateTime)
                .endDateTimeQuery(endDateTime).execute(r -> r);
        // TODO: test validations
    }
}

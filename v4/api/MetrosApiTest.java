/*
 * Equinix Fabric API v4
 *
 * Contact: api-support@equinix.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.equinix.openapi.fabric.v4.api;

import com.equinix.openapi.fabric.v4.model.Metro;
import com.equinix.openapi.fabric.v4.model.MetroResponse;
import com.equinix.openapi.fabric.v4.model.Presence;
import io.restassured.response.Response;
import org.apache.http.HttpStatus;
import org.junit.Before;
import org.junit.Ignore;
import org.junit.Test;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertTrue;

/**
 * API tests for MetrosApi
 */
public class MetrosApiTest {

    private final String metroCode = "DC";
    private MetrosApi api;

    @Before
    public void createApi() {
        api = new TokenGenerator().generate().metros();
    }

    @Test
    public void getMetroByCode() {
        Response response = api.getMetroByCode()
                .metroCodePath(metroCode)
                .execute(r -> r);

        Metro metro = response.as(Metro.class);
        assertEquals(HttpStatus.SC_OK, response.getStatusCode());
        assertEquals(metroCode, metro.getCode());
    }

    @Test
    public void getMetros() {
        Response response = api.getMetros()
                .limitQuery(10)
                .offsetQuery(1)
                .presenceQuery(Presence.MY_PORTS)
                .execute(r -> r);

        MetroResponse metroResponse = response.as(MetroResponse.class);
        assertEquals(HttpStatus.SC_OK, response.getStatusCode());
        boolean metroFound = metroResponse.getData()
                .stream().anyMatch(metro -> metro.getCode().equals(metroCode));

        assertTrue(metroFound);
    }
}
